import org.strategoxt.stratego_lib.*;
import org.strategoxt.stratego_lib.*;
import org.strategoxt.stratego_rtg.*;
import org.strategoxt.stratego_sglr.*;
import org.strategoxt.stratego_gpp.*;
import org.strategoxt.stratego_xtc.*;
import org.strategoxt.stratego_aterm.*;
import org.strategoxt.stratego_sdf.*;
import org.strategoxt.stratego_tool_doc.*;
import randomLibrary.*;
import org.strategoxt.lang.*;
import org.spoofax.interpreter.terms.*;
import static org.strategoxt.lang.Term.*;
import org.spoofax.interpreter.library.AbstractPrimitive;
import java.util.ArrayList;
import java.lang.ref.WeakReference;

@SuppressWarnings("all") public class random_test  
{ 
  protected static final boolean TRACES_ENABLED = true;

  protected static ITermFactory constantFactory;

  private static WeakReference<Context> initedContext;

  private static boolean isIniting;

  protected static IStrategoTerm const498;

  protected static IStrategoTerm const497;

  protected static IStrategoTerm const496;

  protected static IStrategoTerm const495;

  protected static IStrategoTerm const494;

  protected static IStrategoTerm const493;

  protected static IStrategoTerm const492;

  protected static IStrategoTerm const491;

  protected static IStrategoTerm const490;

  protected static IStrategoTerm const489;

  protected static IStrategoTerm const488;

  protected static IStrategoTerm const487;

  protected static IStrategoTerm const486;

  protected static IStrategoTerm const485;

  protected static IStrategoTerm const484;

  protected static IStrategoTerm const483;

  protected static IStrategoTerm const482;

  protected static IStrategoTerm const481;

  protected static IStrategoTerm const480;

  protected static IStrategoTerm const479;

  protected static IStrategoTerm const478;

  protected static IStrategoTerm const477;

  protected static IStrategoTerm const476;

  protected static IStrategoTerm const475;

  protected static IStrategoTerm const474;

  protected static IStrategoTerm const473;

  protected static IStrategoTerm const472;

  protected static IStrategoTerm const471;

  protected static IStrategoTerm const470;

  protected static IStrategoTerm const469;

  protected static IStrategoTerm const468;

  protected static IStrategoTerm const467;

  protected static IStrategoTerm const466;

  protected static IStrategoTerm constCons72;

  protected static IStrategoTerm constreject0;

  protected static IStrategoTerm const465;

  protected static IStrategoTerm const464;

  protected static IStrategoTerm const463;

  protected static IStrategoTerm const462;

  protected static IStrategoTerm const461;

  protected static IStrategoTerm const460;

  protected static IStrategoTerm const459;

  protected static IStrategoTerm const458;

  protected static IStrategoTerm const457;

  protected static IStrategoTerm const456;

  protected static IStrategoTerm const455;

  protected static IStrategoTerm const454;

  protected static IStrategoTerm const453;

  protected static IStrategoTerm const452;

  protected static IStrategoTerm const451;

  protected static IStrategoTerm const450;

  protected static IStrategoTerm const449;

  protected static IStrategoTerm const448;

  protected static IStrategoTerm const447;

  protected static IStrategoTerm const446;

  protected static IStrategoTerm const445;

  protected static IStrategoTerm const444;

  protected static IStrategoTerm const443;

  protected static IStrategoTerm const442;

  protected static IStrategoTerm const441;

  protected static IStrategoTerm const440;

  protected static IStrategoTerm const439;

  protected static IStrategoTerm const438;

  protected static IStrategoTerm const437;

  protected static IStrategoTerm const436;

  protected static IStrategoTerm const435;

  protected static IStrategoTerm const434;

  protected static IStrategoTerm const433;

  protected static IStrategoTerm const432;

  protected static IStrategoTerm const431;

  protected static IStrategoTerm const430;

  protected static IStrategoTerm const429;

  protected static IStrategoTerm const428;

  protected static IStrategoTerm const427;

  protected static IStrategoTerm const426;

  protected static IStrategoTerm const425;

  protected static IStrategoTerm const424;

  protected static IStrategoTerm const423;

  protected static IStrategoTerm const422;

  protected static IStrategoTerm const421;

  protected static IStrategoTerm const420;

  protected static IStrategoTerm const419;

  protected static IStrategoTerm const418;

  protected static IStrategoTerm constCons71;

  protected static IStrategoTerm const417;

  protected static IStrategoTerm const416;

  protected static IStrategoTerm constCons70;

  protected static IStrategoTerm const415;

  protected static IStrategoTerm const414;

  protected static IStrategoTerm const413;

  protected static IStrategoTerm const412;

  protected static IStrategoTerm const411;

  protected static IStrategoTerm const410;

  protected static IStrategoTerm const409;

  protected static IStrategoTerm const408;

  protected static IStrategoTerm constCons69;

  protected static IStrategoTerm const407;

  protected static IStrategoTerm const406;

  protected static IStrategoTerm constCons68;

  protected static IStrategoTerm const405;

  protected static IStrategoTerm const404;

  protected static IStrategoTerm constCons67;

  protected static IStrategoTerm const403;

  protected static IStrategoTerm const402;

  protected static IStrategoTerm const401;

  protected static IStrategoTerm const400;

  protected static IStrategoTerm const399;

  protected static IStrategoTerm const398;

  protected static IStrategoTerm constCons66;

  protected static IStrategoTerm const397;

  protected static IStrategoTerm constCons65;

  protected static IStrategoTerm const396;

  protected static IStrategoTerm constCons64;

  protected static IStrategoTerm const395;

  protected static IStrategoTerm constCons63;

  protected static IStrategoTerm const394;

  protected static IStrategoTerm const393;

  protected static IStrategoTerm const392;

  protected static IStrategoTerm const391;

  protected static IStrategoTerm const390;

  protected static IStrategoTerm constCons62;

  protected static IStrategoTerm constCons61;

  protected static IStrategoTerm const389;

  protected static IStrategoTerm const388;

  protected static IStrategoTerm const387;

  protected static IStrategoTerm constCons60;

  protected static IStrategoTerm const386;

  protected static IStrategoTerm const385;

  protected static IStrategoTerm const384;

  protected static IStrategoTerm constCons59;

  protected static IStrategoTerm const383;

  protected static IStrategoTerm const382;

  protected static IStrategoTerm const381;

  protected static IStrategoTerm constCons58;

  protected static IStrategoTerm const380;

  protected static IStrategoTerm const379;

  protected static IStrategoTerm const378;

  protected static IStrategoTerm const377;

  protected static IStrategoTerm const376;

  protected static IStrategoTerm constCons57;

  protected static IStrategoTerm const375;

  protected static IStrategoTerm const374;

  protected static IStrategoTerm constCons56;

  protected static IStrategoTerm const373;

  protected static IStrategoTerm const372;

  protected static IStrategoTerm const371;

  protected static IStrategoTerm const370;

  protected static IStrategoTerm const369;

  protected static IStrategoTerm const368;

  protected static IStrategoTerm const367;

  protected static IStrategoTerm const366;

  protected static IStrategoTerm const365;

  protected static IStrategoTerm const364;

  protected static IStrategoTerm const363;

  protected static IStrategoTerm const362;

  protected static IStrategoTerm const361;

  protected static IStrategoTerm const360;

  protected static IStrategoTerm const359;

  protected static IStrategoTerm const358;

  protected static IStrategoTerm const357;

  protected static IStrategoTerm const356;

  protected static IStrategoTerm const355;

  protected static IStrategoTerm const354;

  protected static IStrategoTerm const353;

  protected static IStrategoTerm const352;

  protected static IStrategoTerm const351;

  protected static IStrategoTerm const350;

  protected static IStrategoTerm const349;

  protected static IStrategoTerm const348;

  protected static IStrategoTerm const347;

  protected static IStrategoTerm const346;

  protected static IStrategoTerm const345;

  protected static IStrategoTerm const344;

  protected static IStrategoTerm const343;

  protected static IStrategoTerm const342;

  protected static IStrategoTerm const341;

  protected static IStrategoTerm const340;

  protected static IStrategoTerm const339;

  protected static IStrategoTerm const338;

  protected static IStrategoTerm const337;

  protected static IStrategoTerm const336;

  protected static IStrategoTerm const335;

  protected static IStrategoTerm const334;

  protected static IStrategoTerm const333;

  protected static IStrategoTerm const332;

  protected static IStrategoTerm const331;

  protected static IStrategoTerm const330;

  protected static IStrategoTerm const329;

  protected static IStrategoTerm const328;

  protected static IStrategoTerm constCons55;

  protected static IStrategoTerm const327;

  protected static IStrategoTerm const326;

  protected static IStrategoTerm const325;

  protected static IStrategoTerm const324;

  protected static IStrategoTerm const323;

  protected static IStrategoTerm const322;

  protected static IStrategoTerm const321;

  protected static IStrategoTerm const320;

  protected static IStrategoTerm const319;

  protected static IStrategoTerm const318;

  protected static IStrategoTerm const317;

  protected static IStrategoTerm const316;

  protected static IStrategoTerm const315;

  protected static IStrategoTerm const314;

  protected static IStrategoTerm const313;

  protected static IStrategoTerm const312;

  protected static IStrategoTerm const311;

  protected static IStrategoTerm const310;

  protected static IStrategoTerm const309;

  protected static IStrategoTerm const308;

  protected static IStrategoTerm const307;

  protected static IStrategoTerm const306;

  protected static IStrategoTerm const305;

  protected static IStrategoTerm const304;

  protected static IStrategoTerm const303;

  protected static IStrategoTerm const302;

  protected static IStrategoTerm const301;

  protected static IStrategoTerm const300;

  protected static IStrategoTerm const299;

  protected static IStrategoTerm const298;

  protected static IStrategoTerm const297;

  protected static IStrategoTerm const296;

  protected static IStrategoTerm const295;

  protected static IStrategoTerm const294;

  protected static IStrategoTerm const293;

  protected static IStrategoTerm const292;

  protected static IStrategoTerm constright0;

  protected static IStrategoTerm const291;

  protected static IStrategoTerm constnon_assoc0;

  protected static IStrategoTerm constassoc0;

  protected static IStrategoTerm constleft0;

  protected static IStrategoTerm const290;

  protected static IStrategoTerm const289;

  protected static IStrategoTerm const288;

  protected static IStrategoTerm const287;

  protected static IStrategoTerm const286;

  protected static IStrategoTerm const285;

  protected static IStrategoTerm const284;

  protected static IStrategoTerm const283;

  protected static IStrategoTerm const282;

  protected static IStrategoTerm const281;

  protected static IStrategoTerm const280;

  protected static IStrategoTerm const279;

  protected static IStrategoTerm const278;

  protected static IStrategoTerm constCons54;

  protected static IStrategoTerm const277;

  protected static IStrategoTerm const276;

  protected static IStrategoTerm constCons53;

  protected static IStrategoTerm const275;

  protected static IStrategoTerm const274;

  protected static IStrategoTerm const273;

  protected static IStrategoTerm const272;

  protected static IStrategoTerm const271;

  protected static IStrategoTerm const270;

  protected static IStrategoTerm const269;

  protected static IStrategoTerm const268;

  protected static IStrategoTerm const267;

  protected static IStrategoTerm const266;

  protected static IStrategoTerm const265;

  protected static IStrategoTerm const264;

  protected static IStrategoTerm const263;

  protected static IStrategoTerm const262;

  protected static IStrategoTerm const261;

  protected static IStrategoTerm const260;

  protected static IStrategoTerm const259;

  protected static IStrategoTerm const258;

  protected static IStrategoTerm const257;

  protected static IStrategoTerm const256;

  protected static IStrategoTerm const255;

  protected static IStrategoTerm const254;

  protected static IStrategoTerm const253;

  protected static IStrategoTerm const252;

  protected static IStrategoTerm const251;

  protected static IStrategoTerm const250;

  protected static IStrategoTerm constCons52;

  protected static IStrategoTerm const249;

  protected static IStrategoTerm const248;

  protected static IStrategoTerm const247;

  protected static IStrategoTerm const246;

  protected static IStrategoTerm const245;

  protected static IStrategoTerm constCons51;

  protected static IStrategoTerm const244;

  protected static IStrategoTerm const243;

  protected static IStrategoTerm constCons50;

  protected static IStrategoTerm const242;

  protected static IStrategoTerm const241;

  protected static IStrategoTerm const240;

  protected static IStrategoTerm const239;

  protected static IStrategoTerm const238;

  protected static IStrategoTerm const237;

  protected static IStrategoTerm const236;

  protected static IStrategoTerm const235;

  protected static IStrategoTerm constCons49;

  protected static IStrategoTerm const234;

  protected static IStrategoTerm const233;

  protected static IStrategoTerm const232;

  protected static IStrategoTerm constCons48;

  protected static IStrategoTerm const231;

  protected static IStrategoTerm const230;

  protected static IStrategoTerm constCons47;

  protected static IStrategoTerm const229;

  protected static IStrategoTerm const228;

  protected static IStrategoTerm const227;

  protected static IStrategoTerm const226;

  protected static IStrategoTerm const225;

  protected static IStrategoTerm const224;

  protected static IStrategoTerm const223;

  protected static IStrategoTerm const222;

  protected static IStrategoTerm const221;

  protected static IStrategoTerm const220;

  protected static IStrategoTerm const219;

  protected static IStrategoTerm const218;

  protected static IStrategoTerm const217;

  protected static IStrategoTerm const216;

  protected static IStrategoTerm const215;

  protected static IStrategoTerm const214;

  protected static IStrategoTerm const213;

  protected static IStrategoTerm const212;

  protected static IStrategoTerm const211;

  protected static IStrategoTerm const210;

  protected static IStrategoTerm const209;

  protected static IStrategoTerm const208;

  protected static IStrategoTerm const207;

  protected static IStrategoTerm const206;

  protected static IStrategoTerm const205;

  protected static IStrategoTerm const204;

  protected static IStrategoTerm const203;

  protected static IStrategoTerm const202;

  protected static IStrategoTerm const201;

  protected static IStrategoTerm const200;

  protected static IStrategoTerm const199;

  protected static IStrategoTerm const198;

  protected static IStrategoTerm const197;

  protected static IStrategoTerm const196;

  protected static IStrategoTerm const195;

  protected static IStrategoTerm const194;

  protected static IStrategoTerm const193;

  protected static IStrategoTerm constCons46;

  protected static IStrategoTerm const192;

  protected static IStrategoTerm constCons45;

  protected static IStrategoTerm const191;

  protected static IStrategoTerm const190;

  protected static IStrategoTerm const189;

  protected static IStrategoTerm const188;

  protected static IStrategoTerm const187;

  protected static IStrategoTerm constFix_Var0;

  protected static IStrategoTerm const186;

  protected static IStrategoTerm const185;

  protected static IStrategoTerm const184;

  protected static IStrategoTerm const183;

  protected static IStrategoTerm const182;

  protected static IStrategoTerm constCons44;

  protected static IStrategoTerm const181;

  protected static IStrategoTerm const180;

  protected static IStrategoTerm const179;

  protected static IStrategoTerm const178;

  protected static IStrategoTerm const177;

  protected static IStrategoTerm const176;

  protected static IStrategoTerm const175;

  protected static IStrategoTerm const174;

  protected static IStrategoTerm const173;

  protected static IStrategoTerm const172;

  protected static IStrategoTerm const171;

  protected static IStrategoTerm const170;

  protected static IStrategoTerm const169;

  protected static IStrategoTerm const168;

  protected static IStrategoTerm const167;

  protected static IStrategoTerm const166;

  protected static IStrategoTerm const165;

  protected static IStrategoTerm const164;

  protected static IStrategoTerm const163;

  protected static IStrategoTerm const162;

  protected static IStrategoTerm const161;

  protected static IStrategoTerm const160;

  protected static IStrategoTerm const159;

  protected static IStrategoTerm const158;

  protected static IStrategoTerm const157;

  protected static IStrategoTerm const156;

  protected static IStrategoTerm const155;

  protected static IStrategoTerm const154;

  protected static IStrategoTerm const153;

  protected static IStrategoTerm const152;

  protected static IStrategoTerm const151;

  protected static IStrategoTerm const150;

  protected static IStrategoTerm const149;

  protected static IStrategoTerm const148;

  protected static IStrategoTerm const147;

  protected static IStrategoTerm const146;

  protected static IStrategoTerm const145;

  protected static IStrategoTerm const144;

  protected static IStrategoTerm const143;

  protected static IStrategoTerm const142;

  protected static IStrategoTerm const141;

  protected static IStrategoTerm const140;

  protected static IStrategoTerm const139;

  protected static IStrategoTerm const138;

  protected static IStrategoTerm const137;

  protected static IStrategoTerm const136;

  protected static IStrategoTerm const135;

  protected static IStrategoTerm const134;

  protected static IStrategoTerm const133;

  protected static IStrategoTerm const132;

  protected static IStrategoTerm constsort0;

  protected static IStrategoTerm const131;

  protected static IStrategoTerm const130;

  protected static IStrategoTerm const129;

  protected static IStrategoTerm const128;

  protected static IStrategoTerm const127;

  protected static IStrategoTerm const126;

  protected static IStrategoTerm const125;

  protected static IStrategoTerm const124;

  protected static IStrategoTerm const123;

  protected static IStrategoTerm const122;

  protected static IStrategoTerm const121;

  protected static IStrategoTerm const120;

  protected static IStrategoTerm const119;

  protected static IStrategoTerm const118;

  protected static IStrategoTerm const117;

  protected static IStrategoTerm const116;

  protected static IStrategoTerm const115;

  protected static IStrategoTerm const114;

  protected static IStrategoTerm const113;

  protected static IStrategoTerm const112;

  protected static IStrategoTerm const111;

  protected static IStrategoTerm const110;

  protected static IStrategoTerm const109;

  protected static IStrategoTerm const108;

  protected static IStrategoTerm const107;

  protected static IStrategoTerm const106;

  protected static IStrategoTerm const105;

  protected static IStrategoTerm const104;

  protected static IStrategoTerm const103;

  protected static IStrategoTerm const102;

  protected static IStrategoTerm const101;

  protected static IStrategoTerm constCons43;

  protected static IStrategoTerm const100;

  protected static IStrategoTerm const99;

  protected static IStrategoTerm const98;

  protected static IStrategoTerm const97;

  protected static IStrategoTerm const96;

  protected static IStrategoTerm const95;

  protected static IStrategoTerm const94;

  protected static IStrategoTerm const93;

  protected static IStrategoTerm const92;

  protected static IStrategoTerm const91;

  protected static IStrategoTerm const90;

  protected static IStrategoTerm const89;

  protected static IStrategoTerm const88;

  protected static IStrategoTerm const87;

  protected static IStrategoTerm const86;

  protected static IStrategoTerm const85;

  protected static IStrategoTerm const84;

  protected static IStrategoTerm const83;

  protected static IStrategoTerm const82;

  protected static IStrategoTerm constCons42;

  protected static IStrategoTerm const81;

  protected static IStrategoTerm constCons41;

  protected static IStrategoTerm const80;

  protected static IStrategoTerm const79;

  protected static IStrategoTerm const78;

  protected static IStrategoTerm constCons40;

  protected static IStrategoTerm const77;

  protected static IStrategoTerm constCons39;

  protected static IStrategoTerm const76;

  protected static IStrategoTerm constCons38;

  protected static IStrategoTerm const75;

  protected static IStrategoTerm constCons37;

  protected static IStrategoTerm const74;

  protected static IStrategoTerm const73;

  protected static IStrategoTerm constCons36;

  protected static IStrategoTerm const72;

  protected static IStrategoTerm const71;

  protected static IStrategoTerm const70;

  protected static IStrategoTerm const69;

  protected static IStrategoTerm constCons35;

  protected static IStrategoTerm const68;

  protected static IStrategoTerm const67;

  protected static IStrategoTerm const66;

  protected static IStrategoTerm constCons34;

  protected static IStrategoTerm const65;

  protected static IStrategoTerm const64;

  protected static IStrategoTerm constCons33;

  protected static IStrategoTerm const63;

  protected static IStrategoTerm const62;

  protected static IStrategoTerm const61;

  protected static IStrategoTerm const60;

  protected static IStrategoTerm const59;

  protected static IStrategoTerm const58;

  protected static IStrategoTerm const57;

  protected static IStrategoTerm const56;

  protected static IStrategoTerm const55;

  protected static IStrategoTerm const54;

  protected static IStrategoTerm constNone0;

  protected static IStrategoTerm const53;

  protected static IStrategoTerm const52;

  protected static IStrategoTerm const51;

  protected static IStrategoTerm constCons32;

  protected static IStrategoTerm const50;

  protected static IStrategoTerm constCons31;

  protected static IStrategoTerm const49;

  protected static IStrategoTerm constCons30;

  protected static IStrategoTerm const48;

  protected static IStrategoTerm constCons29;

  protected static IStrategoTerm const47;

  protected static IStrategoTerm constCons28;

  protected static IStrategoTerm const46;

  protected static IStrategoTerm constCons27;

  protected static IStrategoTerm const45;

  protected static IStrategoTerm constCons26;

  protected static IStrategoTerm const44;

  protected static IStrategoTerm constCons25;

  protected static IStrategoTerm const43;

  protected static IStrategoTerm constCons24;

  protected static IStrategoTerm const42;

  protected static IStrategoTerm constCons23;

  protected static IStrategoTerm const41;

  protected static IStrategoTerm constCons22;

  protected static IStrategoTerm const40;

  protected static IStrategoTerm constCons21;

  protected static IStrategoTerm const39;

  protected static IStrategoTerm constCons20;

  protected static IStrategoTerm const38;

  protected static IStrategoTerm constCons19;

  protected static IStrategoTerm const37;

  protected static IStrategoTerm constCons18;

  protected static IStrategoTerm const36;

  protected static IStrategoTerm constCons17;

  protected static IStrategoTerm const35;

  protected static IStrategoTerm constCons16;

  protected static IStrategoTerm const34;

  protected static IStrategoTerm constCons15;

  protected static IStrategoTerm const33;

  protected static IStrategoTerm constCons14;

  protected static IStrategoTerm const32;

  protected static IStrategoTerm constCons13;

  protected static IStrategoTerm const31;

  protected static IStrategoTerm constCons12;

  protected static IStrategoTerm const30;

  protected static IStrategoTerm constCons11;

  protected static IStrategoTerm const29;

  protected static IStrategoTerm constCons10;

  protected static IStrategoTerm const28;

  protected static IStrategoTerm constCons9;

  protected static IStrategoTerm const27;

  protected static IStrategoTerm constCons8;

  protected static IStrategoTerm const26;

  protected static IStrategoTerm constCons7;

  protected static IStrategoTerm const25;

  protected static IStrategoTerm constCons6;

  protected static IStrategoTerm const24;

  protected static IStrategoTerm constCons5;

  protected static IStrategoTerm const23;

  protected static IStrategoTerm constCons4;

  protected static IStrategoTerm const22;

  protected static IStrategoTerm const21;

  protected static IStrategoTerm constCons3;

  protected static IStrategoTerm const20;

  protected static IStrategoTerm const19;

  protected static IStrategoTerm const18;

  protected static IStrategoTerm const17;

  protected static IStrategoTerm constCons2;

  protected static IStrategoTerm const16;

  protected static IStrategoTerm const15;

  protected static IStrategoTerm const14;

  protected static IStrategoTerm const13;

  protected static IStrategoTerm const12;

  protected static IStrategoTerm constCons1;

  protected static IStrategoTerm const11;

  protected static IStrategoTerm const10;

  protected static IStrategoTerm const9;

  protected static IStrategoTerm const8;

  protected static IStrategoTerm const7;

  protected static IStrategoTerm const6;

  protected static IStrategoTerm constCons0;

  protected static IStrategoTerm constDR_DUMMY0;

  protected static IStrategoTerm constNil0;

  protected static IStrategoTerm const5;

  protected static IStrategoTerm const4;

  protected static IStrategoTerm const3;

  protected static IStrategoTerm const2;

  protected static IStrategoTerm const1;

  protected static IStrategoTerm const0;

  public static IStrategoConstructor _consConc_2;

  protected static IStrategoConstructor _consast_1;

  protected static IStrategoConstructor _consterm_1;

  protected static IStrategoConstructor _conscons_1;

  protected static IStrategoConstructor _consreject_0;

  protected static IStrategoConstructor _consattrs_1;

  protected static IStrategoConstructor _conslexical_syntax_1;

  protected static IStrategoConstructor _conssyntax_1;

  protected static IStrategoConstructor _conscontext_free_syntax_1;

  protected static IStrategoConstructor _consproduction_2;

  protected static IStrategoConstructor _conssymbol_2;

  protected static IStrategoConstructor _consrenamings_1;

  protected static IStrategoConstructor _consrenamed_module_2;

  protected static IStrategoConstructor _consmodule_1;

  protected static IStrategoConstructor _consexports_1;

  protected static IStrategoConstructor _consimports_1;

  protected static IStrategoConstructor _consassoc_group_2;

  protected static IStrategoConstructor _consprods_group_1;

  protected static IStrategoConstructor _consprod_3;

  protected static IStrategoConstructor _conssimple_group_1;

  protected static IStrategoConstructor _conschain_1;

  protected static IStrategoConstructor _conscontext_free_priorities_1;

  protected static IStrategoConstructor _consparameterized_2;

  protected static IStrategoConstructor _consunparameterized_1;

  protected static IStrategoConstructor _consmodule_3;

  protected static IStrategoConstructor _consdefinition_1;

  protected static IStrategoConstructor _conscontext_free_start_symbols_1;

  protected static IStrategoConstructor _consamb_1;

  protected static IStrategoConstructor _consPP_Table_1;

  protected static IStrategoConstructor _conslayout_0;

  protected static IStrategoConstructor _conslex_1;

  protected static IStrategoConstructor _conscf_1;

  protected static IStrategoConstructor _consseq_2;

  protected static IStrategoConstructor _consright_0;

  protected static IStrategoConstructor _consnon_assoc_0;

  protected static IStrategoConstructor _consassoc_0;

  protected static IStrategoConstructor _consleft_0;

  protected static IStrategoConstructor _consshort_1;

  protected static IStrategoConstructor _consrange_2;

  protected static IStrategoConstructor _consconc_2;

  protected static IStrategoConstructor _conslabel_2;

  protected static IStrategoConstructor _conscomp_1;

  protected static IStrategoConstructor _consparameterized_sort_2;

  protected static IStrategoConstructor _conslit_1;

  protected static IStrategoConstructor _consnumeric_1;

  protected static IStrategoConstructor _conschar_class_1;

  protected static IStrategoConstructor _conssimple_charclass_1;

  protected static IStrategoConstructor _conspresent_1;

  protected static IStrategoConstructor _conssort_1;

  protected static IStrategoConstructor _consalt_2;

  protected static IStrategoConstructor _consopt_1;

  protected static IStrategoConstructor _consiter_star_sep_2;

  protected static IStrategoConstructor _consiter_star_1;

  protected static IStrategoConstructor _consiter_sep_2;

  protected static IStrategoConstructor _consiter_1;

  protected static IStrategoConstructor _consNone_0;

  protected static IStrategoConstructor _consSome_1;

  public static IStrategoConstructor _consDR_DUMMY_0;

  public static IStrategoConstructor _consAutoTest_1;

  public static IStrategoConstructor _consAutoTest_2;

  public static IStrategoConstructor _consAutoTest_3;

  public static IStrategoConstructor _consErrorCorrections_1;

  public static IStrategoConstructor _consErrorCorrection_4;

  public static IStrategoConstructor _consAddCorrection_3;

  public static IStrategoConstructor _consAddCorrectionFirst_3;

  public static IStrategoConstructor _consChangeCorrection_1;

  public static IStrategoConstructor _consDeleteFromListCorrection_2;

  public static IStrategoConstructor _consInsert_0;

  public static IStrategoConstructor _consInsertOnce_0;

  public static IStrategoConstructor _consInsertOnceFor_1;

  public static IStrategoConstructor _consDelete_0;

  public static IStrategoConstructor _consDeleteFor_1;

  public static IStrategoConstructor _consFix_Conc_2;

  public static IStrategoConstructor _consFix_Cons_2;

  public static IStrategoConstructor _consFix_String_1;

  public static IStrategoConstructor _consFix_EmptyArray_0;

  public static IStrategoConstructor _consFix_Array_1;

  public static IStrategoConstructor _consFix_Var_1;

  public static IStrategoConstructor _consFix_Int_1;

  public static IStrategoConstructor _consErrMatchCons_2;

  public static IStrategoConstructor _consErrMatchParamBind_1;

  public static IStrategoConstructor _consErrMatchParam_1;

  public static IStrategoConstructor _consErrMatchString_1;

  public static IStrategoConstructor _consErrMatchINT_1;

  public static IStrategoConstructor _consErrMatchWildCard_0;

  public static IStrategoConstructor _consDestMatchWildCard_0;

  public static IStrategoConstructor _consTargetNode_0;

  public static IStrategoConstructor _consDestMatchCons_2;

  public static IStrategoConstructor _consDestMatchString_1;

  public static IStrategoConstructor _consDestMatchInt_1;

  public static IStrategoConstructor _consATSettings_1;

  public static IStrategoConstructor _consATtag_1;

  public static IStrategoConstructor _consTargetLanguage_1;

  public static IStrategoConstructor _consTargetStrategy_2;

  public static IStrategoConstructor _consNumberOfRuns_1;

  public static IStrategoConstructor _consIgnoreSorts_1;

  public static IStrategoConstructor _consMaxCount_1;

  public static IStrategoConstructor _consMaxRec_1;

  public static IStrategoConstructor _consTerminalPoolSize_1;

  public static IStrategoConstructor _consTestFolder_1;

  public static IStrategoConstructor _consMaxIter_1;

  public static IStrategoConstructor _consCOVSettings_1;

  public static IStrategoConstructor _consCoveredFiles_1;

  public static IStrategoConstructor _consASTStart_1;

  public static IStrategoConstructor _consASTcons_2;

  public static IStrategoConstructor _consASTid_1;

  public static IStrategoConstructor _consASTstring_1;

  public static IStrategoConstructor _consASTint_1;

  public static IStrategoConstructor _consASTparam_1;

  public static IStrategoConstructor _consASTlist_1;

  public static IStrategoConstructor _consInjectGoTo_1;

  public static IStrategoConstructor _consDefineHere_1;

  public static IStrategoConstructor _consPreviousScope_1;

  public static IStrategoConstructor _consNBLRef_0;

  public static IStrategoConstructor _consNBLType_0;

  public static IStrategoConstructor _consWld_0;

  public static Context init(Context context)
  { 
    synchronized(random_test.class)
    { 
      if(isIniting)
        return null;
      try
      { 
        isIniting = true;
        ITermFactory termFactory = context.getFactory();
        if(constantFactory == null)
        { 
          initConstructors(termFactory);
          initConstants(termFactory);
        }
        if(initedContext == null || initedContext.get() != context)
        { 
          org.strategoxt.stratego_lib.Main.init(context);
          org.strategoxt.stratego_lib.Main.init(context);
          org.strategoxt.stratego_rtg.Main.init(context);
          org.strategoxt.stratego_sglr.Main.init(context);
          org.strategoxt.stratego_gpp.Main.init(context);
          org.strategoxt.stratego_xtc.Main.init(context);
          org.strategoxt.stratego_aterm.Main.init(context);
          org.strategoxt.stratego_sdf.Main.init(context);
          org.strategoxt.stratego_tool_doc.Main.init(context);
          randomLibrary.Main.init(context);
          context.registerComponent("random_test");
        }
        initedContext = new WeakReference<Context>(context);
        constantFactory = termFactory;
      }
      finally
      { 
        isIniting = false;
      }
      return context;
    }
  }

  public static Context init()
  { 
    return init(new Context());
  }

  public static void main(String args[])
  { 
    Context context = init();
    context.setStandAlone(true);
    try
    { 
      IStrategoTerm result;
      try
      { 
        result = context.invokeStrategyCLI(main_0_0.instance, "random_test", args);
      }
      finally
      { 
        context.getIOAgent().closeAllFiles();
      }
      if(result == null)
      { 
        System.err.println("random_test" + (TRACES_ENABLED ? ": rewriting failed, trace:" : ": rewriting failed"));
        context.printStackTrace();
        context.setStandAlone(false);
        System.exit(1);
      }
      else
      { 
        System.out.println(result);
        context.setStandAlone(false);
        System.exit(0);
      }
    }
    catch(StrategoExit exit)
    { 
      context.setStandAlone(false);
      System.exit(exit.getValue());
    }
  }

  public static IStrategoTerm mainNoExit(String ... args) throws StrategoExit
  { 
    return mainNoExit(new Context(), args);
  }

  public static IStrategoTerm mainNoExit(Context context, String ... args) throws StrategoExit
  { 
    try
    { 
      init(context);
      return context.invokeStrategyCLI(main_0_0.instance, "random_test", args);
    }
    finally
    { 
      context.getIOAgent().closeAllFiles();
    }
  }

  public static Strategy getMainStrategy()
  { 
    return main_0_0.instance;
  }

  public static void initConstructors(ITermFactory termFactory)
  { 
    _consConc_2 = termFactory.makeConstructor("Conc", 2);
    _consast_1 = termFactory.makeConstructor("ast", 1);
    _consterm_1 = termFactory.makeConstructor("term", 1);
    _conscons_1 = termFactory.makeConstructor("cons", 1);
    _consreject_0 = termFactory.makeConstructor("reject", 0);
    _consattrs_1 = termFactory.makeConstructor("attrs", 1);
    _conslexical_syntax_1 = termFactory.makeConstructor("lexical-syntax", 1);
    _conssyntax_1 = termFactory.makeConstructor("syntax", 1);
    _conscontext_free_syntax_1 = termFactory.makeConstructor("context-free-syntax", 1);
    _consproduction_2 = termFactory.makeConstructor("production", 2);
    _conssymbol_2 = termFactory.makeConstructor("symbol", 2);
    _consrenamings_1 = termFactory.makeConstructor("renamings", 1);
    _consrenamed_module_2 = termFactory.makeConstructor("renamed-module", 2);
    _consmodule_1 = termFactory.makeConstructor("module", 1);
    _consexports_1 = termFactory.makeConstructor("exports", 1);
    _consimports_1 = termFactory.makeConstructor("imports", 1);
    _consassoc_group_2 = termFactory.makeConstructor("assoc-group", 2);
    _consprods_group_1 = termFactory.makeConstructor("prods-group", 1);
    _consprod_3 = termFactory.makeConstructor("prod", 3);
    _conssimple_group_1 = termFactory.makeConstructor("simple-group", 1);
    _conschain_1 = termFactory.makeConstructor("chain", 1);
    _conscontext_free_priorities_1 = termFactory.makeConstructor("context-free-priorities", 1);
    _consparameterized_2 = termFactory.makeConstructor("parameterized", 2);
    _consunparameterized_1 = termFactory.makeConstructor("unparameterized", 1);
    _consmodule_3 = termFactory.makeConstructor("module", 3);
    _consdefinition_1 = termFactory.makeConstructor("definition", 1);
    _conscontext_free_start_symbols_1 = termFactory.makeConstructor("context-free-start-symbols", 1);
    _consamb_1 = termFactory.makeConstructor("amb", 1);
    _consPP_Table_1 = termFactory.makeConstructor("PP-Table", 1);
    _conslayout_0 = termFactory.makeConstructor("layout", 0);
    _conslex_1 = termFactory.makeConstructor("lex", 1);
    _conscf_1 = termFactory.makeConstructor("cf", 1);
    _consseq_2 = termFactory.makeConstructor("seq", 2);
    _consright_0 = termFactory.makeConstructor("right", 0);
    _consnon_assoc_0 = termFactory.makeConstructor("non-assoc", 0);
    _consassoc_0 = termFactory.makeConstructor("assoc", 0);
    _consleft_0 = termFactory.makeConstructor("left", 0);
    _consshort_1 = termFactory.makeConstructor("short", 1);
    _consrange_2 = termFactory.makeConstructor("range", 2);
    _consconc_2 = termFactory.makeConstructor("conc", 2);
    _conslabel_2 = termFactory.makeConstructor("label", 2);
    _conscomp_1 = termFactory.makeConstructor("comp", 1);
    _consparameterized_sort_2 = termFactory.makeConstructor("parameterized-sort", 2);
    _conslit_1 = termFactory.makeConstructor("lit", 1);
    _consnumeric_1 = termFactory.makeConstructor("numeric", 1);
    _conschar_class_1 = termFactory.makeConstructor("char-class", 1);
    _conssimple_charclass_1 = termFactory.makeConstructor("simple-charclass", 1);
    _conspresent_1 = termFactory.makeConstructor("present", 1);
    _conssort_1 = termFactory.makeConstructor("sort", 1);
    _consalt_2 = termFactory.makeConstructor("alt", 2);
    _consopt_1 = termFactory.makeConstructor("opt", 1);
    _consiter_star_sep_2 = termFactory.makeConstructor("iter-star-sep", 2);
    _consiter_star_1 = termFactory.makeConstructor("iter-star", 1);
    _consiter_sep_2 = termFactory.makeConstructor("iter-sep", 2);
    _consiter_1 = termFactory.makeConstructor("iter", 1);
    _consNone_0 = termFactory.makeConstructor("None", 0);
    _consSome_1 = termFactory.makeConstructor("Some", 1);
    _consDR_DUMMY_0 = termFactory.makeConstructor("DR_DUMMY", 0);
    _consAutoTest_1 = termFactory.makeConstructor("AutoTest", 1);
    _consAutoTest_2 = termFactory.makeConstructor("AutoTest", 2);
    _consAutoTest_3 = termFactory.makeConstructor("AutoTest", 3);
    _consErrorCorrections_1 = termFactory.makeConstructor("ErrorCorrections", 1);
    _consErrorCorrection_4 = termFactory.makeConstructor("ErrorCorrection", 4);
    _consAddCorrection_3 = termFactory.makeConstructor("AddCorrection", 3);
    _consAddCorrectionFirst_3 = termFactory.makeConstructor("AddCorrectionFirst", 3);
    _consChangeCorrection_1 = termFactory.makeConstructor("ChangeCorrection", 1);
    _consDeleteFromListCorrection_2 = termFactory.makeConstructor("DeleteFromListCorrection", 2);
    _consInsert_0 = termFactory.makeConstructor("Insert", 0);
    _consInsertOnce_0 = termFactory.makeConstructor("InsertOnce", 0);
    _consInsertOnceFor_1 = termFactory.makeConstructor("InsertOnceFor", 1);
    _consDelete_0 = termFactory.makeConstructor("Delete", 0);
    _consDeleteFor_1 = termFactory.makeConstructor("DeleteFor", 1);
    _consFix_Conc_2 = termFactory.makeConstructor("Fix_Conc", 2);
    _consFix_Cons_2 = termFactory.makeConstructor("Fix_Cons", 2);
    _consFix_String_1 = termFactory.makeConstructor("Fix_String", 1);
    _consFix_EmptyArray_0 = termFactory.makeConstructor("Fix_EmptyArray", 0);
    _consFix_Array_1 = termFactory.makeConstructor("Fix_Array", 1);
    _consFix_Var_1 = termFactory.makeConstructor("Fix_Var", 1);
    _consFix_Int_1 = termFactory.makeConstructor("Fix_Int", 1);
    _consErrMatchCons_2 = termFactory.makeConstructor("ErrMatchCons", 2);
    _consErrMatchParamBind_1 = termFactory.makeConstructor("ErrMatchParamBind", 1);
    _consErrMatchParam_1 = termFactory.makeConstructor("ErrMatchParam", 1);
    _consErrMatchString_1 = termFactory.makeConstructor("ErrMatchString", 1);
    _consErrMatchINT_1 = termFactory.makeConstructor("ErrMatchINT", 1);
    _consErrMatchWildCard_0 = termFactory.makeConstructor("ErrMatchWildCard", 0);
    _consDestMatchWildCard_0 = termFactory.makeConstructor("DestMatchWildCard", 0);
    _consTargetNode_0 = termFactory.makeConstructor("TargetNode", 0);
    _consDestMatchCons_2 = termFactory.makeConstructor("DestMatchCons", 2);
    _consDestMatchString_1 = termFactory.makeConstructor("DestMatchString", 1);
    _consDestMatchInt_1 = termFactory.makeConstructor("DestMatchInt", 1);
    _consATSettings_1 = termFactory.makeConstructor("ATSettings", 1);
    _consATtag_1 = termFactory.makeConstructor("ATtag", 1);
    _consTargetLanguage_1 = termFactory.makeConstructor("TargetLanguage", 1);
    _consTargetStrategy_2 = termFactory.makeConstructor("TargetStrategy", 2);
    _consNumberOfRuns_1 = termFactory.makeConstructor("NumberOfRuns", 1);
    _consIgnoreSorts_1 = termFactory.makeConstructor("IgnoreSorts", 1);
    _consMaxCount_1 = termFactory.makeConstructor("MaxCount", 1);
    _consMaxRec_1 = termFactory.makeConstructor("MaxRec", 1);
    _consTerminalPoolSize_1 = termFactory.makeConstructor("TerminalPoolSize", 1);
    _consTestFolder_1 = termFactory.makeConstructor("TestFolder", 1);
    _consMaxIter_1 = termFactory.makeConstructor("MaxIter", 1);
    _consCOVSettings_1 = termFactory.makeConstructor("COVSettings", 1);
    _consCoveredFiles_1 = termFactory.makeConstructor("CoveredFiles", 1);
    _consASTStart_1 = termFactory.makeConstructor("ASTStart", 1);
    _consASTcons_2 = termFactory.makeConstructor("ASTcons", 2);
    _consASTid_1 = termFactory.makeConstructor("ASTid", 1);
    _consASTstring_1 = termFactory.makeConstructor("ASTstring", 1);
    _consASTint_1 = termFactory.makeConstructor("ASTint", 1);
    _consASTparam_1 = termFactory.makeConstructor("ASTparam", 1);
    _consASTlist_1 = termFactory.makeConstructor("ASTlist", 1);
    _consInjectGoTo_1 = termFactory.makeConstructor("InjectGoTo", 1);
    _consDefineHere_1 = termFactory.makeConstructor("DefineHere", 1);
    _consPreviousScope_1 = termFactory.makeConstructor("PreviousScope", 1);
    _consNBLRef_0 = termFactory.makeConstructor("NBLRef", 0);
    _consNBLType_0 = termFactory.makeConstructor("NBLType", 0);
    _consWld_0 = termFactory.makeConstructor("Wld", 0);
  }

  public static void initConstants(ITermFactory termFactory)
  { 
    const0 = termFactory.makeString("CoveredCons");
    const1 = termFactory.makeString("d430546ff46f7e7c1d0db8d57086f56d");
    const2 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'grammar-coverage'");
    const3 = termFactory.makeString("Deprecated_");
    const4 = termFactory.makeString("WebDSL");
    const5 = termFactory.makeString("Language");
    constNil0 = (IStrategoTerm)termFactory.makeList(Term.NO_TERMS);
    constDR_DUMMY0 = termFactory.makeAppl(random_test._consDR_DUMMY_0, NO_TERMS);
    constCons0 = (IStrategoTerm)termFactory.makeListCons(random_test.constDR_DUMMY0, (IStrategoList)random_test.constNil0);
    const6 = termFactory.makeString("cb4758a53b8b6c3b7b9fa6226b718ce5");
    const7 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'webdsl-check-grammar-measure'");
    const8 = termFactory.makeString("\n");
    const9 = termFactory.makeString("\n          ");
    const10 = termFactory.makeString("\n                       ");
    const11 = termFactory.makeString(".def");
    constCons1 = (IStrategoTerm)termFactory.makeListCons(random_test.const11, (IStrategoList)random_test.constNil0);
    const12 = termFactory.makeString("/");
    const13 = termFactory.makeString("./include/");
    const14 = termFactory.makeString("\n        ");
    const15 = termFactory.makeString("\n                     ");
    const16 = termFactory.makeString(".tbl");
    constCons2 = (IStrategoTerm)termFactory.makeListCons(random_test.const16, (IStrategoList)random_test.constNil0);
    const17 = termFactory.makeString("include/");
    const18 = termFactory.makeString(",");
    const19 = termFactory.makeString("Covered: ");
    const20 = termFactory.makeString("/home/andre/Documents/Stratego/Tests/WebDSLCheckGrammar.txt");
    constCons3 = (IStrategoTerm)termFactory.makeListCons(random_test.const20, (IStrategoList)random_test.constNil0);
    const21 = termFactory.makeString("app");
    const22 = termFactory.makeString("/home/andre/Documents/Stratego/WebDSL/test/");
    constCons4 = (IStrategoTerm)termFactory.makeListCons(random_test.const22, (IStrategoList)random_test.constNil0);
    const23 = termFactory.makeString("succeed/*.app");
    constCons5 = (IStrategoTerm)termFactory.makeListCons(random_test.const23, (IStrategoList)random_test.constNil0);
    const24 = termFactory.makeString("succeed/ac/*.app");
    constCons6 = (IStrategoTerm)termFactory.makeListCons(random_test.const24, (IStrategoList)random_test.constNil0);
    const25 = termFactory.makeString("succeed/data-validation/*.app");
    constCons7 = (IStrategoTerm)termFactory.makeListCons(random_test.const25, (IStrategoList)random_test.constNil0);
    const26 = termFactory.makeString("succeed/email/*.app");
    constCons8 = (IStrategoTerm)termFactory.makeListCons(random_test.const26, (IStrategoList)random_test.constNil0);
    const27 = termFactory.makeString("succeed/stratego/*.app");
    constCons9 = (IStrategoTerm)termFactory.makeListCons(random_test.const27, (IStrategoList)random_test.constNil0);
    const28 = termFactory.makeString("succeed/entity-events/*.app");
    constCons10 = (IStrategoTerm)termFactory.makeListCons(random_test.const28, (IStrategoList)random_test.constNil0);
    const29 = termFactory.makeString("succeed/module/*.app");
    constCons11 = (IStrategoTerm)termFactory.makeListCons(random_test.const29, (IStrategoList)random_test.constNil0);
    const30 = termFactory.makeString("succeed/nativejava/*.app");
    constCons12 = (IStrategoTerm)termFactory.makeListCons(random_test.const30, (IStrategoList)random_test.constNil0);
    const31 = termFactory.makeString("succeed/overloading/*.app");
    constCons13 = (IStrategoTerm)termFactory.makeListCons(random_test.const31, (IStrategoList)random_test.constNil0);
    const32 = termFactory.makeString("succeed/property-events/*.app");
    constCons14 = (IStrategoTerm)termFactory.makeListCons(random_test.const32, (IStrategoList)random_test.constNil0);
    const33 = termFactory.makeString("succeed/manual/*.app");
    constCons15 = (IStrategoTerm)termFactory.makeListCons(random_test.const33, (IStrategoList)random_test.constNil0);
    const34 = termFactory.makeString("succeed/search/*.app");
    constCons16 = (IStrategoTerm)termFactory.makeListCons(random_test.const34, (IStrategoList)random_test.constNil0);
    const35 = termFactory.makeString("succeed/prefetch/*.app");
    constCons17 = (IStrategoTerm)termFactory.makeListCons(random_test.const35, (IStrategoList)random_test.constNil0);
    const36 = termFactory.makeString("fail/*.app");
    constCons18 = (IStrategoTerm)termFactory.makeListCons(random_test.const36, (IStrategoList)random_test.constNil0);
    const37 = termFactory.makeString("fail/*/*.app");
    constCons19 = (IStrategoTerm)termFactory.makeListCons(random_test.const37, (IStrategoList)random_test.constNil0);
    const38 = termFactory.makeString("succeed-web/*.app");
    constCons20 = (IStrategoTerm)termFactory.makeListCons(random_test.const38, (IStrategoList)random_test.constNil0);
    const39 = termFactory.makeString("succeed-web/data-validation/*.app");
    constCons21 = (IStrategoTerm)termFactory.makeListCons(random_test.const39, (IStrategoList)random_test.constNil0);
    const40 = termFactory.makeString("succeed-web/data-validation/withstylesheet/*.app");
    constCons22 = (IStrategoTerm)termFactory.makeListCons(random_test.const40, (IStrategoList)random_test.constNil0);
    const41 = termFactory.makeString("succeed-web/ac/*.app");
    constCons23 = (IStrategoTerm)termFactory.makeListCons(random_test.const41, (IStrategoList)random_test.constNil0);
    const42 = termFactory.makeString("succeed-web/types/*.app");
    constCons24 = (IStrategoTerm)termFactory.makeListCons(random_test.const42, (IStrategoList)random_test.constNil0);
    const43 = termFactory.makeString("succeed-web/manual/*.app");
    constCons25 = (IStrategoTerm)termFactory.makeListCons(random_test.const43, (IStrategoList)random_test.constNil0);
    const44 = termFactory.makeString("succeed-web/manual/ajax-form-validation/*.app");
    constCons26 = (IStrategoTerm)termFactory.makeListCons(random_test.const44, (IStrategoList)random_test.constNil0);
    const45 = termFactory.makeString("succeed-web/manual/ajax-form-validation/templates/*.app");
    constCons27 = (IStrategoTerm)termFactory.makeListCons(random_test.const45, (IStrategoList)random_test.constNil0);
    const46 = termFactory.makeString("succeed-web/manual/tutorial-splash/v1/*.app");
    constCons28 = (IStrategoTerm)termFactory.makeListCons(random_test.const46, (IStrategoList)random_test.constNil0);
    const47 = termFactory.makeString("succeed-web/manual/tutorial-splash/v2/*.app");
    constCons29 = (IStrategoTerm)termFactory.makeListCons(random_test.const47, (IStrategoList)random_test.constNil0);
    const48 = termFactory.makeString("succeed-web/manual/tutorial-splash/v3/*.app");
    constCons30 = (IStrategoTerm)termFactory.makeListCons(random_test.const48, (IStrategoList)random_test.constNil0);
    const49 = termFactory.makeString("succeed-web/manual/tutorial-splash/v4/*.app");
    constCons31 = (IStrategoTerm)termFactory.makeListCons(random_test.const49, (IStrategoList)random_test.constNil0);
    const50 = termFactory.makeString("succeed-web/search/*.app");
    constCons32 = (IStrategoTerm)termFactory.makeListCons(random_test.const50, (IStrategoList)random_test.constNil0);
    const51 = termFactory.makeString("Shrinking Test");
    const52 = termFactory.makeString("ShrinkError");
    const53 = termFactory.makeString("4453ef394f228984eeb18d5f7a59b75b");
    constNone0 = termFactory.makeAppl(random_test._consNone_0, NO_TERMS);
    const54 = termFactory.makeString("iter-star");
    const55 = termFactory.makeString("iter");
    const56 = termFactory.makeString("hier1");
    const57 = termFactory.makeString("length: ");
    const58 = termFactory.makeInt(0);
    const59 = termFactory.makeString("D1");
    const60 = termFactory.makeString("D2");
    const61 = termFactory.makeString("rame1");
    const62 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'run-and-match-error'");
    const63 = termFactory.makeString("/WebDSLShrink/toShrink.app");
    constCons33 = (IStrategoTerm)termFactory.makeListCons(random_test.const63, (IStrategoList)random_test.constNil0);
    const64 = termFactory.makeString("rame2");
    const65 = termFactory.makeString("\n\r");
    constCons34 = (IStrategoTerm)termFactory.makeListCons(random_test.const65, (IStrategoList)random_test.constNil0);
    const66 = termFactory.makeString("rame3");
    const67 = termFactory.makeString("rame4");
    const68 = termFactory.makeString("include/WebDSL/WebDSL.tbl");
    constCons35 = (IStrategoTerm)termFactory.makeListCons(random_test.const68, (IStrategoList)random_test.constNil0);
    const69 = termFactory.makeString("rame5");
    const70 = termFactory.makeString("webdslc-main");
    const71 = termFactory.makeString("rame7");
    const72 = termFactory.makeString("file:/home/andre/Documents/Stratego/bin/WebDSL/bin/webdsl.jar");
    constCons36 = (IStrategoTerm)termFactory.makeListCons(random_test.const72, (IStrategoList)random_test.constNil0);
    const73 = termFactory.makeString("rame8");
    const74 = termFactory.makeString("../Tests/WebDSLShrink/toShrink.app");
    constCons37 = (IStrategoTerm)termFactory.makeListCons(random_test.const74, (IStrategoList)random_test.constNil0);
    const75 = termFactory.makeString("--servlet");
    constCons38 = (IStrategoTerm)termFactory.makeListCons(random_test.const75, (IStrategoList)random_test.constNil0);
    const76 = termFactory.makeString("2");
    constCons39 = (IStrategoTerm)termFactory.makeListCons(random_test.const76, (IStrategoList)random_test.constCons38);
    const77 = termFactory.makeString("--verbose");
    constCons40 = (IStrategoTerm)termFactory.makeListCons(random_test.const77, (IStrategoList)random_test.constCons39);
    const78 = termFactory.makeString("-i");
    const79 = termFactory.makeString("toShrink");
    const80 = termFactory.makeString("/home/andre/Documents/Stratego/Random/Tests/WebDSLShrink");
    constCons41 = (IStrategoTerm)termFactory.makeListCons(random_test.const80, (IStrategoList)random_test.constNil0);
    const81 = termFactory.makeString("/.webdsl-parsecache");
    constCons42 = (IStrategoTerm)termFactory.makeListCons(random_test.const81, (IStrategoList)random_test.constNil0);
    const82 = termFactory.makeString("result:");
    const83 = termFactory.makeString("Did not match");
    const84 = termFactory.makeString("A");
    const85 = termFactory.makeString("B0");
    const86 = termFactory.makeString("B1");
    const87 = termFactory.makeString("B2");
    const88 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'shrink-iter-stars'");
    const89 = termFactory.makeString("C0");
    const90 = termFactory.makeString("D0");
    const91 = termFactory.makeString("okie0");
    const92 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'remove-next-iter'");
    const93 = termFactory.makeString("list:");
    const94 = termFactory.makeInt(2);
    const95 = termFactory.makeString("meh?!?");
    const96 = termFactory.makeString("hier?!?!?!?!");
    const97 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'remove-next-iter-aux'");
    const98 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'remove-next'");
    const99 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'shrink-get-input'");
    const100 = termFactory.makeString("/Tests/WebDSLShrink/toShrink.app");
    constCons43 = (IStrategoTerm)termFactory.makeListCons(random_test.const100, (IStrategoList)random_test.constNil0);
    const101 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'shrink-find-sorts'");
    const102 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'is-shrinkable-sort'");
    const103 = termFactory.makeString("opt");
    const104 = termFactory.makeString("Namespace");
    const105 = termFactory.makeString("29807e2179871800322a2be958c2ece4");
    const106 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'create-key'");
    const107 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'all-non-native-scopes'");
    const108 = termFactory.makeInt(100);
    const109 = termFactory.makeInt(-1);
    const110 = termFactory.makeString("");
    const111 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'extract-or-replace-identifier'");
    const112 = termFactory.makeString("gis-sort:");
    const113 = termFactory.makeString("gis-2:");
    const114 = termFactory.makeString("gis-1:");
    const115 = termFactory.makeString("gis-3:");
    const116 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'get-identifier-sort'");
    const117 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'get-direct-lex-sort'");
    const118 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'replace-identifier'");
    const119 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'extract-identifier'");
    const120 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'update-NBL-scope'");
    const121 = termFactory.makeString("CurrentScope");
    const122 = termFactory.makeString("a716b9f50b8d0864a4dee2efdf5526fb");
    const123 = termFactory.makeString("Scope2Key");
    const124 = termFactory.makeString("19a8cadc1549b9cd0f7a0c88cc6f55b3");
    const125 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'create-full-scope'");
    const126 = termFactory.makeString("bagof:");
    const127 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'get-nbl-references'");
    const128 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'use-nbl-referral'");
    const129 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'random-generate-referral'");
    const130 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'random-generate-referral-body-aux'");
    const131 = termFactory.makeString("Id");
    constsort0 = termFactory.makeAppl(random_test._conssort_1, new IStrategoTerm[]{random_test.const131});
    const132 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'inject-NBL-definition-creation'");
    const133 = termFactory.makeString("pool-to-pick:");
    const134 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'randomly-pick-a-scope-for-NBL-injection'");
    const135 = termFactory.makeString("No scopes for:  ");
    const136 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'create-pool-of-all-scopes'");
    const137 = termFactory.makeString("Non injectable:");
    const138 = termFactory.makeString("NBLInjection");
    const139 = termFactory.makeString("d5460451488ee656614c73d0027df393");
    const140 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'inject-NBL-definitions'");
    const141 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'read-and-search-tree'");
    const142 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'update-scopes'");
    const143 = termFactory.makeString("alternative3: ");
    const144 = termFactory.makeString("toInject: ");
    const145 = termFactory.makeString("alternative: ");
    const146 = termFactory.makeString("injectingInto: ");
    const147 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'inject-NBL-definition'");
    const148 = termFactory.makeString("Trying to inject into a non-list: ");
    const149 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'inject-alternative'");
    const150 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'inject-alternative-aux'");
    const151 = termFactory.makeString("building defineHere:");
    const152 = termFactory.makeString("ba7:");
    const153 = termFactory.makeString("ba1:");
    const154 = termFactory.makeString("ba2:");
    const155 = termFactory.makeString("ba3:");
    const156 = termFactory.makeString("ba4:");
    const157 = termFactory.makeString("ba5:");
    const158 = termFactory.makeString("ba6:");
    const159 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'build-alternative'");
    const160 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'build-definition-body'");
    const161 = termFactory.makeString("path: ");
    const162 = termFactory.makeString("current with no alt bodys: ");
    const163 = termFactory.makeString("sort that goes with: ");
    const164 = termFactory.makeInt(50);
    const165 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'build-alternative-body'");
    const166 = termFactory.makeString("a1");
    const167 = termFactory.makeString("a2:");
    const168 = termFactory.makeString("alternatives:");
    const169 = termFactory.makeString("namespace:");
    const170 = termFactory.makeString("cons:");
    const171 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'get-injections-per-iter'");
    const172 = termFactory.makeString("B:");
    const173 = termFactory.makeString("ia2:");
    const174 = termFactory.makeString("before recog:");
    const175 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'SDF-sort'");
    const176 = termFactory.makeString("match-error-and-fix DONE");
    const177 = termFactory.makeString(" : ");
    const178 = termFactory.makeString("\"");
    const179 = termFactory.makeString("No Error Correction found for: \"");
    const180 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'match-error-and-fix'");
    const181 = termFactory.makeString(" failed!");
    constCons44 = (IStrategoTerm)termFactory.makeListCons(random_test.const181, (IStrategoList)random_test.constNil0);
    const182 = termFactory.makeString("Fixing with ");
    const183 = termFactory.makeString(" with ");
    const184 = termFactory.makeString("Fixed ");
    const185 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'fix'");
    const186 = termFactory.makeInt(1);
    constFix_Var0 = termFactory.makeAppl(random_test._consFix_Var_1, new IStrategoTerm[]{random_test.const186});
    const187 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'remove-one'");
    const188 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'remove-one-from-list'");
    const189 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'translate-fix'");
    const190 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'fix-program'");
    const191 = termFactory.makeString("fp");
    constCons45 = (IStrategoTerm)termFactory.makeListCons(random_test.const191, (IStrategoList)random_test.constNil0);
    const192 = termFactory.makeString("fa");
    constCons46 = (IStrategoTerm)termFactory.makeListCons(random_test.const192, (IStrategoList)random_test.constNil0);
    const193 = termFactory.makeString("Error Corrections:");
    const194 = termFactory.makeString("ErrorMatchParam");
    const195 = termFactory.makeString("f12e5dfbbea6f2824ef5d0117b490a9e");
    const196 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'extract-settings'");
    const197 = termFactory.makeString("MaxCount");
    const198 = termFactory.makeString("716d0f58e0e875d0f13d47cd422da5f9");
    const199 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'extractS'");
    const200 = termFactory.makeString("MaxIter");
    const201 = termFactory.makeString("6a01faa7bd2aa4f50d7655df03720220");
    const202 = termFactory.makeString("MaxRec");
    const203 = termFactory.makeString("3e5bb57f445f6fcab904b577fc91c817");
    const204 = termFactory.makeString("ErrorMessagePattern");
    const205 = termFactory.makeString("b0b830816ded043b6b604cd822388e50");
    const206 = termFactory.makeString("ErrorCorrectingAction");
    const207 = termFactory.makeString("d33e2d4a9230200ad5cf3bb6d6bf80f8");
    const208 = termFactory.makeString("ErrorSourceNodePattern");
    const209 = termFactory.makeString("de05d957507371263b5d7c598e512c70");
    const210 = termFactory.makeString("TerminalPoolSize");
    const211 = termFactory.makeString("c6dece83570595c50b251eeb1f8296be");
    const212 = termFactory.makeString("NumberOfRuns");
    const213 = termFactory.makeString("e67c14690cc9dbd3a15d4a5e2e55f5e5");
    const214 = termFactory.makeString("TargetStrategy");
    const215 = termFactory.makeString("a592a7f97a01deade99c6070137200d8");
    const216 = termFactory.makeString("LocationTargetStrategy");
    const217 = termFactory.makeString("b1b76c67e4b6385d22d276ddd5c09463");
    const218 = termFactory.makeString("CoveredFiles");
    const219 = termFactory.makeString("26b52d1910d228b0be7999e957b0c56b");
    const220 = termFactory.makeString("IgnoreSorts");
    const221 = termFactory.makeString("3448bd6cca8033dd5c5f22a19b9fa896");
    const222 = termFactory.makeString("TestFolder");
    const223 = termFactory.makeString("6ca18f7733386d51e87882548f56711b");
    const224 = termFactory.makeString("TestTag");
    const225 = termFactory.makeString("a6d537f448c54d807404972ad6d9bda2");
    const226 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'build-xeger'");
    const227 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in rule 'build-xeger'");
    const228 = termFactory.makeString("\n ");
    const229 = termFactory.makeString("]");
    constCons47 = (IStrategoTerm)termFactory.makeListCons(random_test.const229, (IStrategoList)random_test.constNil0);
    const230 = termFactory.makeString("[");
    const231 = termFactory.makeString(")?");
    constCons48 = (IStrategoTerm)termFactory.makeListCons(random_test.const231, (IStrategoList)random_test.constNil0);
    const232 = termFactory.makeString("(");
    const233 = termFactory.makeString("Build-Xeger: numeric FAIL!");
    const234 = termFactory.makeString(")&[0123456789\\n\\t ~\\\"#$%&'()*+-./:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ-^_`abcdefghijklmnopqrstuvwxyz{|}~])");
    constCons49 = (IStrategoTerm)termFactory.makeListCons(random_test.const234, (IStrategoList)random_test.constNil0);
    const235 = termFactory.makeString("((~");
    const236 = termFactory.makeString("\n     ");
    const237 = termFactory.makeString("|");
    const238 = termFactory.makeString("Z: ");
    const239 = termFactory.makeString("\n    ");
    const240 = termFactory.makeString("-");
    const241 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in rule 'help-xeger-iter'");
    const242 = termFactory.makeString("){0,10}");
    constCons50 = (IStrategoTerm)termFactory.makeListCons(random_test.const242, (IStrategoList)random_test.constNil0);
    const243 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'help-xeger-iter'");
    const244 = termFactory.makeString("){1,10}");
    constCons51 = (IStrategoTerm)termFactory.makeListCons(random_test.const244, (IStrategoList)random_test.constNil0);
    const245 = termFactory.makeString("\n               ");
    const246 = termFactory.makeString("){0,9}");
    const247 = termFactory.makeString("\n  ");
    const248 = termFactory.makeString("\n                ");
    const249 = termFactory.makeString("?");
    constCons52 = (IStrategoTerm)termFactory.makeListCons(random_test.const249, (IStrategoList)random_test.constNil0);
    const250 = termFactory.makeString(")|");
    const251 = termFactory.makeString("){1,9}");
    const252 = termFactory.makeString("((");
    const253 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'escape-lit-string'");
    const254 = termFactory.makeInt(124);
    const255 = termFactory.makeInt(92);
    const256 = termFactory.makeInt(38);
    const257 = termFactory.makeInt(63);
    const258 = termFactory.makeInt(42);
    const259 = termFactory.makeInt(43);
    const260 = termFactory.makeInt(123);
    const261 = termFactory.makeInt(125);
    const262 = termFactory.makeInt(126);
    const263 = termFactory.makeInt(60);
    const264 = termFactory.makeInt(62);
    const265 = termFactory.makeInt(45);
    const266 = termFactory.makeInt(64);
    const267 = termFactory.makeInt(35);
    const268 = termFactory.makeInt(40);
    const269 = termFactory.makeInt(41);
    const270 = termFactory.makeInt(46);
    const271 = termFactory.makeInt(91);
    const272 = termFactory.makeInt(93);
    const273 = termFactory.makeTuple();
    const274 = termFactory.makeString("No lexical definition found for ");
    const275 = termFactory.makeString("))");
    constCons53 = (IStrategoTerm)termFactory.makeListCons(random_test.const275, (IStrategoList)random_test.constNil0);
    const276 = termFactory.makeString("&(~(");
    const277 = termFactory.makeString(")");
    constCons54 = (IStrategoTerm)termFactory.makeListCons(random_test.const277, (IStrategoList)random_test.constNil0);
    const278 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'build-xeger-sort'");
    const279 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'special-string-concat'");
    const280 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'generate-terminal'");
    const281 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'use-xeger'");
    const282 = termFactory.makeString("XegerCount");
    const283 = termFactory.makeString("3655ebb6e8cd63c195fd52919e4ec36a");
    const284 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'pick-a-random-terminal'");
    const285 = termFactory.makeString("Terminals");
    const286 = termFactory.makeString("4a9661844fb136d71a707952cd97200f");
    const287 = termFactory.makeString("lex-to-dr-Count");
    const288 = termFactory.makeString("5ba3a675e39f5606ed5a2eef7564ed33");
    const289 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'pick-prod-lower-level'");
    const290 = termFactory.makeString("Bag of Terminal returned []");
    constleft0 = termFactory.makeAppl(random_test._consleft_0, NO_TERMS);
    constassoc0 = termFactory.makeAppl(random_test._consassoc_0, NO_TERMS);
    constnon_assoc0 = termFactory.makeAppl(random_test._consnon_assoc_0, NO_TERMS);
    const291 = termFactory.makeString(">");
    constright0 = termFactory.makeAppl(random_test._consright_0, NO_TERMS);
    const292 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'check-priorities'");
    const293 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'distribute-rejections'");
    const294 = termFactory.makeString("WeirdCrash2:");
    const295 = termFactory.makeString("WeirdCrash3:");
    const296 = termFactory.makeString("EUH???:");
    const297 = termFactory.makeString("WeirdCrash4:");
    const298 = termFactory.makeString("WeirdCrash5:");
    const299 = termFactory.makeString(" with recursion: ");
    const300 = termFactory.makeString("Filtering out of constructors yielded errors!!");
    const301 = termFactory.makeString("ProdWeight");
    const302 = termFactory.makeString("echt niet");
    const303 = termFactory.annotateTerm(random_test.const302, checkListAnnos(termFactory, random_test.constCons0));
    const304 = termFactory.makeString("f72a5b434ce176f667d38c7389d5dd50");
    const305 = termFactory.makeString("ConsCount");
    const306 = termFactory.makeString("04faa4572cdeaca89425bd450a3b6e8d");
    const307 = termFactory.makeString("WeirdCrash6:");
    const308 = termFactory.makeString("WeirdCrash7:");
    const309 = termFactory.makeString("WeirdCrash8:");
    const310 = termFactory.makeString("WeirdCrash9:");
    const311 = termFactory.makeString("WeirdCrash10:");
    const312 = termFactory.makeString("WeirdCrash11:");
    const313 = termFactory.makeString("WeirdCrash1:");
    const314 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'generate-program'");
    const315 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'generate-term'");
    const316 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'choose-alternative'");
    const317 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'process-ASTTerm'");
    const318 = termFactory.makeString("Process-ASTTerm with var?: ");
    const319 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'write-rule'");
    const320 = termFactory.makeString("terminal chosen:");
    const321 = termFactory.makeString("This rule has not been written yet: ");
    const322 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'write-n-rule'");
    const323 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'filter-prods'");
    const324 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'switch-input'");
    const325 = termFactory.makeString("ShrinkSort");
    const326 = termFactory.makeString("54c63850a86ddda2c48c2c548b8d267e");
    const327 = termFactory.makeString("include/Autotest.tbl");
    constCons55 = (IStrategoTerm)termFactory.makeListCons(random_test.const327, (IStrategoList)random_test.constNil0);
    const328 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'parse-pp'");
    const329 = termFactory.makeString("NonInjectable");
    const330 = termFactory.makeString("ForExp");
    const331 = termFactory.annotateTerm(random_test.const330, checkListAnnos(termFactory, random_test.constCons0));
    const332 = termFactory.makeInt(5);
    const333 = termFactory.annotateTerm(random_test.const332, checkListAnnos(termFactory, random_test.constCons0));
    const334 = termFactory.makeTuple(random_test.const331, random_test.const333);
    const335 = termFactory.annotateTerm(random_test.const334, checkListAnnos(termFactory, random_test.constCons0));
    const336 = termFactory.makeString("Var");
    const337 = termFactory.annotateTerm(random_test.const336, checkListAnnos(termFactory, random_test.constCons0));
    const338 = termFactory.makeTuple(random_test.const335, random_test.const337);
    const339 = termFactory.annotateTerm(random_test.const338, checkListAnnos(termFactory, random_test.constCons0));
    const340 = termFactory.makeString("0d199a2cbdd2fcc735551787f70cffbb");
    const341 = termFactory.makeString("ForCount");
    const342 = termFactory.annotateTerm(random_test.const341, checkListAnnos(termFactory, random_test.constCons0));
    const343 = termFactory.makeInt(4);
    const344 = termFactory.annotateTerm(random_test.const343, checkListAnnos(termFactory, random_test.constCons0));
    const345 = termFactory.makeTuple(random_test.const342, random_test.const344);
    const346 = termFactory.annotateTerm(random_test.const345, checkListAnnos(termFactory, random_test.constCons0));
    const347 = termFactory.makeTuple(random_test.const346, random_test.const337);
    const348 = termFactory.annotateTerm(random_test.const347, checkListAnnos(termFactory, random_test.constCons0));
    const349 = termFactory.makeString("1ffa474f6bdf1f8fdec5547b4d2afb93");
    const350 = termFactory.makeTuple(random_test.const342, random_test.const333);
    const351 = termFactory.annotateTerm(random_test.const350, checkListAnnos(termFactory, random_test.constCons0));
    const352 = termFactory.makeTuple(random_test.const351, random_test.const337);
    const353 = termFactory.annotateTerm(random_test.const352, checkListAnnos(termFactory, random_test.constCons0));
    const354 = termFactory.makeString("26c321e708ee3c908bfacbb9e48f4f93");
    const355 = termFactory.makeString("ForCountStmt");
    const356 = termFactory.annotateTerm(random_test.const355, checkListAnnos(termFactory, random_test.constCons0));
    const357 = termFactory.makeTuple(random_test.const356, random_test.const344);
    const358 = termFactory.annotateTerm(random_test.const357, checkListAnnos(termFactory, random_test.constCons0));
    const359 = termFactory.makeTuple(random_test.const358, random_test.const337);
    const360 = termFactory.annotateTerm(random_test.const359, checkListAnnos(termFactory, random_test.constCons0));
    const361 = termFactory.makeString("3ec1936960274cd2386e4d831c36685e");
    const362 = termFactory.makeString("ChanceOfFailure");
    const363 = termFactory.makeString("62ce95a088baea8ed88b95690537813a");
    const364 = termFactory.makeString("Generating random tests");
    const365 = termFactory.makeString("Runs remaining: ");
    const366 = termFactory.makeString("Start Symbols:");
    const367 = termFactory.makeString("DefineParentSorts");
    const368 = termFactory.makeString("foook");
    const369 = termFactory.makeString("test");
    const370 = termFactory.makeString("Injection keys: ");
    const371 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'generate-random-test'");
    const372 = termFactory.makeString("\n                      ");
    const373 = termFactory.makeString("/test.app");
    constCons56 = (IStrategoTerm)termFactory.makeListCons(random_test.const373, (IStrategoList)random_test.constNil0);
    const374 = termFactory.makeString("/Tests/");
    const375 = termFactory.makeString("../Tests/WebDSL/test.app");
    constCons57 = (IStrategoTerm)termFactory.makeListCons(random_test.const375, (IStrategoList)random_test.constNil0);
    const376 = termFactory.makeString("\n             ");
    const377 = termFactory.makeString("Strategy Result:");
    const378 = termFactory.makeString("Strategy crashed!");
    const379 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'check-results'");
    const380 = termFactory.makeString("c");
    constCons58 = (IStrategoTerm)termFactory.makeListCons(random_test.const380, (IStrategoList)random_test.constNil0);
    const381 = termFactory.makeString("Errors Found!");
    const382 = termFactory.makeString("\n         ");
    const383 = termFactory.makeString("f");
    constCons59 = (IStrategoTerm)termFactory.makeListCons(random_test.const383, (IStrategoList)random_test.constNil0);
    const384 = termFactory.makeString("_");
    const385 = termFactory.makeString("Fixed as much as possible!");
    const386 = termFactory.makeString("f_done");
    constCons60 = (IStrategoTerm)termFactory.makeListCons(random_test.const386, (IStrategoList)random_test.constNil0);
    const387 = termFactory.makeString("No errors found, result: ");
    const388 = termFactory.makeString("ConsCount:");
    const389 = termFactory.makeString("\r");
    constCons61 = (IStrategoTerm)termFactory.makeListCons(random_test.const389, (IStrategoList)random_test.constNil0);
    constCons62 = (IStrategoTerm)termFactory.makeListCons(random_test.const8, (IStrategoList)random_test.constCons61);
    const390 = termFactory.makeString("Parsing failed!");
    const391 = termFactory.makeString("p");
    const392 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'write-test'");
    const393 = termFactory.makeString("\n                                   ");
    const394 = termFactory.makeString("/corrections.txt");
    constCons63 = (IStrategoTerm)termFactory.makeListCons(random_test.const394, (IStrategoList)random_test.constNil0);
    const395 = termFactory.makeString("/program.aterm");
    constCons64 = (IStrategoTerm)termFactory.makeListCons(random_test.const395, (IStrategoList)random_test.constNil0);
    const396 = termFactory.makeString("/program.app");
    constCons65 = (IStrategoTerm)termFactory.makeListCons(random_test.const396, (IStrategoList)random_test.constNil0);
    const397 = termFactory.makeString("/program-after-parsing.aterm");
    constCons66 = (IStrategoTerm)termFactory.makeListCons(random_test.const397, (IStrategoList)random_test.constNil0);
    const398 = termFactory.makeInt(80);
    const399 = termFactory.makeString("\n   ");
    const400 = termFactory.makeString("\n                                 ");
    const401 = termFactory.makeString("Coverage: ");
    const402 = termFactory.makeString("\r\n");
    const403 = termFactory.makeString("/constructor-coverage");
    constCons67 = (IStrategoTerm)termFactory.makeListCons(random_test.const403, (IStrategoList)random_test.constNil0);
    const404 = termFactory.makeString("/home/andre/Documents/Stratego/Random");
    const405 = termFactory.makeString("/home/andre/Documents/Stratego/Random/Tests/WebDSL/.webdsl-parsecache");
    constCons68 = (IStrategoTerm)termFactory.makeListCons(random_test.const405, (IStrategoList)random_test.constNil0);
    const406 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in rule 'pp-program'");
    const407 = termFactory.makeString("-pretty.pp");
    constCons69 = (IStrategoTerm)termFactory.makeListCons(random_test.const407, (IStrategoList)random_test.constNil0);
    const408 = termFactory.makeInt(120);
    const409 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'pp-program'");
    const410 = termFactory.makeString("ItemCount");
    const411 = termFactory.makeString("898bdb61c01849bf871e5b4c26f2ea19");
    const412 = termFactory.makeString("amb");
    const413 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in rule 'check-for-amb'");
    const414 = termFactory.makeString("\n                                             ");
    const415 = termFactory.makeString(".aterm");
    constCons70 = (IStrategoTerm)termFactory.makeListCons(random_test.const415, (IStrategoList)random_test.constNil0);
    const416 = termFactory.makeString("a/");
    const417 = termFactory.makeString(".app");
    constCons71 = (IStrategoTerm)termFactory.makeListCons(random_test.const417, (IStrategoList)random_test.constNil0);
    const418 = termFactory.makeString("Ambiguity found, logging to:");
    const419 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'check-for-amb'");
    const420 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'pp-amb'");
    const421 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'randomly-pick-from-list'");
    const422 = termFactory.makeString("LoopIterator");
    const423 = termFactory.makeString("cb75f42c4441461007f5441a2a142117");
    const424 = termFactory.makeString("Internal error: escaped term in string quotation is not a string in strategy 'read-language'");
    const425 = termFactory.makeString("FixRuntag");
    const426 = termFactory.makeString("de839153517e0fdbe73297f30682f9a0");
    const427 = termFactory.makeString("SDFStart");
    const428 = termFactory.makeString("dad4b483b778455a76941dca849194b9");
    const429 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'find-start-symbols'");
    const430 = termFactory.makeString("yes");
    const431 = termFactory.makeString("There is no unique main Module defined!");
    const432 = termFactory.makeString("AllConsCount");
    const433 = termFactory.makeString("98db4464c2cccbcc12d02a4889cb974a");
    const434 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'read-priorities'");
    const435 = termFactory.makeString("ASDKJLAKSDJLAKSJDLK:AJSDKL:AJS");
    const436 = termFactory.makeString(" IEUROIWJEOD:LKFK:SLDJFLKSDJFKLSDJF");
    const437 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'propagate-priorities-rec'");
    const438 = termFactory.makeString("JSAKDJASLKDJALKSJDLKASJD");
    const439 = termFactory.makeString("7398327492JSAKDJASLKDJALKSJDLKASJD");
    const440 = termFactory.makeString("DLFKSLDJFLKSDJF");
    const441 = termFactory.makeString("984503495FDKJSLKSJF");
    const442 = termFactory.makeString("Priority");
    const443 = termFactory.makeString("a94d5e483b04bd6f7dea6e96077a2823");
    const444 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'read-priority'");
    const445 = termFactory.makeString("ModulesRead");
    const446 = termFactory.makeString("f1c7ef52cbe396fd1e7a9635a8531fce");
    const447 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'param-rewrite-sdf'");
    const448 = termFactory.makeString("no");
    const449 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'read-imports'");
    const450 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'rec-rename-module'");
    const451 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'rec-replace-params'");
    const452 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'replace-param'");
    const453 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'read-prod'");
    const454 = termFactory.makeString("LexSorts");
    const455 = termFactory.makeString("4e038c5b61a9db81cfdae62c6bed0dc0");
    const456 = termFactory.makeString("SortsLex");
    const457 = termFactory.makeString("500d7aae5c9abb44aa9e148245199938");
    const458 = termFactory.makeString("Lex not beeing processed: ");
    const459 = termFactory.makeString("LexCons");
    const460 = termFactory.makeString("36369641d789d13ba4c5ef686f73821b");
    const461 = termFactory.makeString("ConsLex");
    const462 = termFactory.makeString("bedf4bb47878ec0803106bf68ba11695");
    const463 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'check-lex-attrs'");
    const464 = termFactory.makeString("LexReject");
    const465 = termFactory.makeString("fd988e82a862e9aeb20303762a91df8e");
    constreject0 = termFactory.makeAppl(random_test._consreject_0, NO_TERMS);
    constCons72 = (IStrategoTerm)termFactory.makeListCons(random_test.constreject0, (IStrategoList)random_test.constNil0);
    const466 = termFactory.makeString("CFSorts");
    const467 = termFactory.makeString("087502491ccb004cbaf8d928b7531ad3");
    const468 = termFactory.makeString("SortProd2UniqueID");
    const469 = termFactory.makeString("49d5ad76510bc1c4ff32c68961b5bc0d");
    const470 = termFactory.makeString("UniqueID2SortProd");
    const471 = termFactory.makeString("8d30efacdef6e051c01b19b7a1768e3c");
    const472 = termFactory.makeString("Not beeing processed: ");
    const473 = termFactory.makeString("InverseProd");
    const474 = termFactory.makeString("a011b7af225fca2872089fd2b8fa6b6c");
    const475 = termFactory.makeString("CFCons");
    const476 = termFactory.makeString("b570a07b2f5fa71aa7edd7e59ba75f8d");
    const477 = termFactory.makeString("ConsCF");
    const478 = termFactory.makeString("e6ce20aabf618e2a4bb8bbae86f973f8");
    const479 = termFactory.makeString("ConsKey");
    const480 = termFactory.makeString("4bcec20c127efcb6f36e3444d360b560");
    const481 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'check-cf-attrs'");
    const482 = termFactory.makeString("@ASTTerm: ");
    const483 = termFactory.makeString("SpecialASTTerm");
    const484 = termFactory.makeString("090f497326e1019608211242a0a184bc");
    const485 = termFactory.makeString("TerminalPath");
    const486 = termFactory.makeString("8e239b1709dac54fc92b003601d3dca3");
    const487 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'recognize-sort'");
    const488 = termFactory.makeString("sort_");
    const489 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'change-param-sort'");
    const490 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'find-terminal-path'");
    const491 = termFactory.makeString("Definition creation of SpecialAST with inner cons not supported: ");
    const492 = termFactory.makeString("Internal error: with clause failed unexpectedly in rule 'get-SpecialASTTerm-cons-rec'");
    const493 = termFactory.makeString("Definition creation of SpecialAST with var?: ");
    const494 = termFactory.makeString("Definition creation of SpecialAST with list not supported: ");
    const495 = termFactory.makeString("NBLKey2Scope");
    const496 = termFactory.makeString("NBLKey2Refer");
    const497 = termFactory.makeString("NBLNamespace2DefKey");
    const498 = termFactory.makeString("NBLKey2Define");
  }

  @SuppressWarnings("all") public static class write_covered_constructors_0_0 extends Strategy 
  { 
    public static write_covered_constructors_0_0 instance = new write_covered_constructors_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_covered_constructors_0_0");
      Fail0:
      { 
        IStrategoTerm j_131 = null;
        IStrategoTerm l_131 = null;
        IStrategoTerm n_131 = null;
        IStrategoTerm u_131 = null;
        IStrategoTerm v_131 = null;
        j_131 = term;
        l_131 = term;
        u_131 = term;
        n_131 = random_test.const0;
        v_131 = u_131;
        term = termFactory.makeTuple(random_test.const1, j_131);
        term = dr_set_rule_0_3.instance.invoke(context, v_131, n_131, j_131, term);
        if(term == null)
          break Fail0;
        term = l_131;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class grammar_coverage_0_0 extends Strategy 
  { 
    public static grammar_coverage_0_0 instance = new grammar_coverage_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("grammar_coverage_0_0");
      Fail1:
      { 
        IStrategoTerm term0 = term;
        Success0:
        { 
          Fail2:
          { 
            IStrategoTerm u_133 = null;
            IStrategoTerm r_134 = null;
            u_133 = term;
            r_134 = term;
            term = is_list_0_0.instance.invoke(context, u_133);
            if(term == null)
              break Fail2;
            term = r_134;
            IStrategoTerm term1 = term;
            Success1:
            { 
              Fail3:
              { 
                term = map_1_0.instance.invoke(context, u_133, grammar_coverage_0_0.instance);
                if(term == null)
                  break Fail3;
                if(true)
                  break Success1;
              }
              term = term1;
              IStrategoTerm x_133 = null;
              IStrategoTerm q_134 = null;
              IStrategoTerm z_134 = null;
              x_133 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail2;
              q_134 = term;
              z_134 = x_133;
              term = report_with_failure_0_2.instance.invoke(context, z_134, random_test.const2, q_134);
              if(term == null)
                break Fail2;
            }
            term = u_133;
            if(true)
              break Success0;
          }
          term = term0;
          IStrategoTerm term2 = term;
          Success2:
          { 
            Fail4:
            { 
              IStrategoTerm n_133 = null;
              n_133 = term;
              term = is_string_0_0.instance.invoke(context, n_133);
              if(term == null)
                break Fail4;
              term = n_133;
              if(true)
                break Success2;
            }
            term = term2;
            IStrategoTerm term3 = term;
            Success3:
            { 
              Fail5:
              { 
                IStrategoTerm w_132 = null;
                IStrategoTerm z_132 = null;
                w_132 = term;
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consSome_1 != ((IStrategoAppl)term).getConstructor())
                  break Fail5;
                z_132 = term.getSubterm(0);
                IStrategoTerm term4 = term;
                Success4:
                { 
                  Fail6:
                  { 
                    term = this.invoke(context, z_132);
                    if(term == null)
                      break Fail6;
                    if(true)
                      break Success4;
                  }
                  term = term4;
                  IStrategoTerm c_133 = null;
                  IStrategoTerm f_133 = null;
                  IStrategoTerm m_133 = null;
                  c_133 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail5;
                  f_133 = term;
                  m_133 = c_133;
                  term = report_with_failure_0_2.instance.invoke(context, m_133, random_test.const2, f_133);
                  if(term == null)
                    break Fail5;
                }
                term = w_132;
                if(true)
                  break Success3;
              }
              term = term3;
              IStrategoTerm z_131 = null;
              IStrategoTerm b_132 = null;
              IStrategoTerm c_132 = null;
              z_131 = term;
              IStrategoTerm cons0 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              b_132 = cons0;
              IStrategoTerm args0 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              c_132 = args0;
              IStrategoTerm term5 = term;
              Success5:
              { 
                Fail7:
                { 
                  IStrategoTerm g_132 = null;
                  term = write_to_string_0_0.instance.invoke(context, b_132);
                  if(term == null)
                    break Fail7;
                  term = debug_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail7;
                  term = b_132;
                  IStrategoTerm term6 = term;
                  Success6:
                  { 
                    Fail8:
                    { 
                      term = $Cons$C$F_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail8;
                      { 
                        term = b_132;
                        if(true)
                          break Success6;
                      }
                    }
                    term = term6;
                    Success7:
                    { 
                      Fail9:
                      { 
                        term = $Cons$Lex_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail9;
                        { 
                          term = b_132;
                          if(true)
                            break Success7;
                        }
                      }
                      term = termFactory.makeTuple(random_test.const3, b_132);
                      term = conc_strings_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail7;
                    }
                  }
                  g_132 = term;
                  term = length_0_0.instance.invoke(context, c_132);
                  if(term == null)
                    break Fail7;
                  term = write_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail7;
                  term = termFactory.makeTuple(g_132, term);
                  term = conc_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail7;
                  term = write_covered_constructors_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail7;
                  term = this.invoke(context, c_132);
                  if(term == null)
                    break Fail7;
                  if(true)
                    break Success5;
                }
                term = term5;
                IStrategoTerm d_132 = null;
                IStrategoTerm e_132 = null;
                IStrategoTerm o_132 = null;
                d_132 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1;
                e_132 = term;
                o_132 = d_132;
                term = report_with_failure_0_2.instance.invoke(context, o_132, random_test.const2, e_132);
                if(term == null)
                  break Fail1;
              }
              term = z_131;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class webdsl_check_grammar_measure_0_0 extends Strategy 
  { 
    public static webdsl_check_grammar_measure_0_0 instance = new webdsl_check_grammar_measure_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("webdsl_check_grammar_measure_0_0");
      Fail10:
      { 
        TermReference i_135 = new TermReference();
        IStrategoTerm k_135 = null;
        IStrategoTerm m_135 = null;
        IStrategoTerm u_137 = null;
        IStrategoTerm v_137 = null;
        IStrategoTerm x_137 = null;
        IStrategoTerm y_137 = null;
        IStrategoTerm c_138 = null;
        IStrategoTerm f_138 = null;
        IStrategoTerm h_138 = null;
        IStrategoTerm h_136 = null;
        IStrategoTerm k_136 = null;
        IStrategoTerm l_136 = null;
        IStrategoTerm t_136 = null;
        IStrategoTerm v_136 = null;
        IStrategoTerm w_136 = null;
        IStrategoTerm l_138 = null;
        IStrategoTerm n_138 = null;
        IStrategoTerm g_137 = null;
        IStrategoTerm i_137 = null;
        IStrategoTerm j_137 = null;
        IStrategoTerm q_137 = null;
        IStrategoTerm s_137 = null;
        IStrategoTerm t_137 = null;
        IStrategoTerm q_138 = null;
        IStrategoTerm r_138 = null;
        IStrategoTerm w_138 = null;
        IStrategoTerm z_138 = null;
        k_135 = term;
        term = random_test.const4;
        m_135 = random_test.const4;
        x_137 = term;
        u_137 = random_test.const5;
        y_137 = x_137;
        v_137 = random_test.constCons0;
        c_138 = y_137;
        term = termFactory.makeTuple(random_test.const6, m_135);
        term = dr_set_rule_0_3.instance.invoke(context, c_138, u_137, v_137, term);
        if(term == null)
          break Fail10;
        term = k_135;
        h_138 = term;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        IStrategoTerm term8 = term;
        Success8:
        { 
          Fail11:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail11;
            if(true)
              break Success8;
          }
          term = term8;
          IStrategoTerm term9 = term;
          Success9:
          { 
            Fail12:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail12;
              if(true)
                break Success9;
            }
            term = term9;
            IStrategoTerm term10 = term;
            Success10:
            { 
              Fail13:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail13;
                if(true)
                  break Success10;
              }
              term = term10;
              IStrategoTerm term11 = term;
              Success11:
              { 
                Fail14:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail14;
                  if(true)
                    break Success11;
                }
                term = term11;
                IStrategoTerm y_135 = null;
                IStrategoTerm b_136 = null;
                IStrategoTerm f_136 = null;
                y_135 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail10;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail10;
                b_136 = ((IStrategoList)term).tail();
                f_136 = b_136;
                term = report_failure_0_2.instance.invoke(context, f_136, random_test.const7, y_135);
                if(term == null)
                  break Fail10;
              }
            }
          }
        }
        k_136 = term;
        h_136 = random_test.const8;
        l_136 = k_136;
        term = string_replace_0_2.instance.invoke(context, l_136, h_136, random_test.const9);
        if(term == null)
          break Fail10;
        f_138 = term;
        term = h_138;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        IStrategoTerm term12 = term;
        Success12:
        { 
          Fail15:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail15;
            if(true)
              break Success12;
          }
          term = term12;
          IStrategoTerm term13 = term;
          Success13:
          { 
            Fail16:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail16;
              if(true)
                break Success13;
            }
            term = term13;
            IStrategoTerm term14 = term;
            Success14:
            { 
              Fail17:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail17;
                if(true)
                  break Success14;
              }
              term = term14;
              IStrategoTerm term15 = term;
              Success15:
              { 
                Fail18:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail18;
                  if(true)
                    break Success15;
                }
                term = term15;
                IStrategoTerm o_136 = null;
                IStrategoTerm p_136 = null;
                IStrategoTerm s_136 = null;
                o_136 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail10;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail10;
                p_136 = ((IStrategoList)term).tail();
                s_136 = p_136;
                term = report_failure_0_2.instance.invoke(context, s_136, random_test.const7, o_136);
                if(term == null)
                  break Fail10;
              }
            }
          }
        }
        v_136 = term;
        t_136 = random_test.const8;
        w_136 = v_136;
        term = string_replace_0_2.instance.invoke(context, w_136, t_136, random_test.const10);
        if(term == null)
          break Fail10;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const13, termFactory.makeListCons(f_138, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constCons1))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = parse_sdf_definition_file_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        term = sdf_parsefix_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        term = read_sdf_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        n_138 = term;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        IStrategoTerm term16 = term;
        Success16:
        { 
          Fail19:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail19;
            if(true)
              break Success16;
          }
          term = term16;
          IStrategoTerm term17 = term;
          Success17:
          { 
            Fail20:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail20;
              if(true)
                break Success17;
            }
            term = term17;
            IStrategoTerm term18 = term;
            Success18:
            { 
              Fail21:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail21;
                if(true)
                  break Success18;
              }
              term = term18;
              IStrategoTerm term19 = term;
              Success19:
              { 
                Fail22:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail22;
                  if(true)
                    break Success19;
                }
                term = term19;
                IStrategoTerm b_137 = null;
                IStrategoTerm c_137 = null;
                IStrategoTerm f_137 = null;
                b_137 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail10;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail10;
                c_137 = ((IStrategoList)term).tail();
                f_137 = c_137;
                term = report_failure_0_2.instance.invoke(context, f_137, random_test.const7, b_137);
                if(term == null)
                  break Fail10;
              }
            }
          }
        }
        i_137 = term;
        g_137 = random_test.const8;
        j_137 = i_137;
        term = string_replace_0_2.instance.invoke(context, j_137, g_137, random_test.const14);
        if(term == null)
          break Fail10;
        l_138 = term;
        term = n_138;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        IStrategoTerm term20 = term;
        Success20:
        { 
          Fail23:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail23;
            if(true)
              break Success20;
          }
          term = term20;
          IStrategoTerm term21 = term;
          Success21:
          { 
            Fail24:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail24;
              if(true)
                break Success21;
            }
            term = term21;
            IStrategoTerm term22 = term;
            Success22:
            { 
              Fail25:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail25;
                if(true)
                  break Success22;
              }
              term = term22;
              IStrategoTerm term23 = term;
              Success23:
              { 
                Fail26:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail26;
                  if(true)
                    break Success23;
                }
                term = term23;
                IStrategoTerm m_137 = null;
                IStrategoTerm n_137 = null;
                IStrategoTerm p_137 = null;
                m_137 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail10;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail10;
                n_137 = ((IStrategoList)term).tail();
                p_137 = n_137;
                term = report_failure_0_2.instance.invoke(context, p_137, random_test.const7, m_137);
                if(term == null)
                  break Fail10;
              }
            }
          }
        }
        s_137 = term;
        q_137 = random_test.const8;
        t_137 = s_137;
        term = string_replace_0_2.instance.invoke(context, t_137, q_137, random_test.const15);
        if(term == null)
          break Fail10;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const17, termFactory.makeListCons(l_138, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constCons2))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = $Read$From$File_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        if(i_135.value == null)
          i_135.value = term;
        else
          if(i_135.value != term && !i_135.value.match(term))
            break Fail10;
        term = get_all_files_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        lifted9 lifted910 = new lifted9();
        lifted910.i_135 = i_135;
        term = map_1_0.instance.invoke(context, term, lifted910);
        if(term == null)
          break Fail10;
        term = all_keys_$Covered$Cons_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        q_138 = term;
        term = separate_by_0_1.instance.invoke(context, q_138, random_test.const18);
        if(term == null)
          break Fail10;
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        w_138 = term;
        term = all_keys_$Covered$Cons_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        term = length_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        term = write_to_string_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        r_138 = term;
        term = w_138;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const19, termFactory.makeListCons(r_138, termFactory.makeListCons(random_test.const8, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail10;
        z_138 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons3);
        if(term == null)
          break Fail10;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = write_log_0_1.instance.invoke(context, z_138, term);
        if(term == null)
          break Fail10;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_all_files_0_0 extends Strategy 
  { 
    public static get_all_files_0_0 instance = new get_all_files_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("get_all_files_0_0");
      Fail27:
      { 
        IStrategoTerm e_139 = null;
        term = random_test.const21;
        e_139 = random_test.const21;
        term = all_webdsl_check_folders_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail27;
        term = get_all_files_with_extension_0_1.instance.invoke(context, e_139, term);
        if(term == null)
          break Fail27;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_webdsl_check_folders_0_0 extends Strategy 
  { 
    public static all_webdsl_check_folders_0_0 instance = new all_webdsl_check_folders_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("all_webdsl_check_folders_0_0");
      Fail28:
      { 
        IStrategoTerm h_139 = null;
        IStrategoTerm i_139 = null;
        IStrategoTerm j_139 = null;
        IStrategoTerm k_139 = null;
        IStrategoTerm l_139 = null;
        IStrategoTerm m_139 = null;
        IStrategoTerm z_139 = null;
        IStrategoTerm a_140 = null;
        IStrategoTerm e_140 = null;
        IStrategoTerm f_140 = null;
        IStrategoTerm j_140 = null;
        IStrategoTerm k_140 = null;
        IStrategoTerm l_140 = null;
        IStrategoTerm m_140 = null;
        IStrategoTerm q_140 = null;
        IStrategoTerm u_140 = null;
        IStrategoTerm v_140 = null;
        IStrategoTerm w_140 = null;
        IStrategoTerm x_140 = null;
        IStrategoTerm y_140 = null;
        IStrategoTerm z_140 = null;
        IStrategoTerm d_141 = null;
        IStrategoTerm e_141 = null;
        IStrategoTerm f_141 = null;
        IStrategoTerm g_141 = null;
        IStrategoTerm k_141 = null;
        IStrategoTerm l_141 = null;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons5);
        if(term == null)
          break Fail28;
        h_139 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons6);
        if(term == null)
          break Fail28;
        i_139 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons7);
        if(term == null)
          break Fail28;
        j_139 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons8);
        if(term == null)
          break Fail28;
        k_139 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons9);
        if(term == null)
          break Fail28;
        l_139 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons10);
        if(term == null)
          break Fail28;
        m_139 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons11);
        if(term == null)
          break Fail28;
        z_139 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons12);
        if(term == null)
          break Fail28;
        a_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons13);
        if(term == null)
          break Fail28;
        e_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons14);
        if(term == null)
          break Fail28;
        f_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons15);
        if(term == null)
          break Fail28;
        j_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons16);
        if(term == null)
          break Fail28;
        k_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons17);
        if(term == null)
          break Fail28;
        l_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons18);
        if(term == null)
          break Fail28;
        m_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons19);
        if(term == null)
          break Fail28;
        q_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons20);
        if(term == null)
          break Fail28;
        u_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons21);
        if(term == null)
          break Fail28;
        v_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons22);
        if(term == null)
          break Fail28;
        w_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons23);
        if(term == null)
          break Fail28;
        x_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons24);
        if(term == null)
          break Fail28;
        y_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons25);
        if(term == null)
          break Fail28;
        z_140 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons26);
        if(term == null)
          break Fail28;
        d_141 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons27);
        if(term == null)
          break Fail28;
        e_141 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons28);
        if(term == null)
          break Fail28;
        f_141 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons29);
        if(term == null)
          break Fail28;
        g_141 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons30);
        if(term == null)
          break Fail28;
        k_141 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons31);
        if(term == null)
          break Fail28;
        l_141 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons32);
        if(term == null)
          break Fail28;
        term = (IStrategoTerm)termFactory.makeListCons(termFactory.annotateTerm(h_139, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(i_139, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(j_139, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(k_139, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(l_139, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(m_139, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(z_139, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(a_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(e_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(f_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(j_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(k_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(l_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(m_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(q_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(u_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(v_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(w_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(x_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(y_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(z_140, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(d_141, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(e_141, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(f_141, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(g_141, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(k_141, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(l_141, checkListAnnos(termFactory, random_test.constNil0)), termFactory.makeListCons(termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0)), (IStrategoList)random_test.constNil0))))))))))))))))))))))))))));
        term = map_1_0.instance.invoke(context, term, lifted12.instance);
        if(term == null)
          break Fail28;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class shrink_test_0_0 extends Strategy 
  { 
    public static shrink_test_0_0 instance = new shrink_test_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("shrink_test_0_0");
      Fail29:
      { 
        IStrategoTerm v_143 = null;
        IStrategoTerm w_143 = null;
        IStrategoTerm x_143 = null;
        IStrategoTerm y_143 = null;
        IStrategoTerm z_143 = null;
        IStrategoTerm b_144 = null;
        IStrategoTerm g_144 = null;
        IStrategoTerm i_144 = null;
        IStrategoTerm k_144 = null;
        IStrategoTerm l_144 = null;
        IStrategoTerm m_144 = null;
        IStrategoTerm e_144 = null;
        IStrategoTerm r_144 = null;
        IStrategoTerm s_144 = null;
        IStrategoTerm u_144 = null;
        IStrategoTerm v_144 = null;
        IStrategoTerm w_144 = null;
        IStrategoTerm y_144 = null;
        IStrategoTerm b_145 = null;
        term = debug_0_0.instance.invoke(context, random_test.const51);
        if(term == null)
          break Fail29;
        z_143 = term;
        term = random_test.const4;
        b_144 = random_test.const4;
        k_144 = term;
        g_144 = random_test.const5;
        l_144 = k_144;
        i_144 = random_test.constCons0;
        m_144 = l_144;
        term = termFactory.makeTuple(random_test.const6, b_144);
        term = dr_set_rule_0_3.instance.invoke(context, m_144, g_144, i_144, term);
        if(term == null)
          break Fail29;
        term = read_language_0_0.instance.invoke(context, z_143);
        if(term == null)
          break Fail29;
        term = shrink_get_input_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail29;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail29;
        x_143 = term.getSubterm(0);
        v_143 = term.getSubterm(1);
        w_143 = term.getSubterm(2);
        term = termFactory.makeTuple(v_143, w_143);
        e_144 = term;
        u_144 = term;
        r_144 = random_test.const52;
        v_144 = u_144;
        s_144 = random_test.constCons0;
        w_144 = v_144;
        term = termFactory.makeTuple(random_test.const53, e_144);
        term = dr_set_rule_0_3.instance.invoke(context, w_144, r_144, s_144, term);
        if(term == null)
          break Fail29;
        y_144 = x_143;
        term = shrink_find_sorts_0_1.instance.invoke(context, y_144, random_test.constNone0);
        if(term == null)
          break Fail29;
        y_143 = term;
        term = bagof_$Shrink$Sort_0_0.instance.invoke(context, random_test.const54);
        if(term == null)
          break Fail29;
        b_145 = term;
        term = bagof_$Shrink$Sort_0_0.instance.invoke(context, random_test.const55);
        if(term == null)
          break Fail29;
        term = termFactory.makeTuple(y_143, b_145, term);
        term = shrink_program_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail29;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class shrink_program_0_0 extends Strategy 
  { 
    public static shrink_program_0_0 instance = new shrink_program_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("shrink_program_0_0");
      Fail30:
      { 
        IStrategoTerm i_145 = null;
        IStrategoTerm p_145 = null;
        IStrategoTerm v_145 = null;
        IStrategoTerm w_145 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail30;
        i_145 = term.getSubterm(0);
        w_145 = term.getSubterm(1);
        p_145 = term.getSubterm(2);
        term = reverse_0_0.instance.invoke(context, p_145);
        if(term == null)
          break Fail30;
        term = termFactory.makeTuple(i_145, term);
        term = while_2_0.instance.invoke(context, term, lifted14.instance, shrink_iter_0_0.instance);
        if(term == null)
          break Fail30;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail30;
        v_145 = term.getSubterm(0);
        term = reverse_0_0.instance.invoke(context, w_145);
        if(term == null)
          break Fail30;
        term = termFactory.makeTuple(v_145, term);
        term = while_2_0.instance.invoke(context, term, lifted19.instance, try_shrinking_0_0.instance);
        if(term == null)
          break Fail30;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class try_shrinking_0_0 extends Strategy 
  { 
    public static try_shrinking_0_0 instance = new try_shrinking_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("try_shrinking_0_0");
      Fail31:
      { 
        IStrategoTerm h_146 = null;
        IStrategoTerm i_146 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail31;
        h_146 = term.getSubterm(0);
        i_146 = term.getSubterm(1);
        term = shrink_iter_stars_0_1.instance.invoke(context, h_146, i_146);
        if(term == null)
          break Fail31;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class shrink_iter_0_0 extends Strategy 
  { 
    public static shrink_iter_0_0 instance = new shrink_iter_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("shrink_iter_0_0");
      Fail32:
      { 
        IStrategoTerm j_146 = null;
        TermReference k_146 = new TermReference();
        TermReference m_146 = new TermReference();
        TermReference p_146 = new TermReference();
        IStrategoTerm q_146 = null;
        IStrategoTerm r_146 = null;
        IStrategoTerm s_146 = null;
        IStrategoTerm t_146 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail32;
        r_146 = term.getSubterm(0);
        q_146 = term.getSubterm(1);
        term = length_0_0.instance.invoke(context, q_146);
        if(term == null)
          break Fail32;
        term = debug_1_0.instance.invoke(context, term, lifted21.instance);
        if(term == null)
          break Fail32;
        IStrategoTerm term26 = term;
        Success24:
        { 
          Fail33:
          { 
            term = q_146;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail33;
            { 
              if(true)
                break Fail32;
              if(true)
                break Success24;
            }
          }
          term = term26;
        }
        term = $Hd_0_0.instance.invoke(context, q_146);
        if(term == null)
          break Fail32;
        if(p_146.value == null)
          p_146.value = term;
        else
          if(p_146.value != term && !p_146.value.match(term))
            break Fail32;
        if(p_146.value == null)
          break Fail32;
        term = debug_0_0.instance.invoke(context, p_146.value);
        if(term == null)
          break Fail32;
        IStrategoTerm term27 = term;
        Success25:
        { 
          Fail34:
          { 
            IStrategoTerm u_146 = null;
            u_146 = term;
            if(p_146.value == null)
              break Fail34;
            term = is_string_0_0.instance.invoke(context, p_146.value);
            if(term == null)
              break Fail34;
            term = u_146;
            { 
              if(p_146.value == null)
                break Fail32;
              term = p_146.value;
              if(k_146.value == null)
                k_146.value = term;
              else
                if(k_146.value != term && !k_146.value.match(term))
                  break Fail32;
              term = random_test.const58;
              j_146 = random_test.const58;
              if(true)
                break Success25;
            }
          }
          term = term27;
          if(p_146.value == null)
            break Fail32;
          term = p_146.value;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail32;
          if(k_146.value == null)
            k_146.value = term.getSubterm(0);
          else
            if(k_146.value != term.getSubterm(0) && !k_146.value.match(term.getSubterm(0)))
              break Fail32;
          j_146 = term.getSubterm(1);
        }
        Success26:
        { 
          Fail35:
          { 
            IStrategoTerm x_146 = null;
            x_146 = term;
            term = remove_next_iter_0_2.instance.invoke(context, r_146, k_146.value, j_146);
            if(term == null)
              break Fail35;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail35;
            s_146 = term.getSubterm(0);
            if(m_146.value == null)
              m_146.value = term.getSubterm(1);
            else
              if(m_146.value != term.getSubterm(1) && !m_146.value.match(term.getSubterm(1)))
                break Fail35;
            term = x_146;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const59);
              if(term == null)
                break Fail32;
              term = q_146;
              lifted22 lifted2210 = new lifted22();
              lifted2210.p_146 = p_146;
              lifted2210.k_146 = k_146;
              lifted2210.m_146 = m_146;
              term = SRTS_one.instance.invoke(context, term, lifted2210);
              if(term == null)
                break Fail32;
              t_146 = term;
              if(true)
                break Success26;
            }
          }
          term = debug_0_0.instance.invoke(context, random_test.const60);
          if(term == null)
            break Fail32;
          term = q_146;
          lifted23 lifted2310 = new lifted23();
          lifted2310.p_146 = p_146;
          term = filter_1_0.instance.invoke(context, term, lifted2310);
          if(term == null)
            break Fail32;
          t_146 = term;
          term = r_146;
          s_146 = r_146;
        }
        term = termFactory.makeTuple(s_146, t_146);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class run_and_match_error_0_0 extends Strategy 
  { 
    public static run_and_match_error_0_0 instance = new run_and_match_error_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("run_and_match_error_0_0");
      Fail36:
      { 
        IStrategoTerm b_147 = null;
        IStrategoTerm c_147 = null;
        IStrategoTerm d_147 = null;
        IStrategoTerm f_147 = null;
        IStrategoTerm g_147 = null;
        IStrategoTerm j_147 = null;
        IStrategoTerm k_147 = null;
        IStrategoTerm l_147 = null;
        IStrategoTerm z_147 = null;
        IStrategoTerm b_148 = null;
        IStrategoTerm c_148 = null;
        IStrategoTerm b_149 = null;
        IStrategoTerm h_148 = null;
        IStrategoTerm j_148 = null;
        IStrategoTerm k_148 = null;
        b_147 = term;
        term = debug_0_0.instance.invoke(context, random_test.const61);
        if(term == null)
          break Fail36;
        term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail36;
        IStrategoTerm term30 = term;
        Success27:
        { 
          Fail37:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail37;
            if(true)
              break Success27;
          }
          term = term30;
          IStrategoTerm term31 = term;
          Success28:
          { 
            Fail38:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail38;
              if(true)
                break Success28;
            }
            term = term31;
            IStrategoTerm term32 = term;
            Success29:
            { 
              Fail39:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail39;
                if(true)
                  break Success29;
              }
              term = term32;
              IStrategoTerm term33 = term;
              Success30:
              { 
                Fail40:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail40;
                  if(true)
                    break Success30;
                }
                term = term33;
                IStrategoTerm o_147 = null;
                IStrategoTerm t_147 = null;
                IStrategoTerm y_147 = null;
                o_147 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail36;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail36;
                t_147 = ((IStrategoList)term).tail();
                y_147 = t_147;
                term = report_failure_0_2.instance.invoke(context, y_147, random_test.const62, o_147);
                if(term == null)
                  break Fail36;
              }
            }
          }
        }
        b_148 = term;
        z_147 = random_test.const8;
        c_148 = b_148;
        term = string_replace_0_2.instance.invoke(context, c_148, z_147, random_test.const8);
        if(term == null)
          break Fail36;
        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons33);
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail36;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        d_147 = term;
        term = debug_0_0.instance.invoke(context, random_test.const64);
        if(term == null)
          break Fail36;
        term = pp_program_0_0.instance.invoke(context, b_147);
        if(term == null)
          break Fail36;
        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons34);
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail36;
        c_147 = term;
        term = debug_0_0.instance.invoke(context, random_test.const66);
        if(term == null)
          break Fail36;
        term = write_log_0_1.instance.invoke(context, c_147, d_147);
        if(term == null)
          break Fail36;
        term = debug_0_0.instance.invoke(context, random_test.const67);
        if(term == null)
          break Fail36;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons35);
        if(term == null)
          break Fail36;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = $Read$From$File_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail36;
        term = debug_0_0.instance.invoke(context, random_test.const69);
        if(term == null)
          break Fail36;
        j_147 = random_test.const70;
        term = debug_0_0.instance.invoke(context, random_test.const71);
        if(term == null)
          break Fail36;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons36);
        if(term == null)
          break Fail36;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        k_147 = term;
        term = debug_0_0.instance.invoke(context, random_test.const73);
        if(term == null)
          break Fail36;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons37);
        if(term == null)
          break Fail36;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const79, termFactory.makeListCons(random_test.const78, termFactory.makeListCons(termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0)), (IStrategoList)random_test.constCons40)));
        g_147 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons41);
        if(term == null)
          break Fail36;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        f_147 = term;
        b_149 = term;
        term = f_147;
        IStrategoTerm term34 = term;
        Success31:
        { 
          Fail41:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail41;
            if(true)
              break Success31;
          }
          term = term34;
          IStrategoTerm term35 = term;
          Success32:
          { 
            Fail42:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail42;
              if(true)
                break Success32;
            }
            term = term35;
            IStrategoTerm term36 = term;
            Success33:
            { 
              Fail43:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail43;
                if(true)
                  break Success33;
              }
              term = term36;
              IStrategoTerm term37 = term;
              Success34:
              { 
                Fail44:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail44;
                  if(true)
                    break Success34;
                }
                term = term37;
                IStrategoTerm d_148 = null;
                IStrategoTerm e_148 = null;
                IStrategoTerm g_148 = null;
                d_148 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail36;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail36;
                e_148 = ((IStrategoList)term).tail();
                g_148 = e_148;
                term = report_failure_0_2.instance.invoke(context, g_148, random_test.const62, d_148);
                if(term == null)
                  break Fail36;
              }
            }
          }
        }
        j_148 = term;
        h_148 = random_test.const8;
        k_148 = j_148;
        term = string_replace_0_2.instance.invoke(context, k_148, h_148, random_test.const8);
        if(term == null)
          break Fail36;
        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons42);
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail36;
        term = (IStrategoTerm)termFactory.makeListCons(termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0)), (IStrategoList)random_test.constNil0);
        term = remove_folders_0_1.instance.invoke(context, b_149, term);
        if(term == null)
          break Fail36;
        term = run_shrink_0_2.instance.invoke(context, g_147, j_147, k_147);
        if(term == null)
          break Fail36;
        l_147 = term;
        term = debug_1_0.instance.invoke(context, term, lifted24.instance);
        if(term == null)
          break Fail36;
        IStrategoTerm term38 = term;
        Success35:
        { 
          Fail45:
          { 
            IStrategoTerm l_148 = null;
            l_148 = term;
            IStrategoTerm term39 = term;
            Success36:
            { 
              Fail46:
              { 
                term = $Shrink$Error_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail46;
                term = termFactory.makeTuple(term, l_147);
                term = eq_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail46;
                { 
                  if(true)
                    break Fail45;
                  if(true)
                    break Success36;
                }
              }
              term = term39;
            }
            term = l_148;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const83);
              if(term == null)
                break Fail36;
              if(true)
                break Fail36;
              if(true)
                break Success35;
            }
          }
          term = term38;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class shrink_iter_stars_0_1 extends Strategy 
  { 
    public static shrink_iter_stars_0_1 instance = new shrink_iter_stars_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm i_149)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("shrink_iter_stars_0_1");
      Fail47:
      { 
        IStrategoTerm j_149 = null;
        IStrategoTerm k_149 = null;
        TermReference l_149 = new TermReference();
        TermReference m_149 = new TermReference();
        TermReference n_149 = new TermReference();
        TermReference o_149 = new TermReference();
        IStrategoTerm p_149 = null;
        IStrategoTerm q_149 = null;
        IStrategoTerm r_149 = null;
        p_149 = term;
        term = length_0_0.instance.invoke(context, i_149);
        if(term == null)
          break Fail47;
        term = debug_1_0.instance.invoke(context, term, lifted25.instance);
        if(term == null)
          break Fail47;
        IStrategoTerm term40 = term;
        Success37:
        { 
          Fail48:
          { 
            term = i_149;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail48;
            { 
              if(true)
                break Fail47;
              if(true)
                break Success37;
            }
          }
          term = term40;
        }
        term = $Hd_0_0.instance.invoke(context, i_149);
        if(term == null)
          break Fail47;
        if(o_149.value == null)
          o_149.value = term;
        else
          if(o_149.value != term && !o_149.value.match(term))
            break Fail47;
        Success38:
        { 
          Fail49:
          { 
            IStrategoTerm s_149 = null;
            s_149 = term;
            if(o_149.value == null)
              break Fail49;
            term = is_string_0_0.instance.invoke(context, o_149.value);
            if(term == null)
              break Fail49;
            term = s_149;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const84);
              if(term == null)
                break Fail47;
              Success39:
              { 
                Fail50:
                { 
                  IStrategoTerm t_149 = null;
                  t_149 = term;
                  term = p_149;
                  lifted26 lifted2610 = new lifted26();
                  lifted2610.o_149 = o_149;
                  term = oncetd_1_0.instance.invoke(context, term, lifted2610);
                  if(term == null)
                    break Fail50;
                  j_149 = term;
                  term = t_149;
                  { 
                    term = debug_0_0.instance.invoke(context, random_test.const85);
                    if(term == null)
                      break Fail47;
                    IStrategoTerm term43 = term;
                    Success40:
                    { 
                      Fail51:
                      { 
                        IStrategoTerm u_149 = null;
                        u_149 = term;
                        term = run_and_match_error_0_0.instance.invoke(context, j_149);
                        if(term == null)
                          break Fail51;
                        term = u_149;
                        { 
                          term = debug_0_0.instance.invoke(context, random_test.const86);
                          if(term == null)
                            break Fail47;
                          term = i_149;
                          lifted27 lifted2710 = new lifted27();
                          lifted2710.o_149 = o_149;
                          term = filter_1_0.instance.invoke(context, term, lifted2710);
                          if(term == null)
                            break Fail47;
                          r_149 = term;
                          term = j_149;
                          q_149 = j_149;
                          if(true)
                            break Success40;
                        }
                      }
                      term = term43;
                      IStrategoTerm b_150 = null;
                      IStrategoTerm d_150 = null;
                      IStrategoTerm e_150 = null;
                      if(o_149.value == null)
                        break Fail47;
                      term = debug_1_0.instance.invoke(context, o_149.value, lifted28.instance);
                      if(term == null)
                        break Fail47;
                      term = i_149;
                      lifted30 lifted3010 = new lifted30();
                      lifted3010.o_149 = o_149;
                      term = SRTS_one.instance.invoke(context, term, lifted3010);
                      if(term == null)
                        break Fail47;
                      r_149 = term;
                      term = p_149;
                      q_149 = p_149;
                      term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail47;
                      IStrategoTerm term45 = term;
                      Success41:
                      { 
                        Fail52:
                        { 
                          term = concat_strings_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail52;
                          if(true)
                            break Success41;
                        }
                        term = term45;
                        IStrategoTerm term46 = term;
                        Success42:
                        { 
                          Fail53:
                          { 
                            term = is_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail53;
                            if(true)
                              break Success42;
                          }
                          term = term46;
                          IStrategoTerm term47 = term;
                          Success43:
                          { 
                            Fail54:
                            { 
                              term = int_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail54;
                              if(true)
                                break Success43;
                            }
                            term = term47;
                            IStrategoTerm term48 = term;
                            Success44:
                            { 
                              Fail55:
                              { 
                                term = real_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail55;
                                if(true)
                                  break Success44;
                              }
                              term = term48;
                              IStrategoTerm x_149 = null;
                              IStrategoTerm y_149 = null;
                              IStrategoTerm a_150 = null;
                              x_149 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail47;
                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                break Fail47;
                              y_149 = ((IStrategoList)term).tail();
                              a_150 = y_149;
                              term = report_failure_0_2.instance.invoke(context, a_150, random_test.const88, x_149);
                              if(term == null)
                                break Fail47;
                            }
                          }
                        }
                      }
                      d_150 = term;
                      b_150 = random_test.const8;
                      e_150 = d_150;
                      term = string_replace_0_2.instance.invoke(context, e_150, b_150, random_test.const8);
                      if(term == null)
                        break Fail47;
                      term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons33);
                      term = concat_strings_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail47;
                      term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                      k_149 = term;
                      term = pp_program_0_0.instance.invoke(context, q_149);
                      if(term == null)
                        break Fail47;
                      term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons34);
                      term = concat_strings_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail47;
                      term = write_log_0_1.instance.invoke(context, term, k_149);
                      if(term == null)
                        break Fail47;
                    }
                    if(true)
                      break Success39;
                  }
                }
                term = debug_0_0.instance.invoke(context, random_test.const89);
                if(term == null)
                  break Fail47;
                term = i_149;
                lifted32 lifted3210 = new lifted32();
                lifted3210.o_149 = o_149;
                term = filter_1_0.instance.invoke(context, term, lifted3210);
                if(term == null)
                  break Fail47;
                r_149 = term;
                term = p_149;
                q_149 = p_149;
              }
              if(true)
                break Success38;
            }
          }
          term = debug_0_0.instance.invoke(context, random_test.const90);
          if(term == null)
            break Fail47;
          if(o_149.value == null)
            break Fail47;
          term = o_149.value;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail47;
          if(m_149.value == null)
            m_149.value = term.getSubterm(0);
          else
            if(m_149.value != term.getSubterm(0) && !m_149.value.match(term.getSubterm(0)))
              break Fail47;
          if(l_149.value == null)
            l_149.value = term.getSubterm(1);
          else
            if(l_149.value != term.getSubterm(1) && !l_149.value.match(term.getSubterm(1)))
              break Fail47;
          Success45:
          { 
            Fail56:
            { 
              IStrategoTerm f_150 = null;
              f_150 = term;
              term = remove_next_0_2.instance.invoke(context, p_149, m_149.value, l_149.value);
              if(term == null)
                break Fail56;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail56;
              q_149 = term.getSubterm(0);
              if(n_149.value == null)
                n_149.value = term.getSubterm(1);
              else
                if(n_149.value != term.getSubterm(1) && !n_149.value.match(term.getSubterm(1)))
                  break Fail56;
              term = f_150;
              { 
                term = debug_0_0.instance.invoke(context, random_test.const59);
                if(term == null)
                  break Fail47;
                term = i_149;
                lifted33 lifted3310 = new lifted33();
                lifted3310.l_149 = l_149;
                lifted3310.m_149 = m_149;
                lifted3310.n_149 = n_149;
                term = SRTS_one.instance.invoke(context, term, lifted3310);
                if(term == null)
                  break Fail47;
                r_149 = term;
                if(true)
                  break Success45;
              }
            }
            term = debug_0_0.instance.invoke(context, random_test.const60);
            if(term == null)
              break Fail47;
            term = i_149;
            lifted54 lifted5410 = new lifted54();
            lifted5410.o_149 = o_149;
            term = filter_1_0.instance.invoke(context, term, lifted5410);
            if(term == null)
              break Fail47;
            r_149 = term;
            term = p_149;
            q_149 = p_149;
          }
        }
        term = termFactory.makeTuple(q_149, r_149);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class remove_next_iter_0_2 extends Strategy 
  { 
    public static remove_next_iter_0_2 instance = new remove_next_iter_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_m_150, IStrategoTerm ref_n_150)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference m_150 = new TermReference(ref_m_150);
      TermReference n_150 = new TermReference(ref_n_150);
      context.push("remove_next_iter_0_2");
      Fail57:
      { 
        IStrategoTerm o_150 = null;
        IStrategoTerm p_150 = null;
        IStrategoTerm q_150 = null;
        p_150 = term;
        term = debug_0_0.instance.invoke(context, random_test.const91);
        if(term == null)
          break Fail57;
        term = p_150;
        lifted56 lifted5610 = new lifted56();
        lifted5610.m_150 = m_150;
        lifted5610.n_150 = n_150;
        term = oncetd_1_0.instance.invoke(context, term, lifted5610);
        if(term == null)
          break Fail57;
        o_150 = term;
        IStrategoTerm term52 = term;
        Success46:
        { 
          Fail58:
          { 
            IStrategoTerm r_150 = null;
            r_150 = term;
            term = run_and_match_error_0_0.instance.invoke(context, o_150);
            if(term == null)
              break Fail58;
            term = r_150;
            { 
              if(n_150.value == null)
                break Fail57;
              term = termFactory.makeTuple(o_150, n_150.value);
              if(true)
                break Success46;
            }
          }
          term = term52;
          IStrategoTerm y_150 = null;
          IStrategoTerm a_151 = null;
          IStrategoTerm b_151 = null;
          if(n_150.value == null)
            break Fail57;
          term = inc_0_0.instance.invoke(context, n_150.value);
          if(term == null)
            break Fail57;
          term = termFactory.makeTuple(p_150, term);
          term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail57;
          IStrategoTerm term53 = term;
          Success47:
          { 
            Fail59:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail59;
              if(true)
                break Success47;
            }
            term = term53;
            IStrategoTerm term54 = term;
            Success48:
            { 
              Fail60:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail60;
                if(true)
                  break Success48;
              }
              term = term54;
              IStrategoTerm term55 = term;
              Success49:
              { 
                Fail61:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail61;
                  if(true)
                    break Success49;
                }
                term = term55;
                IStrategoTerm term56 = term;
                Success50:
                { 
                  Fail62:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail62;
                    if(true)
                      break Success50;
                  }
                  term = term56;
                  IStrategoTerm u_150 = null;
                  IStrategoTerm v_150 = null;
                  IStrategoTerm x_150 = null;
                  u_150 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail57;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail57;
                  v_150 = ((IStrategoList)term).tail();
                  x_150 = v_150;
                  term = report_failure_0_2.instance.invoke(context, x_150, random_test.const92, u_150);
                  if(term == null)
                    break Fail57;
                }
              }
            }
          }
          a_151 = term;
          y_150 = random_test.const8;
          b_151 = a_151;
          term = string_replace_0_2.instance.invoke(context, b_151, y_150, random_test.const8);
          if(term == null)
            break Fail57;
          term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons33);
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail57;
          term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
          q_150 = term;
          term = pp_program_0_0.instance.invoke(context, p_150);
          if(term == null)
            break Fail57;
          term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons34);
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail57;
          term = write_log_0_1.instance.invoke(context, term, q_150);
          if(term == null)
            break Fail57;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class remove_next_iter_aux_0_2 extends Strategy 
  { 
    public static remove_next_iter_aux_0_2 instance = new remove_next_iter_aux_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm p_151, IStrategoTerm ref_q_151)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference q_151 = new TermReference(ref_q_151);
      context.push("remove_next_iter_aux_0_2");
      Fail63:
      { 
        IStrategoTerm t_151 = null;
        IStrategoTerm v_151 = null;
        IStrategoTerm j_152 = null;
        IStrategoTerm k_152 = null;
        IStrategoTerm q_152 = null;
        IStrategoTerm x_152 = null;
        t_151 = term;
        IStrategoList annos0 = term.getAnnotations();
        if(annos0.getTermType() != IStrategoTerm.LIST || ((IStrategoList)annos0).isEmpty())
          break Fail63;
        if(((IStrategoList)annos0).head() != p_151 && !p_151.match(((IStrategoList)annos0).head()))
          break Fail63;
        IStrategoTerm arg9 = ((IStrategoList)annos0).tail();
        if(arg9.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg9).isEmpty())
          break Fail63;
        j_152 = term;
        term = is_list_0_0.instance.invoke(context, t_151);
        if(term == null)
          break Fail63;
        term = debug_1_0.instance.invoke(context, t_151, lifted57.instance);
        if(term == null)
          break Fail63;
        k_152 = j_152;
        term = length_0_0.instance.invoke(context, t_151);
        if(term == null)
          break Fail63;
        term = termFactory.makeTuple(term, random_test.const94);
        term = geq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail63;
        term = debug_0_0.instance.invoke(context, random_test.const95);
        if(term == null)
          break Fail63;
        term = k_152;
        q_152 = k_152;
        IStrategoTerm term57 = term;
        Success51:
        { 
          Fail64:
          { 
            IStrategoTerm r_152 = null;
            IStrategoTerm w_152 = null;
            w_152 = term;
            term = length_0_0.instance.invoke(context, t_151);
            if(term == null)
              break Fail64;
            r_152 = term;
            term = w_152;
            if(q_151.value == null)
              break Fail64;
            term = termFactory.makeTuple(q_151.value, r_152);
            term = geq_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail64;
            { 
              if(true)
                break Fail63;
              if(true)
                break Success51;
            }
          }
          term = term57;
        }
        term = q_152;
        x_152 = q_152;
        IStrategoTerm term58 = term;
        Success52:
        { 
          Fail65:
          { 
            term = debug_0_0.instance.invoke(context, random_test.const96);
            if(term == null)
              break Fail65;
            term = number$Items_0_0.instance.invoke(context, t_151);
            if(term == null)
              break Fail65;
            lifted58 lifted5810 = new lifted58();
            lifted5810.q_151 = q_151;
            term = filter_1_0.instance.invoke(context, term, lifted5810);
            if(term == null)
              break Fail65;
            v_151 = term;
            if(true)
              break Success52;
          }
          term = term58;
          IStrategoTerm b_152 = null;
          IStrategoTerm g_152 = null;
          IStrategoTerm m_153 = null;
          b_152 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail63;
          g_152 = term;
          m_153 = b_152;
          term = report_with_failure_0_2.instance.invoke(context, m_153, random_test.const97, g_152);
          if(term == null)
            break Fail63;
        }
        term = x_152;
        if(v_151 == null)
          break Fail63;
        term = termFactory.annotateTerm(v_151, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(p_151, (IStrategoList)random_test.constNil0)));
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class remove_next_0_2 extends Strategy 
  { 
    public static remove_next_0_2 instance = new remove_next_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_n_153, IStrategoTerm ref_s_153)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference n_153 = new TermReference(ref_n_153);
      TermReference s_153 = new TermReference(ref_s_153);
      context.push("remove_next_0_2");
      Fail66:
      { 
        IStrategoTerm v_153 = null;
        IStrategoTerm z_153 = null;
        IStrategoTerm a_154 = null;
        z_153 = term;
        lifted65 lifted656 = new lifted65();
        lifted656.n_153 = n_153;
        lifted656.s_153 = s_153;
        term = oncetd_1_0.instance.invoke(context, term, lifted656);
        if(term == null)
          break Fail66;
        v_153 = term;
        IStrategoTerm term60 = term;
        Success53:
        { 
          Fail67:
          { 
            IStrategoTerm b_154 = null;
            b_154 = term;
            term = run_and_match_error_0_0.instance.invoke(context, v_153);
            if(term == null)
              break Fail67;
            term = b_154;
            { 
              if(s_153.value == null)
                break Fail66;
              term = termFactory.makeTuple(v_153, s_153.value);
              if(true)
                break Success53;
            }
          }
          term = term60;
          IStrategoTerm l_154 = null;
          IStrategoTerm n_154 = null;
          IStrategoTerm r_154 = null;
          if(s_153.value == null)
            break Fail66;
          term = inc_0_0.instance.invoke(context, s_153.value);
          if(term == null)
            break Fail66;
          term = termFactory.makeTuple(z_153, term);
          term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail66;
          IStrategoTerm term61 = term;
          Success54:
          { 
            Fail68:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail68;
              if(true)
                break Success54;
            }
            term = term61;
            IStrategoTerm term62 = term;
            Success55:
            { 
              Fail69:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail69;
                if(true)
                  break Success55;
              }
              term = term62;
              IStrategoTerm term63 = term;
              Success56:
              { 
                Fail70:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail70;
                  if(true)
                    break Success56;
                }
                term = term63;
                IStrategoTerm term64 = term;
                Success57:
                { 
                  Fail71:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail71;
                    if(true)
                      break Success57;
                  }
                  term = term64;
                  IStrategoTerm e_154 = null;
                  IStrategoTerm f_154 = null;
                  IStrategoTerm k_154 = null;
                  e_154 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail66;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail66;
                  f_154 = ((IStrategoList)term).tail();
                  k_154 = f_154;
                  term = report_failure_0_2.instance.invoke(context, k_154, random_test.const98, e_154);
                  if(term == null)
                    break Fail66;
                }
              }
            }
          }
          n_154 = term;
          l_154 = random_test.const8;
          r_154 = n_154;
          term = string_replace_0_2.instance.invoke(context, r_154, l_154, random_test.const8);
          if(term == null)
            break Fail66;
          term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons33);
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail66;
          term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
          a_154 = term;
          term = pp_program_0_0.instance.invoke(context, z_153);
          if(term == null)
            break Fail66;
          term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons34);
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail66;
          term = write_log_0_1.instance.invoke(context, term, a_154);
          if(term == null)
            break Fail66;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class remove_next_aux_0_2 extends Strategy 
  { 
    public static remove_next_aux_0_2 instance = new remove_next_aux_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm h_155, IStrategoTerm ref_k_155)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference k_155 = new TermReference(ref_k_155);
      context.push("remove_next_aux_0_2");
      Fail72:
      { 
        IStrategoTerm l_155 = null;
        IStrategoTerm r_155 = null;
        l_155 = term;
        IStrategoList annos1 = term.getAnnotations();
        if(annos1.getTermType() != IStrategoTerm.LIST || ((IStrategoList)annos1).isEmpty())
          break Fail72;
        if(((IStrategoList)annos1).head() != h_155 && !h_155.match(((IStrategoList)annos1).head()))
          break Fail72;
        IStrategoTerm arg11 = ((IStrategoList)annos1).tail();
        if(arg11.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg11).isEmpty())
          break Fail72;
        r_155 = term;
        term = is_list_0_0.instance.invoke(context, l_155);
        if(term == null)
          break Fail72;
        term = r_155;
        IStrategoTerm term65 = term;
        Success58:
        { 
          Fail73:
          { 
            IStrategoTerm t_155 = null;
            IStrategoTerm u_155 = null;
            u_155 = term;
            term = length_0_0.instance.invoke(context, l_155);
            if(term == null)
              break Fail73;
            t_155 = term;
            term = u_155;
            if(k_155.value == null)
              break Fail73;
            term = termFactory.makeTuple(k_155.value, t_155);
            term = geq_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail73;
            { 
              if(true)
                break Fail72;
              if(true)
                break Success58;
            }
          }
          term = term65;
        }
        term = number$Items_0_0.instance.invoke(context, l_155);
        if(term == null)
          break Fail72;
        lifted66 lifted660 = new lifted66();
        lifted660.k_155 = k_155;
        term = filter_1_0.instance.invoke(context, term, lifted660);
        if(term == null)
          break Fail72;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(h_155, (IStrategoList)random_test.constNil0)));
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class shrink_make_empty_0_1 extends Strategy 
  { 
    public static shrink_make_empty_0_1 instance = new shrink_make_empty_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm w_155)
    { 
      context.push("shrink_make_empty_0_1");
      Fail74:
      { 
        IStrategoTerm x_155 = null;
        x_155 = term;
        IStrategoList annos2 = term.getAnnotations();
        if(annos2.getTermType() != IStrategoTerm.LIST || ((IStrategoList)annos2).isEmpty())
          break Fail74;
        if(((IStrategoList)annos2).head() != w_155 && !w_155.match(((IStrategoList)annos2).head()))
          break Fail74;
        IStrategoTerm arg12 = ((IStrategoList)annos2).tail();
        if(arg12.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg12).isEmpty())
          break Fail74;
        term = is_list_0_0.instance.invoke(context, x_155);
        if(term == null)
          break Fail74;
        term = random_test.constNil0;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class shrink_get_input_0_0 extends Strategy 
  { 
    public static shrink_get_input_0_0 instance = new shrink_get_input_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("shrink_get_input_0_0");
      Fail75:
      { 
        IStrategoTerm c_156 = null;
        IStrategoTerm e_156 = null;
        IStrategoTerm f_156 = null;
        IStrategoTerm g_156 = null;
        IStrategoTerm k_156 = null;
        IStrategoTerm l_156 = null;
        IStrategoTerm u_156 = null;
        IStrategoTerm y_156 = null;
        IStrategoTerm z_156 = null;
        term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail75;
        IStrategoTerm term67 = term;
        Success59:
        { 
          Fail76:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail76;
            if(true)
              break Success59;
          }
          term = term67;
          IStrategoTerm term68 = term;
          Success60:
          { 
            Fail77:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail77;
              if(true)
                break Success60;
            }
            term = term68;
            IStrategoTerm term69 = term;
            Success61:
            { 
              Fail78:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail78;
                if(true)
                  break Success61;
              }
              term = term69;
              IStrategoTerm term70 = term;
              Success62:
              { 
                Fail79:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail79;
                  if(true)
                    break Success62;
                }
                term = term70;
                IStrategoTerm p_156 = null;
                IStrategoTerm r_156 = null;
                IStrategoTerm t_156 = null;
                p_156 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail75;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail75;
                r_156 = ((IStrategoList)term).tail();
                t_156 = r_156;
                term = report_failure_0_2.instance.invoke(context, t_156, random_test.const99, p_156);
                if(term == null)
                  break Fail75;
              }
            }
          }
        }
        y_156 = term;
        u_156 = random_test.const8;
        z_156 = y_156;
        term = string_replace_0_2.instance.invoke(context, z_156, u_156, random_test.const8);
        if(term == null)
          break Fail75;
        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons43);
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail75;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        c_156 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons35);
        if(term == null)
          break Fail75;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = $Read$From$File_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail75;
        term = parse_file_0_1.instance.invoke(context, c_156, term);
        if(term == null)
          break Fail75;
        g_156 = term;
        e_156 = random_test.const70;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons36);
        if(term == null)
          break Fail75;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        f_156 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons37);
        if(term == null)
          break Fail75;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const79, termFactory.makeListCons(random_test.const78, termFactory.makeListCons(termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0)), (IStrategoList)random_test.constCons40)));
        term = run_shrink_0_2.instance.invoke(context, term, e_156, f_156);
        if(term == null)
          break Fail75;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail75;
        k_156 = term.getSubterm(0);
        l_156 = term.getSubterm(1);
        term = termFactory.makeTuple(g_156, k_156, l_156);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class shrink_find_sorts_0_1 extends Strategy 
  { 
    public static shrink_find_sorts_0_1 instance = new shrink_find_sorts_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_e_702)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference e_702 = new TermReference(ref_e_702);
      context.push("shrink_find_sorts_0_1");
      Fail80:
      { 
        IStrategoTerm term71 = term;
        Success63:
        { 
          Fail81:
          { 
            IStrategoTerm y_159 = null;
            IStrategoTerm z_159 = null;
            TermReference a_160 = new TermReference();
            IStrategoTerm c_160 = null;
            IStrategoTerm g_160 = null;
            IStrategoTerm h_160 = null;
            IStrategoTerm i_160 = null;
            IStrategoTerm j_160 = null;
            IStrategoTerm k_160 = null;
            IStrategoTerm term72 = term;
            Success64:
            { 
              Fail82:
              { 
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail82;
                IStrategoTerm arg14 = term.getSubterm(0);
                y_159 = arg14;
                IStrategoTerm cons1 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{arg14});
                if(a_160.value == null)
                  a_160.value = cons1;
                else
                  if(a_160.value != cons1 && !a_160.value.match(cons1))
                    break Fail82;
                IStrategoTerm args1 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{arg14});
                z_159 = args1;
                if(true)
                  break Success64;
              }
              term = term72;
              y_159 = term72;
              IStrategoTerm cons3 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              if(a_160.value == null)
                a_160.value = cons3;
              else
                if(a_160.value != cons3 && !a_160.value.match(cons3))
                  break Fail81;
              IStrategoTerm args2 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              z_159 = args2;
            }
            g_160 = term;
            IStrategoTerm term73 = term;
            Success65:
            { 
              Fail83:
              { 
                term = is_list_0_0.instance.invoke(context, y_159);
                if(term == null)
                  break Fail83;
                { 
                  if(true)
                    break Fail81;
                  if(true)
                    break Success65;
                }
              }
              term = term73;
            }
            term = g_160;
            h_160 = g_160;
            IStrategoTerm term74 = term;
            Success66:
            { 
              Fail84:
              { 
                term = is_string_0_0.instance.invoke(context, y_159);
                if(term == null)
                  break Fail84;
                { 
                  if(true)
                    break Fail81;
                  if(true)
                    break Success66;
                }
              }
              term = term74;
            }
            term = h_160;
            i_160 = h_160;
            IStrategoTerm term75 = term;
            Success67:
            { 
              Fail85:
              { 
                term = is_tuple_0_0.instance.invoke(context, y_159);
                if(term == null)
                  break Fail85;
                { 
                  if(true)
                    break Fail81;
                  if(true)
                    break Success67;
                }
              }
              term = term75;
            }
            term = i_160;
            j_160 = i_160;
            IStrategoTerm term76 = term;
            Success68:
            { 
              Fail86:
              { 
                term = is_int_0_0.instance.invoke(context, y_159);
                if(term == null)
                  break Fail86;
                { 
                  if(true)
                    break Fail81;
                  if(true)
                    break Success68;
                }
              }
              term = term76;
            }
            term = j_160;
            k_160 = j_160;
            IStrategoTerm term77 = term;
            Success69:
            { 
              Fail87:
              { 
                term = number$Items_0_0.instance.invoke(context, z_159);
                if(term == null)
                  break Fail87;
                lifted68 lifted680 = new lifted68();
                lifted680.a_160 = a_160;
                term = map_1_0.instance.invoke(context, term, lifted680);
                if(term == null)
                  break Fail87;
                c_160 = term;
                if(true)
                  break Success69;
              }
              term = term77;
              IStrategoTerm d_160 = null;
              IStrategoTerm e_160 = null;
              IStrategoTerm m_160 = null;
              d_160 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail81;
              e_160 = term;
              m_160 = d_160;
              term = report_with_failure_0_2.instance.invoke(context, m_160, random_test.const101, e_160);
              if(term == null)
                break Fail81;
            }
            term = k_160;
            if(a_160.value == null || c_160 == null)
              break Fail81;
            IStrategoTerm mkterm0;
            mkterm0 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{a_160.value, c_160});
            if(mkterm0 == null)
              break Fail81;
            term = mkterm0;
            if(true)
              break Success63;
          }
          term = term71;
          IStrategoTerm term78 = term;
          Success70:
          { 
            Fail88:
            { 
              IStrategoTerm r_159 = null;
              IStrategoTerm term79 = term;
              Success71:
              { 
                Fail89:
                { 
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail89;
                  r_159 = term.getSubterm(0);
                  if(true)
                    break Success71;
                }
                term = term79;
                r_159 = term79;
              }
              term = is_string_0_0.instance.invoke(context, r_159);
              if(term == null)
                break Fail88;
              term = r_159;
              if(true)
                break Success70;
            }
            term = term78;
            IStrategoTerm term80 = term;
            Success72:
            { 
              Fail90:
              { 
                IStrategoTerm n_159 = null;
                IStrategoTerm term81 = term;
                Success73:
                { 
                  Fail91:
                  { 
                    if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                      break Fail91;
                    n_159 = term.getSubterm(0);
                    if(true)
                      break Success73;
                  }
                  term = term81;
                  n_159 = term81;
                }
                term = is_int_0_0.instance.invoke(context, n_159);
                if(term == null)
                  break Fail90;
                term = n_159;
                if(true)
                  break Success72;
              }
              term = term80;
              IStrategoTerm term82 = term;
              Success74:
              { 
                Fail92:
                { 
                  IStrategoTerm s_158 = null;
                  TermReference u_158 = new TermReference();
                  IStrategoTerm v_158 = null;
                  IStrategoTerm w_158 = null;
                  IStrategoTerm x_158 = null;
                  IStrategoTerm z_158 = null;
                  IStrategoTerm i_159 = null;
                  IStrategoTerm j_159 = null;
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail92;
                  x_158 = term.getSubterm(0);
                  if(u_158.value == null)
                    u_158.value = term.getSubterm(1);
                  else
                    if(u_158.value != term.getSubterm(1) && !u_158.value.match(term.getSubterm(1)))
                      break Fail92;
                  i_159 = term;
                  term = is_list_0_0.instance.invoke(context, x_158);
                  if(term == null)
                    break Fail92;
                  term = i_159;
                  j_159 = i_159;
                  IStrategoTerm term83 = term;
                  Success75:
                  { 
                    Fail93:
                    { 
                      IStrategoTerm term84 = term;
                      Success76:
                      { 
                        Fail94:
                        { 
                          IStrategoTerm a_159 = null;
                          a_159 = term;
                          IStrategoTerm term85 = term;
                          Success77:
                          { 
                            Fail95:
                            { 
                              if(e_702.value == null)
                                break Fail95;
                              term = $Cons$C$F_0_0.instance.invoke(context, e_702.value);
                              if(term == null)
                                break Fail95;
                              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                                break Fail95;
                              s_158 = term.getSubterm(1);
                              { 
                                if(true)
                                  break Fail94;
                                if(true)
                                  break Success77;
                              }
                            }
                            term = term85;
                          }
                          term = a_159;
                          { 
                            if(e_702.value == null)
                              break Fail93;
                            term = $C$F$Sorts_0_0.instance.invoke(context, e_702.value);
                            if(term == null)
                              break Fail93;
                            if(s_158 == null)
                              s_158 = term;
                            else
                              if(s_158 != term && !s_158.match(term))
                                break Fail93;
                            if(true)
                              break Success76;
                          }
                        }
                        term = term84;
                      }
                      if(s_158 == null)
                        break Fail93;
                      term = filter_prods_0_0.instance.invoke(context, s_158);
                      if(term == null)
                        break Fail93;
                      term = number$Items_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail93;
                      lifted69 lifted690 = new lifted69();
                      lifted690.u_158 = u_158;
                      term = filter_1_0.instance.invoke(context, term, lifted690);
                      if(term == null)
                        break Fail93;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail93;
                      IStrategoTerm arg19 = ((IStrategoList)term).head();
                      if(arg19.getTermType() != IStrategoTerm.TUPLE || arg19.getSubtermCount() != 2)
                        break Fail93;
                      v_158 = arg19.getSubterm(0);
                      term = is_or_leads_to_shrinkable_sort_0_0.instance.invoke(context, v_158);
                      if(term == null)
                        break Fail93;
                      w_158 = term;
                      term = x_158;
                      lifted70 lifted700 = new lifted70();
                      lifted700.e_702 = e_702;
                      term = map_1_0.instance.invoke(context, term, lifted700);
                      if(term == null)
                        break Fail93;
                      z_158 = term;
                      if(true)
                        break Success75;
                    }
                    term = term83;
                    IStrategoTerm e_159 = null;
                    IStrategoTerm g_159 = null;
                    IStrategoTerm l_159 = null;
                    e_159 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail92;
                    g_159 = term;
                    l_159 = e_159;
                    term = report_with_failure_0_2.instance.invoke(context, l_159, random_test.const101, g_159);
                    if(term == null)
                      break Fail92;
                  }
                  term = j_159;
                  if(z_158 == null || w_158 == null)
                    break Fail92;
                  term = termFactory.annotateTerm(z_158, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(w_158, (IStrategoList)random_test.constNil0)));
                  if(true)
                    break Success74;
                }
                term = term82;
                IStrategoTerm w_157 = null;
                TermReference a_158 = new TermReference();
                IStrategoTerm b_158 = null;
                IStrategoTerm c_158 = null;
                IStrategoTerm f_158 = null;
                IStrategoTerm g_158 = null;
                IStrategoTerm k_158 = null;
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail80;
                IStrategoTerm arg22 = term.getSubterm(0);
                if(arg22.getTermType() != IStrategoTerm.APPL || random_test._consSome_1 != ((IStrategoAppl)arg22).getConstructor())
                  break Fail80;
                f_158 = arg22.getSubterm(0);
                if(a_158.value == null)
                  a_158.value = term.getSubterm(1);
                else
                  if(a_158.value != term.getSubterm(1) && !a_158.value.match(term.getSubterm(1)))
                    break Fail80;
                k_158 = term;
                IStrategoTerm term86 = term;
                Success78:
                { 
                  Fail96:
                  { 
                    IStrategoTerm term87 = term;
                    Success79:
                    { 
                      Fail97:
                      { 
                        IStrategoTerm h_158 = null;
                        h_158 = term;
                        IStrategoTerm term88 = term;
                        Success80:
                        { 
                          Fail98:
                          { 
                            if(e_702.value == null)
                              break Fail98;
                            term = $Cons$C$F_0_0.instance.invoke(context, e_702.value);
                            if(term == null)
                              break Fail98;
                            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                              break Fail98;
                            w_157 = term.getSubterm(1);
                            { 
                              if(true)
                                break Fail97;
                              if(true)
                                break Success80;
                            }
                          }
                          term = term88;
                        }
                        term = h_158;
                        { 
                          if(e_702.value == null)
                            break Fail96;
                          term = $C$F$Sorts_0_0.instance.invoke(context, e_702.value);
                          if(term == null)
                            break Fail96;
                          if(w_157 == null)
                            w_157 = term;
                          else
                            if(w_157 != term && !w_157.match(term))
                              break Fail96;
                          if(true)
                            break Success79;
                        }
                      }
                      term = term87;
                    }
                    if(w_157 == null)
                      break Fail96;
                    term = filter_prods_0_0.instance.invoke(context, w_157);
                    if(term == null)
                      break Fail96;
                    term = number$Items_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail96;
                    lifted71 lifted710 = new lifted71();
                    lifted710.a_158 = a_158;
                    term = filter_1_0.instance.invoke(context, term, lifted710);
                    if(term == null)
                      break Fail96;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail96;
                    IStrategoTerm arg25 = ((IStrategoList)term).head();
                    if(arg25.getTermType() != IStrategoTerm.TUPLE || arg25.getSubtermCount() != 2)
                      break Fail96;
                    b_158 = arg25.getSubterm(0);
                    term = is_or_leads_to_shrinkable_sort_0_0.instance.invoke(context, b_158);
                    if(term == null)
                      break Fail96;
                    c_158 = term;
                    term = this.invoke(context, f_158, e_702.value);
                    if(term == null)
                      break Fail96;
                    g_158 = term;
                    if(true)
                      break Success78;
                  }
                  term = term86;
                  IStrategoTerm i_158 = null;
                  IStrategoTerm j_158 = null;
                  IStrategoTerm n_158 = null;
                  i_158 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail80;
                  j_158 = term;
                  n_158 = i_158;
                  term = report_with_failure_0_2.instance.invoke(context, n_158, random_test.const101, j_158);
                  if(term == null)
                    break Fail80;
                }
                term = k_158;
                if(g_158 == null || c_158 == null)
                  break Fail80;
                term = termFactory.annotateTerm(termFactory.makeAppl(random_test._consSome_1, new IStrategoTerm[]{g_158}), checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(c_158, (IStrategoList)random_test.constNil0)));
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_shrinkable_sort_0_0 extends Strategy 
  { 
    public static is_shrinkable_sort_0_0 instance = new is_shrinkable_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("is_shrinkable_sort_0_0");
      Fail99:
      { 
        IStrategoTerm term89 = term;
        IStrategoConstructor cons37 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success81:
        { 
          if(cons37 == random_test._consiter_1)
          { 
            Fail100:
            { 
              IStrategoTerm i_162 = null;
              IStrategoTerm n_162 = null;
              n_162 = term;
              IStrategoTerm term90 = term;
              Success82:
              { 
                Fail101:
                { 
                  term = newname_0_0.instance.invoke(context, random_test.const55);
                  if(term == null)
                    break Fail101;
                  i_162 = term;
                  term = termFactory.makeTuple(random_test.const55, term);
                  term = write_shrink_sort_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail101;
                  if(true)
                    break Success82;
                }
                term = term90;
                IStrategoTerm j_162 = null;
                IStrategoTerm k_162 = null;
                IStrategoTerm p_162 = null;
                j_162 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail100;
                k_162 = term;
                p_162 = j_162;
                term = report_with_failure_0_2.instance.invoke(context, p_162, random_test.const102, k_162);
                if(term == null)
                  break Fail100;
              }
              term = n_162;
              if(i_162 == null)
                break Fail100;
              term = i_162;
              if(true)
                break Success81;
            }
            term = term89;
          }
          Success83:
          { 
            if(cons37 == random_test._consiter_sep_2)
            { 
              Fail102:
              { 
                IStrategoTerm q_161 = null;
                IStrategoTerm v_161 = null;
                v_161 = term;
                IStrategoTerm term92 = term;
                Success84:
                { 
                  Fail103:
                  { 
                    term = newname_0_0.instance.invoke(context, random_test.const55);
                    if(term == null)
                      break Fail103;
                    q_161 = term;
                    term = termFactory.makeTuple(random_test.const55, term);
                    term = write_shrink_sort_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail103;
                    if(true)
                      break Success84;
                  }
                  term = term92;
                  IStrategoTerm s_161 = null;
                  IStrategoTerm t_161 = null;
                  IStrategoTerm z_161 = null;
                  s_161 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail102;
                  t_161 = term;
                  z_161 = s_161;
                  term = report_with_failure_0_2.instance.invoke(context, z_161, random_test.const102, t_161);
                  if(term == null)
                    break Fail102;
                }
                term = v_161;
                if(q_161 == null)
                  break Fail102;
                term = q_161;
                if(true)
                  break Success83;
              }
              term = term89;
            }
            Success85:
            { 
              if(cons37 == random_test._consiter_star_1)
              { 
                Fail104:
                { 
                  IStrategoTerm f_161 = null;
                  IStrategoTerm i_161 = null;
                  i_161 = term;
                  IStrategoTerm term94 = term;
                  Success86:
                  { 
                    Fail105:
                    { 
                      term = newname_0_0.instance.invoke(context, random_test.const54);
                      if(term == null)
                        break Fail105;
                      f_161 = term;
                      term = termFactory.makeTuple(random_test.const54, term);
                      term = write_shrink_sort_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail105;
                      if(true)
                        break Success86;
                    }
                    term = term94;
                    IStrategoTerm g_161 = null;
                    IStrategoTerm h_161 = null;
                    IStrategoTerm k_161 = null;
                    g_161 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail104;
                    h_161 = term;
                    k_161 = g_161;
                    term = report_with_failure_0_2.instance.invoke(context, k_161, random_test.const102, h_161);
                    if(term == null)
                      break Fail104;
                  }
                  term = i_161;
                  if(f_161 == null)
                    break Fail104;
                  term = f_161;
                  if(true)
                    break Success85;
                }
                term = term89;
              }
              Success87:
              { 
                if(cons37 == random_test._consiter_star_sep_2)
                { 
                  Fail106:
                  { 
                    IStrategoTerm x_160 = null;
                    IStrategoTerm a_161 = null;
                    a_161 = term;
                    IStrategoTerm term96 = term;
                    Success88:
                    { 
                      Fail107:
                      { 
                        term = newname_0_0.instance.invoke(context, random_test.const54);
                        if(term == null)
                          break Fail107;
                        x_160 = term;
                        term = termFactory.makeTuple(random_test.const54, term);
                        term = write_shrink_sort_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail107;
                        if(true)
                          break Success88;
                      }
                      term = term96;
                      IStrategoTerm y_160 = null;
                      IStrategoTerm z_160 = null;
                      IStrategoTerm c_161 = null;
                      y_160 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail106;
                      z_160 = term;
                      c_161 = y_160;
                      term = report_with_failure_0_2.instance.invoke(context, c_161, random_test.const102, z_160);
                      if(term == null)
                        break Fail106;
                    }
                    term = a_161;
                    if(x_160 == null)
                      break Fail106;
                    term = x_160;
                    if(true)
                      break Success87;
                  }
                  term = term89;
                }
                if(cons37 == random_test._consopt_1)
                { 
                  IStrategoTerm p_160 = null;
                  IStrategoTerm s_160 = null;
                  s_160 = term;
                  IStrategoTerm term97 = term;
                  Success89:
                  { 
                    Fail108:
                    { 
                      term = newname_0_0.instance.invoke(context, random_test.const103);
                      if(term == null)
                        break Fail108;
                      p_160 = term;
                      term = termFactory.makeTuple(random_test.const103, term);
                      term = write_shrink_sort_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail108;
                      if(true)
                        break Success89;
                    }
                    term = term97;
                    IStrategoTerm q_160 = null;
                    IStrategoTerm r_160 = null;
                    IStrategoTerm u_160 = null;
                    q_160 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail99;
                    r_160 = term;
                    u_160 = q_160;
                    term = report_with_failure_0_2.instance.invoke(context, u_160, random_test.const102, r_160);
                    if(term == null)
                      break Fail99;
                  }
                  term = s_160;
                  if(p_160 == null)
                    break Fail99;
                  term = p_160;
                }
                else
                { 
                  break Fail99;
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_or_leads_to_shrinkable_sort_0_0 extends Strategy 
  { 
    public static is_or_leads_to_shrinkable_sort_0_0 instance = new is_or_leads_to_shrinkable_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("is_or_leads_to_shrinkable_sort_0_0");
      Fail109:
      { 
        IStrategoTerm term98 = term;
        Success90:
        { 
          Fail110:
          { 
            term = is_shrinkable_sort_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail110;
            if(true)
              break Success90;
          }
          term = has_productions_with_no_constructors_0_0.instance.invoke(context, term98);
          if(term == null)
            break Fail109;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_ns_0_0 extends Strategy 
  { 
    public static write_ns_0_0 instance = new write_ns_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_ns_0_0");
      Fail111:
      { 
        IStrategoTerm e_173 = null;
        IStrategoTerm f_173 = null;
        IStrategoTerm g_173 = null;
        IStrategoTerm h_173 = null;
        IStrategoTerm i_173 = null;
        IStrategoTerm j_173 = null;
        IStrategoTerm l_173 = null;
        IStrategoTerm m_173 = null;
        IStrategoTerm n_173 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail111;
        e_173 = term.getSubterm(0);
        f_173 = term.getSubterm(1);
        g_173 = term.getSubterm(2);
        h_173 = term;
        l_173 = term;
        i_173 = random_test.const104;
        m_173 = l_173;
        term = termFactory.annotateTerm(termFactory.makeTuple(e_173, f_173), checkListAnnos(termFactory, random_test.constCons0));
        j_173 = term;
        n_173 = m_173;
        term = termFactory.makeTuple(random_test.const105, g_173);
        term = dr_add_rule_0_3.instance.invoke(context, n_173, i_173, j_173, term);
        if(term == null)
          break Fail111;
        term = h_173;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class create_key_0_0 extends Strategy 
  { 
    public static create_key_0_0 instance = new create_key_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("create_key_0_0");
      Fail112:
      { 
        IStrategoTerm b_176 = null;
        IStrategoTerm c_176 = null;
        IStrategoTerm d_176 = null;
        IStrategoTerm e_176 = null;
        IStrategoTerm h_176 = null;
        IStrategoTerm i_176 = null;
        c_176 = term;
        IStrategoTerm cons4 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        b_176 = cons4;
        IStrategoTerm args3 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        d_176 = args3;
        h_176 = term;
        IStrategoTerm term99 = term;
        Success91:
        { 
          Fail113:
          { 
            term = is_string_0_0.instance.invoke(context, c_176);
            if(term == null)
              break Fail113;
            { 
              if(true)
                break Fail112;
              if(true)
                break Success91;
            }
          }
          term = term99;
        }
        term = h_176;
        i_176 = h_176;
        IStrategoTerm term100 = term;
        Success92:
        { 
          Fail114:
          { 
            term = number$Items_0_0.instance.invoke(context, d_176);
            if(term == null)
              break Fail114;
            term = $Item$Count_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail114;
            e_176 = term;
            if(true)
              break Success92;
          }
          term = term100;
          IStrategoTerm f_176 = null;
          IStrategoTerm g_176 = null;
          IStrategoTerm m_176 = null;
          f_176 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail112;
          g_176 = term;
          m_176 = f_176;
          term = report_with_failure_0_2.instance.invoke(context, m_176, random_test.const106, g_176);
          if(term == null)
            break Fail112;
        }
        term = i_176;
        if(e_176 == null)
          break Fail112;
        term = termFactory.makeTuple(b_176, e_176);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_non_native_scopes_0_0 extends Strategy 
  { 
    public static all_non_native_scopes_0_0 instance = new all_non_native_scopes_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_non_native_scopes_0_0");
      Fail115:
      { 
        IStrategoTerm p_176 = null;
        IStrategoTerm q_176 = null;
        IStrategoTerm t_176 = null;
        p_176 = term;
        t_176 = term;
        IStrategoTerm term101 = term;
        Success93:
        { 
          Fail116:
          { 
            term = bagof_$Current$Scope_0_0.instance.invoke(context, p_176);
            if(term == null)
              break Fail116;
            term = filter_1_0.instance.invoke(context, term, lifted73.instance);
            if(term == null)
              break Fail116;
            q_176 = term;
            if(true)
              break Success93;
          }
          term = term101;
          IStrategoTerm r_176 = null;
          IStrategoTerm s_176 = null;
          IStrategoTerm v_176 = null;
          r_176 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail115;
          s_176 = term;
          v_176 = r_176;
          term = report_with_failure_0_2.instance.invoke(context, v_176, random_test.const107, s_176);
          if(term == null)
            break Fail115;
        }
        term = t_176;
        if(q_176 == null)
          break Fail115;
        term = q_176;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class extract_or_replace_identifier_0_3 extends Strategy 
  { 
    public static extract_or_replace_identifier_0_3 instance = new extract_or_replace_identifier_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm l_702, IStrategoTerm m_702, IStrategoTerm ref_n_702)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference n_702 = new TermReference(ref_n_702);
      context.push("extract_or_replace_identifier_0_3");
      Fail117:
      { 
        IStrategoTerm term103 = term;
        Success94:
        { 
          Fail118:
          { 
            IStrategoTerm y_177 = null;
            IStrategoTerm z_177 = null;
            TermReference a_178 = new TermReference();
            IStrategoTerm b_178 = null;
            IStrategoTerm c_178 = null;
            IStrategoTerm d_178 = null;
            IStrategoTerm j_178 = null;
            IStrategoTerm k_178 = null;
            c_178 = term;
            j_178 = term;
            term = m_702;
            IStrategoTerm cons5 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            if(cons5.getTermType() != IStrategoTerm.STRING || !"Unique".equals(((IStrategoString)cons5).stringValue()))
              break Fail118;
            IStrategoTerm args4 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            if(args4.getTermType() != IStrategoTerm.LIST || !((IStrategoList)args4).isEmpty())
              break Fail118;
            term = j_178;
            k_178 = j_178;
            IStrategoTerm term104 = term;
            Success95:
            { 
              Fail119:
              { 
                Success96:
                { 
                  Fail120:
                  { 
                    IStrategoTerm e_178 = null;
                    IStrategoTerm l_178 = null;
                    IStrategoTerm n_178 = null;
                    e_178 = term;
                    n_178 = term;
                    term = next_random_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail120;
                    term = abs_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail120;
                    term = termFactory.makeTuple(term, random_test.const108);
                    term = mod_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail120;
                    l_178 = term;
                    term = n_178;
                    term = $Chance$Of$Failure_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail120;
                    term = termFactory.makeTuple(l_178, term);
                    term = gt_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail120;
                    term = e_178;
                    { 
                      IStrategoTerm x_178 = null;
                      Success97:
                      { 
                        Fail121:
                        { 
                          IStrategoTerm f_178 = null;
                          f_178 = term;
                          term = l_702;
                          IStrategoTerm args5 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
                          y_177 = args5;
                          term = f_178;
                          { 
                            term = length_0_0.instance.invoke(context, y_177);
                            if(term == null)
                              break Fail119;
                            z_177 = term;
                            if(true)
                              break Success97;
                          }
                        }
                        term = random_test.const58;
                        z_177 = random_test.const58;
                      }
                      term = termFactory.makeTuple(l_702, random_test.const109);
                      x_178 = term;
                      term = get_identifier_sort_0_3.instance.invoke(context, x_178, random_test.const110, z_177, n_702.value);
                      if(term == null)
                        break Fail119;
                      if(a_178.value == null)
                        a_178.value = term;
                      else
                        if(a_178.value != term && !a_178.value.match(term))
                          break Fail119;
                      lifted76 lifted760 = new lifted76();
                      lifted75 lifted750 = new lifted75();
                      lifted760.n_702 = n_702;
                      lifted750.a_178 = a_178;
                      term = do_while_2_0.instance.invoke(context, term, lifted750, lifted760);
                      if(term == null)
                        break Fail119;
                      d_178 = term;
                      term = replace_identifier_0_2.instance.invoke(context, c_178, term, l_702);
                      if(term == null)
                        break Fail119;
                      b_178 = term;
                      if(true)
                        break Success96;
                    }
                  }
                  b_178 = c_178;
                  term = extract_identifier_0_1.instance.invoke(context, l_702, c_178);
                  if(term == null)
                    break Fail119;
                  d_178 = term;
                }
                if(true)
                  break Success95;
              }
              term = term104;
              IStrategoTerm h_178 = null;
              IStrategoTerm i_178 = null;
              IStrategoTerm z_178 = null;
              h_178 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail118;
              i_178 = term;
              z_178 = h_178;
              term = report_with_failure_0_2.instance.invoke(context, z_178, random_test.const111, i_178);
              if(term == null)
                break Fail118;
            }
            term = k_178;
            if(b_178 == null || d_178 == null)
              break Fail118;
            term = termFactory.makeTuple(b_178, d_178);
            if(true)
              break Success94;
          }
          term = term103;
          IStrategoTerm k_177 = null;
          IStrategoTerm l_177 = null;
          IStrategoTerm o_177 = null;
          IStrategoTerm p_177 = null;
          k_177 = term;
          o_177 = term;
          IStrategoTerm term108 = term;
          Success98:
          { 
            Fail122:
            { 
              term = m_702;
              IStrategoTerm cons7 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              if(cons7.getTermType() != IStrategoTerm.STRING || !"Unique".equals(((IStrategoString)cons7).stringValue()))
                break Fail122;
              IStrategoTerm args6 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              if(args6.getTermType() != IStrategoTerm.LIST || !((IStrategoList)args6).isEmpty())
                break Fail122;
              { 
                if(true)
                  break Fail117;
                if(true)
                  break Success98;
              }
            }
            term = term108;
          }
          term = o_177;
          p_177 = o_177;
          IStrategoTerm term109 = term;
          Success99:
          { 
            Fail123:
            { 
              term = extract_identifier_0_1.instance.invoke(context, l_702, k_177);
              if(term == null)
                break Fail123;
              l_177 = term;
              if(true)
                break Success99;
            }
            term = term109;
            IStrategoTerm m_177 = null;
            IStrategoTerm n_177 = null;
            IStrategoTerm r_177 = null;
            m_177 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail117;
            n_177 = term;
            r_177 = m_177;
            term = report_with_failure_0_2.instance.invoke(context, r_177, random_test.const111, n_177);
            if(term == null)
              break Fail117;
          }
          term = p_177;
          if(l_177 == null)
            break Fail117;
          term = termFactory.makeTuple(k_177, l_177);
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_identifier_sort_0_3 extends Strategy 
  { 
    public static get_identifier_sort_0_3 instance = new get_identifier_sort_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm o_702, IStrategoTerm p_702, IStrategoTerm ref_q_702)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference q_702 = new TermReference(ref_q_702);
      context.push("get_identifier_sort_0_3");
      Fail124:
      { 
        IStrategoTerm term110 = term;
        Success100:
        { 
          Fail125:
          { 
            IStrategoTerm b_180 = null;
            TermReference c_180 = new TermReference();
            TermReference d_180 = new TermReference();
            IStrategoTerm f_180 = null;
            IStrategoTerm g_180 = null;
            IStrategoTerm h_180 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail125;
            IStrategoTerm arg35 = term.getSubterm(0);
            b_180 = arg35;
            IStrategoTerm cons8 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{arg35});
            if(c_180.value == null)
              c_180.value = cons8;
            else
              if(c_180.value != cons8 && !c_180.value.match(cons8))
                break Fail125;
            IStrategoTerm args7 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{arg35});
            if(d_180.value == null)
              d_180.value = args7;
            else
              if(d_180.value != args7 && !d_180.value.match(args7))
                break Fail125;
            g_180 = term;
            IStrategoTerm term111 = term;
            Success101:
            { 
              Fail126:
              { 
                term = is_list_0_0.instance.invoke(context, b_180);
                if(term == null)
                  break Fail126;
                { 
                  if(true)
                    break Fail125;
                  if(true)
                    break Success101;
                }
              }
              term = term111;
            }
            term = g_180;
            h_180 = g_180;
            IStrategoTerm term112 = term;
            Success102:
            { 
              Fail127:
              { 
                term = is_string_0_0.instance.invoke(context, b_180);
                if(term == null)
                  break Fail127;
                { 
                  if(true)
                    break Fail125;
                  if(true)
                    break Success102;
                }
              }
              term = term112;
            }
            term = h_180;
            if(d_180.value == null)
              break Fail125;
            term = number$Items_0_0.instance.invoke(context, d_180.value);
            if(term == null)
              break Fail125;
            lifted78 lifted780 = new lifted78();
            lifted780.d_180 = d_180;
            lifted780.c_180 = c_180;
            lifted780.q_702 = q_702;
            term = filter_1_0.instance.invoke(context, term, lifted780);
            if(term == null)
              break Fail125;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail125;
            f_180 = ((IStrategoList)term).head();
            IStrategoTerm arg37 = ((IStrategoList)term).tail();
            if(arg37.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg37).isEmpty())
              break Fail125;
            term = f_180;
            if(true)
              break Success100;
          }
          term = term110;
          IStrategoTerm term113 = term;
          Success103:
          { 
            Fail128:
            { 
              IStrategoTerm s_179 = null;
              IStrategoTerm t_179 = null;
              IStrategoTerm u_179 = null;
              IStrategoTerm v_179 = null;
              IStrategoTerm x_179 = null;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail128;
              IStrategoTerm arg38 = term.getSubterm(0);
              if(arg38.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg38).isEmpty())
                break Fail128;
              s_179 = ((IStrategoList)arg38).head();
              t_179 = ((IStrategoList)arg38).tail();
              u_179 = term.getSubterm(1);
              x_179 = term;
              IStrategoTerm term114 = term;
              Success104:
              { 
                Fail129:
                { 
                  IStrategoTerm w_179 = null;
                  w_179 = term;
                  IStrategoTerm term115 = term;
                  Success105:
                  { 
                    Fail130:
                    { 
                      term = termFactory.makeTuple(s_179, u_179);
                      term = this.invoke(context, term, o_702, p_702, q_702.value);
                      if(term == null)
                        break Fail130;
                      v_179 = term;
                      { 
                        if(true)
                          break Fail129;
                        if(true)
                          break Success105;
                      }
                    }
                    term = term115;
                  }
                  term = w_179;
                  { 
                    term = termFactory.makeTuple(t_179, u_179);
                    term = this.invoke(context, term, o_702, p_702, q_702.value);
                    if(term == null)
                      break Fail128;
                    if(v_179 == null)
                      v_179 = term;
                    else
                      if(v_179 != term && !v_179.match(term))
                        break Fail128;
                    if(true)
                      break Success104;
                  }
                }
                term = term114;
              }
              term = x_179;
              if(v_179 == null)
                break Fail128;
              term = v_179;
              if(true)
                break Success103;
            }
            term = term113;
            IStrategoTerm f_179 = null;
            IStrategoTerm h_179 = null;
            IStrategoTerm i_179 = null;
            IStrategoTerm m_179 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail124;
            IStrategoTerm arg39 = term.getSubterm(0);
            if(arg39.getTermType() != IStrategoTerm.APPL || random_test._consNBLRef_0 != ((IStrategoAppl)arg39).getConstructor())
              break Fail124;
            f_179 = term.getSubterm(1);
            m_179 = term;
            IStrategoTerm term116 = term;
            Success106:
            { 
              Fail131:
              { 
                term = termFactory.makeTuple(o_702, p_702, f_179);
                term = $S$D$F_sort_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail131;
                term = try_1_0.instance.invoke(context, term, help_remove_cardinality_ops_0_0.instance);
                if(term == null)
                  break Fail131;
                h_179 = term;
                term = debug_1_0.instance.invoke(context, term, lifted81.instance);
                if(term == null)
                  break Fail131;
                Success107:
                { 
                  Fail132:
                  { 
                    IStrategoTerm j_179 = null;
                    j_179 = term;
                    IStrategoTerm term118 = term;
                    Success108:
                    { 
                      Fail133:
                      { 
                        term = $Lex$Sorts_0_0.instance.invoke(context, h_179);
                        if(term == null)
                          break Fail133;
                        { 
                          if(true)
                            break Fail132;
                          if(true)
                            break Success108;
                        }
                      }
                      term = term118;
                    }
                    term = j_179;
                    { 
                      term = debug_1_0.instance.invoke(context, term, lifted82.instance);
                      if(term == null)
                        break Fail131;
                      term = get_direct_lex_sort_0_0.instance.invoke(context, h_179);
                      if(term == null)
                        break Fail131;
                      i_179 = term;
                      term = debug_1_0.instance.invoke(context, term, lifted83.instance);
                      if(term == null)
                        break Fail131;
                      if(true)
                        break Success107;
                    }
                  }
                  i_179 = h_179;
                  term = debug_1_0.instance.invoke(context, h_179, lifted85.instance);
                  if(term == null)
                    break Fail131;
                }
                if(true)
                  break Success106;
              }
              term = term116;
              IStrategoTerm k_179 = null;
              IStrategoTerm l_179 = null;
              IStrategoTerm o_179 = null;
              k_179 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail124;
              l_179 = term;
              o_179 = k_179;
              term = report_with_failure_0_2.instance.invoke(context, o_179, random_test.const116, l_179);
              if(term == null)
                break Fail124;
            }
            term = m_179;
            if(i_179 == null)
              break Fail124;
            term = i_179;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_direct_lex_sort_0_0 extends Strategy 
  { 
    public static get_direct_lex_sort_0_0 instance = new get_direct_lex_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("get_direct_lex_sort_0_0");
      Fail134:
      { 
        IStrategoTerm n_180 = null;
        IStrategoTerm q_180 = null;
        IStrategoTerm x_180 = null;
        n_180 = term;
        x_180 = term;
        IStrategoTerm term119 = term;
        Success109:
        { 
          Fail135:
          { 
            term = bagof_$C$F$Sorts_0_0.instance.invoke(context, n_180);
            if(term == null)
              break Fail135;
            term = filter_1_0.instance.invoke(context, term, lifted86.instance);
            if(term == null)
              break Fail135;
            term = randomly_pick_from_list_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail135;
            q_180 = term;
            if(true)
              break Success109;
          }
          term = term119;
          IStrategoTerm t_180 = null;
          IStrategoTerm u_180 = null;
          IStrategoTerm h_181 = null;
          t_180 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail134;
          u_180 = term;
          h_181 = t_180;
          term = report_with_failure_0_2.instance.invoke(context, h_181, random_test.const117, u_180);
          if(term == null)
            break Fail134;
        }
        term = x_180;
        if(q_180 == null)
          break Fail134;
        term = q_180;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class help_remove_cardinality_ops_0_0 extends Strategy 
  { 
    public static help_remove_cardinality_ops_0_0 instance = new help_remove_cardinality_ops_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail136:
      { 
        IStrategoTerm i_181 = null;
        IStrategoTerm term120 = term;
        IStrategoConstructor cons38 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success110:
        { 
          if(cons38 == random_test._consiter_1)
          { 
            Fail137:
            { 
              i_181 = term.getSubterm(0);
              if(true)
                break Success110;
            }
            term = term120;
          }
          Success111:
          { 
            if(cons38 == random_test._consiter_star_1)
            { 
              Fail138:
              { 
                i_181 = term.getSubterm(0);
                if(true)
                  break Success111;
              }
              term = term120;
            }
            Success112:
            { 
              if(cons38 == random_test._consiter_sep_2)
              { 
                Fail139:
                { 
                  i_181 = term.getSubterm(0);
                  if(true)
                    break Success112;
                }
                term = term120;
              }
              Success113:
              { 
                if(cons38 == random_test._consiter_star_sep_2)
                { 
                  Fail140:
                  { 
                    i_181 = term.getSubterm(0);
                    if(true)
                      break Success113;
                  }
                  term = term120;
                }
                Success114:
                { 
                  if(cons38 == random_test._consopt_1)
                  { 
                    Fail141:
                    { 
                      i_181 = term.getSubterm(0);
                      if(true)
                        break Success114;
                    }
                    term = term120;
                  }
                  if(cons38 == random_test._consalt_2)
                  { 
                    i_181 = term.getSubterm(0);
                  }
                  else
                  { 
                    break Fail136;
                  }
                }
              }
            }
          }
        }
        term = i_181;
        if(true)
          return term;
      }
      context.push("help_remove_cardinality_ops_0_0");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class replace_identifier_0_2 extends Strategy 
  { 
    public static replace_identifier_0_2 instance = new replace_identifier_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm r_702, IStrategoTerm s_702)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("replace_identifier_0_2");
      Fail142:
      { 
        IStrategoTerm term125 = term;
        Success115:
        { 
          Fail143:
          { 
            IStrategoTerm e_182 = null;
            IStrategoTerm f_182 = null;
            IStrategoTerm g_182 = null;
            IStrategoTerm h_182 = null;
            IStrategoTerm i_182 = null;
            IStrategoTerm l_182 = null;
            IStrategoTerm m_182 = null;
            IStrategoTerm n_182 = null;
            IStrategoTerm o_182 = null;
            e_182 = term;
            IStrategoTerm cons9 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            f_182 = cons9;
            IStrategoTerm args8 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            h_182 = args8;
            l_182 = term;
            IStrategoTerm term126 = term;
            Success116:
            { 
              Fail144:
              { 
                term = is_list_0_0.instance.invoke(context, e_182);
                if(term == null)
                  break Fail144;
                { 
                  if(true)
                    break Fail143;
                  if(true)
                    break Success116;
                }
              }
              term = term126;
            }
            term = l_182;
            m_182 = l_182;
            IStrategoTerm term127 = term;
            Success117:
            { 
              Fail145:
              { 
                term = is_string_0_0.instance.invoke(context, e_182);
                if(term == null)
                  break Fail145;
                { 
                  if(true)
                    break Fail143;
                  if(true)
                    break Success117;
                }
              }
              term = term127;
            }
            n_182 = m_182;
            term = s_702;
            IStrategoTerm cons10 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            if(cons10 != f_182 && !f_182.match(cons10))
              break Fail143;
            IStrategoTerm args9 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            g_182 = args9;
            term = n_182;
            o_182 = n_182;
            IStrategoTerm term128 = term;
            Success118:
            { 
              Fail146:
              { 
                IStrategoTerm p_182 = null;
                IStrategoTerm q_182 = null;
                q_182 = term;
                term = this.invoke(context, h_182, r_702, g_182);
                if(term == null)
                  break Fail146;
                p_182 = term;
                term = q_182;
                IStrategoTerm mkterm1;
                mkterm1 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{f_182, p_182});
                if(mkterm1 == null)
                  break Fail146;
                term = mkterm1;
                i_182 = mkterm1;
                if(true)
                  break Success118;
              }
              term = term128;
              IStrategoTerm j_182 = null;
              IStrategoTerm k_182 = null;
              IStrategoTerm s_182 = null;
              j_182 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail143;
              k_182 = term;
              s_182 = j_182;
              term = report_with_failure_0_2.instance.invoke(context, s_182, random_test.const118, k_182);
              if(term == null)
                break Fail143;
            }
            term = o_182;
            if(i_182 == null)
              break Fail143;
            term = i_182;
            if(true)
              break Success115;
          }
          term = term125;
          Success119:
          { 
            Fail147:
            { 
              IStrategoTerm p_181 = null;
              IStrategoTerm q_181 = null;
              IStrategoTerm r_181 = null;
              IStrategoTerm s_181 = null;
              IStrategoTerm t_181 = null;
              IStrategoTerm v_181 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail147;
              q_181 = ((IStrategoList)term).head();
              s_181 = ((IStrategoList)term).tail();
              v_181 = term;
              term = is_list_0_0.instance.invoke(context, s_702);
              if(term == null)
                break Fail147;
              term = s_702;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail147;
              p_181 = ((IStrategoList)term).head();
              r_181 = ((IStrategoList)term).tail();
              IStrategoTerm term130 = term;
              Success120:
              { 
                Fail148:
                { 
                  IStrategoTerm u_181 = null;
                  u_181 = term;
                  IStrategoTerm term131 = term;
                  Success121:
                  { 
                    Fail149:
                    { 
                      IStrategoTerm w_181 = null;
                      IStrategoTerm x_181 = null;
                      x_181 = term;
                      term = this.invoke(context, q_181, r_702, p_181);
                      if(term == null)
                        break Fail149;
                      w_181 = term;
                      term = x_181;
                      IStrategoList list0;
                      list0 = checkListTail(s_181);
                      if(list0 == null)
                        break Fail149;
                      term = (IStrategoTerm)termFactory.makeListCons(w_181, list0);
                      t_181 = term;
                      { 
                        if(true)
                          break Fail148;
                        if(true)
                          break Success121;
                      }
                    }
                    term = term131;
                  }
                  term = u_181;
                  { 
                    IStrategoTerm y_181 = null;
                    IStrategoTerm z_181 = null;
                    z_181 = term;
                    term = this.invoke(context, s_181, r_702, r_181);
                    if(term == null)
                      break Fail147;
                    y_181 = term;
                    term = z_181;
                    IStrategoList list1;
                    list1 = checkListTail(y_181);
                    if(list1 == null)
                      break Fail147;
                    term = (IStrategoTerm)termFactory.makeListCons(q_181, list1);
                    if(t_181 == null)
                      t_181 = term;
                    else
                      if(t_181 != term && !t_181.match(term))
                        break Fail147;
                    if(true)
                      break Success120;
                  }
                }
                term = term130;
              }
              term = v_181;
              if(t_181 == null)
                break Fail147;
              term = t_181;
              if(true)
                break Success119;
            }
            term = s_702;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consNBLRef_0 != ((IStrategoAppl)term).getConstructor())
              break Fail142;
            term = r_702;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class extract_identifier_0_1 extends Strategy 
  { 
    public static extract_identifier_0_1 instance = new extract_identifier_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm t_702)
    { 
      context.push("extract_identifier_0_1");
      Fail150:
      { 
        IStrategoTerm term132 = term;
        Success122:
        { 
          Fail151:
          { 
            IStrategoTerm i_183 = null;
            IStrategoTerm j_183 = null;
            IStrategoTerm k_183 = null;
            IStrategoTerm l_183 = null;
            IStrategoTerm m_183 = null;
            IStrategoTerm p_183 = null;
            IStrategoTerm q_183 = null;
            IStrategoTerm r_183 = null;
            IStrategoTerm s_183 = null;
            i_183 = term;
            IStrategoTerm cons11 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            j_183 = cons11;
            IStrategoTerm args10 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            l_183 = args10;
            p_183 = term;
            IStrategoTerm term133 = term;
            Success123:
            { 
              Fail152:
              { 
                term = is_list_0_0.instance.invoke(context, i_183);
                if(term == null)
                  break Fail152;
                { 
                  if(true)
                    break Fail151;
                  if(true)
                    break Success123;
                }
              }
              term = term133;
            }
            term = p_183;
            q_183 = p_183;
            IStrategoTerm term134 = term;
            Success124:
            { 
              Fail153:
              { 
                term = is_string_0_0.instance.invoke(context, i_183);
                if(term == null)
                  break Fail153;
                { 
                  if(true)
                    break Fail151;
                  if(true)
                    break Success124;
                }
              }
              term = term134;
            }
            r_183 = q_183;
            term = t_702;
            IStrategoTerm cons12 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            if(cons12 != j_183 && !j_183.match(cons12))
              break Fail151;
            IStrategoTerm args11 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            k_183 = args11;
            term = r_183;
            s_183 = r_183;
            IStrategoTerm term135 = term;
            Success125:
            { 
              Fail154:
              { 
                term = this.invoke(context, l_183, k_183);
                if(term == null)
                  break Fail154;
                m_183 = term;
                if(true)
                  break Success125;
              }
              term = term135;
              IStrategoTerm n_183 = null;
              IStrategoTerm o_183 = null;
              IStrategoTerm u_183 = null;
              n_183 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail151;
              o_183 = term;
              u_183 = n_183;
              term = report_with_failure_0_2.instance.invoke(context, u_183, random_test.const119, o_183);
              if(term == null)
                break Fail151;
            }
            term = s_183;
            if(m_183 == null)
              break Fail151;
            term = m_183;
            if(true)
              break Success122;
          }
          term = term132;
          IStrategoTerm term136 = term;
          Success126:
          { 
            Fail155:
            { 
              IStrategoTerm v_182 = null;
              IStrategoTerm w_182 = null;
              IStrategoTerm x_182 = null;
              IStrategoTerm y_182 = null;
              IStrategoTerm z_182 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail155;
              v_182 = ((IStrategoList)term).head();
              y_182 = ((IStrategoList)term).tail();
              term = is_list_0_0.instance.invoke(context, t_702);
              if(term == null)
                break Fail155;
              term = t_702;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail155;
              w_182 = ((IStrategoList)term).head();
              x_182 = ((IStrategoList)term).tail();
              Success127:
              { 
                Fail156:
                { 
                  IStrategoTerm d_183 = null;
                  d_183 = term;
                  term = this.invoke(context, v_182, w_182);
                  if(term == null)
                    break Fail156;
                  term = d_183;
                  { 
                    term = w_182;
                    z_182 = w_182;
                    if(true)
                      break Success127;
                  }
                }
                term = this.invoke(context, y_182, x_182);
                if(term == null)
                  break Fail155;
                z_182 = term;
              }
              term = z_182;
              if(true)
                break Success126;
            }
            term = term136;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consNBLRef_0 != ((IStrategoAppl)term).getConstructor())
              break Fail150;
            term = t_702;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class update_$N$B$L_scope_0_0 extends Strategy 
  { 
    public static update_$N$B$L_scope_0_0 instance = new update_$N$B$L_scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("update_NBL_scope_0_0");
      Fail157:
      { 
        IStrategoTerm x_183 = null;
        IStrategoTerm y_183 = null;
        IStrategoTerm z_183 = null;
        IStrategoTerm a_184 = null;
        TermReference b_184 = new TermReference();
        TermReference c_184 = new TermReference();
        IStrategoTerm g_184 = null;
        IStrategoTerm h_184 = null;
        IStrategoTerm i_184 = null;
        IStrategoTerm j_184 = null;
        IStrategoTerm k_184 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail157;
        x_183 = term.getSubterm(0);
        y_183 = term.getSubterm(1);
        g_184 = term;
        term = termFactory.makeTuple(x_183, y_183);
        term = get_$S$D$F_constructor_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail157;
        z_183 = term;
        term = g_184;
        h_184 = g_184;
        j_184 = term;
        term = filter_prods_0_0.instance.invoke(context, y_183);
        if(term == null)
          break Fail157;
        i_184 = term;
        term = j_184;
        IStrategoTerm mkterm2;
        mkterm2 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{z_183, i_184});
        if(mkterm2 == null)
          break Fail157;
        term = create_key_0_0.instance.invoke(context, mkterm2);
        if(term == null)
          break Fail157;
        if(c_184.value == null)
          c_184.value = term;
        else
          if(c_184.value != term && !c_184.value.match(term))
            break Fail157;
        if(c_184.value == null)
          break Fail157;
        term = bagof_$N$B$L$Key2$Scope_0_0.instance.invoke(context, c_184.value);
        if(term == null)
          break Fail157;
        term = concat_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail157;
        a_184 = term;
        IStrategoTerm term138 = term;
        Success128:
        { 
          Fail158:
          { 
            term = a_184;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail158;
            { 
              if(true)
                break Fail157;
              if(true)
                break Success128;
            }
          }
          term = term138;
        }
        term = h_184;
        k_184 = h_184;
        IStrategoTerm term139 = term;
        Success129:
        { 
          Fail159:
          { 
            term = newname_0_0.instance.invoke(context, z_183);
            if(term == null)
              break Fail159;
            if(b_184.value == null)
              b_184.value = term;
            else
              if(b_184.value != term && !b_184.value.match(term))
                break Fail159;
            term = nub_0_0.instance.invoke(context, a_184);
            if(term == null)
              break Fail159;
            lifted104 lifted1040 = new lifted104();
            lifted1040.b_184 = b_184;
            lifted1040.c_184 = c_184;
            term = map_1_0.instance.invoke(context, term, lifted1040);
            if(term == null)
              break Fail159;
            if(true)
              break Success129;
          }
          term = term139;
          IStrategoTerm e_184 = null;
          IStrategoTerm f_184 = null;
          IStrategoTerm m_184 = null;
          e_184 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail157;
          f_184 = term;
          m_184 = e_184;
          term = report_with_failure_0_2.instance.invoke(context, m_184, random_test.const120, f_184);
          if(term == null)
            break Fail157;
        }
        term = k_184;
        if(b_184.value == null)
          break Fail157;
        term = b_184.value;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_current_scope_0_0 extends Strategy 
  { 
    public static write_current_scope_0_0 instance = new write_current_scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_current_scope_0_0");
      Fail160:
      { 
        IStrategoTerm p_184 = null;
        IStrategoTerm q_184 = null;
        TermReference r_184 = new TermReference();
        IStrategoTerm s_184 = null;
        IStrategoTerm v_184 = null;
        IStrategoTerm x_184 = null;
        IStrategoTerm z_184 = null;
        IStrategoTerm a_185 = null;
        IStrategoTerm w_184 = null;
        IStrategoTerm b_185 = null;
        IStrategoTerm d_185 = null;
        IStrategoTerm e_185 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail160;
        q_184 = term.getSubterm(0);
        if(r_184.value == null)
          r_184.value = term.getSubterm(1);
        else
          if(r_184.value != term.getSubterm(1) && !r_184.value.match(term.getSubterm(1)))
            break Fail160;
        s_184 = term.getSubterm(2);
        IStrategoTerm term140 = term;
        Success130:
        { 
          Fail161:
          { 
            IStrategoTerm t_184 = null;
            t_184 = term;
            term = $Current$Scope_0_0.instance.invoke(context, q_184);
            if(term == null)
              break Fail161;
            p_184 = term;
            term = t_184;
            { 
              if(r_184.value == null)
                break Fail160;
              term = termFactory.makeTuple(q_184, r_184.value, termFactory.makeAppl(random_test._consPreviousScope_1, new IStrategoTerm[]{p_184}));
              term = write_ns_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail160;
              if(true)
                break Success130;
            }
          }
          term = term140;
        }
        IStrategoTerm term141 = term;
        Success131:
        { 
          Fail162:
          { 
            IStrategoTerm u_184 = null;
            u_184 = term;
            IStrategoTerm term142 = term;
            Success132:
            { 
              Fail163:
              { 
                if(r_184.value == null)
                  break Fail163;
                term = termFactory.makeTuple(q_184, r_184.value);
                term = bagof_$Namespace_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail163;
                lifted108 lifted1080 = new lifted108();
                lifted1080.r_184 = r_184;
                term = filter_1_0.instance.invoke(context, term, lifted1080);
                if(term == null)
                  break Fail163;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail163;
                { 
                  if(true)
                    break Fail162;
                  if(true)
                    break Success132;
                }
              }
              term = term142;
            }
            term = u_184;
            { 
              if(true)
                break Fail160;
              if(true)
                break Success131;
            }
          }
          term = term141;
        }
        v_184 = term;
        z_184 = term;
        x_184 = random_test.const121;
        term = z_184;
        a_185 = z_184;
        if(r_184.value == null)
          break Fail160;
        term = termFactory.makeTuple(random_test.const122, r_184.value);
        term = dr_add_rule_0_3.instance.invoke(context, a_185, x_184, q_184, term);
        if(term == null)
          break Fail160;
        term = v_184;
        w_184 = v_184;
        d_185 = term;
        b_185 = random_test.const123;
        e_185 = d_185;
        term = termFactory.makeTuple(random_test.const124, s_184);
        term = dr_set_rule_0_3.instance.invoke(context, e_185, b_185, r_184.value, term);
        if(term == null)
          break Fail160;
        term = w_184;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class nbl_current_definitions_0_0 extends Strategy 
  { 
    public static nbl_current_definitions_0_0 instance = new nbl_current_definitions_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("nbl_current_definitions_0_0");
      Fail164:
      { 
        term = filter_1_0.instance.invoke(context, term, lifted109.instance);
        if(term == null)
          break Fail164;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_values_from_current_scope_0_0 extends Strategy 
  { 
    public static get_values_from_current_scope_0_0 instance = new get_values_from_current_scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("get_values_from_current_scope_0_0");
      Fail165:
      { 
        IStrategoTerm m_185 = null;
        IStrategoTerm o_185 = null;
        m_185 = term;
        term = $Current$Scope_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail165;
        term = termFactory.makeTuple(m_185, term);
        term = bagof_$Namespace_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail165;
        o_185 = term;
        term = new_iset_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail165;
        term = create_full_scope_0_2.instance.invoke(context, o_185, term, m_185);
        if(term == null)
          break Fail165;
        term = iset_elements_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail165;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class create_full_scope_0_2 extends Strategy 
  { 
    public static create_full_scope_0_2 instance = new create_full_scope_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm u_702, IStrategoTerm v_702)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("create_full_scope_0_2");
      Fail166:
      { 
        IStrategoTerm term144 = term;
        Success133:
        { 
          Fail167:
          { 
            IStrategoTerm l_186 = null;
            IStrategoTerm m_186 = null;
            IStrategoTerm n_186 = null;
            IStrategoTerm r_186 = null;
            IStrategoTerm s_186 = null;
            IStrategoTerm t_186 = null;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail167;
            l_186 = ((IStrategoList)term).head();
            m_186 = ((IStrategoList)term).tail();
            r_186 = term;
            IStrategoTerm term145 = term;
            Success134:
            { 
              Fail168:
              { 
                term = l_186;
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consPreviousScope_1 != ((IStrategoAppl)term).getConstructor())
                  break Fail168;
                { 
                  if(true)
                    break Fail167;
                  if(true)
                    break Success134;
                }
              }
              term = term145;
            }
            term = r_186;
            s_186 = r_186;
            IStrategoTerm term146 = term;
            Success135:
            { 
              Fail169:
              { 
                term = l_186;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail169;
                { 
                  if(true)
                    break Fail167;
                  if(true)
                    break Success135;
                }
              }
              term = term146;
            }
            term = s_186;
            t_186 = s_186;
            IStrategoTerm term147 = term;
            Success136:
            { 
              Fail170:
              { 
                IStrategoTerm term148 = term;
                Success137:
                { 
                  Fail171:
                  { 
                    IStrategoTerm o_186 = null;
                    o_186 = term;
                    IStrategoTerm term149 = term;
                    Success138:
                    { 
                      Fail172:
                      { 
                        term = iset_contains_0_1.instance.invoke(context, u_702, l_186);
                        if(term == null)
                          break Fail172;
                        { 
                          if(true)
                            break Fail171;
                          if(true)
                            break Success138;
                        }
                      }
                      term = term149;
                    }
                    term = o_186;
                    { 
                      term = iset_add_0_1.instance.invoke(context, u_702, l_186);
                      if(term == null)
                        break Fail170;
                      if(true)
                        break Success137;
                    }
                  }
                  term = term148;
                }
                term = this.invoke(context, m_186, u_702, v_702);
                if(term == null)
                  break Fail170;
                n_186 = term;
                if(true)
                  break Success136;
              }
              term = term147;
              IStrategoTerm p_186 = null;
              IStrategoTerm q_186 = null;
              IStrategoTerm v_186 = null;
              p_186 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail167;
              q_186 = term;
              v_186 = p_186;
              term = report_with_failure_0_2.instance.invoke(context, v_186, random_test.const125, q_186);
              if(term == null)
                break Fail167;
            }
            term = t_186;
            if(n_186 == null)
              break Fail167;
            term = n_186;
            if(true)
              break Success133;
          }
          term = term144;
          IStrategoTerm term150 = term;
          Success139:
          { 
            Fail173:
            { 
              IStrategoTerm z_185 = null;
              IStrategoTerm a_186 = null;
              IStrategoTerm b_186 = null;
              IStrategoTerm e_186 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail173;
              IStrategoTerm arg45 = ((IStrategoList)term).head();
              if(arg45.getTermType() != IStrategoTerm.APPL || random_test._consPreviousScope_1 != ((IStrategoAppl)arg45).getConstructor())
                break Fail173;
              z_185 = arg45.getSubterm(0);
              a_186 = ((IStrategoList)term).tail();
              e_186 = term;
              IStrategoTerm term151 = term;
              Success140:
              { 
                Fail174:
                { 
                  term = termFactory.makeTuple(v_702, z_185);
                  term = bagof_$Namespace_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail174;
                  term = nub_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail174;
                  term = debug_1_0.instance.invoke(context, term, lifted110.instance);
                  if(term == null)
                    break Fail174;
                  term = this.invoke(context, term, u_702, v_702);
                  if(term == null)
                    break Fail174;
                  term = this.invoke(context, a_186, u_702, v_702);
                  if(term == null)
                    break Fail174;
                  b_186 = term;
                  if(true)
                    break Success140;
                }
                term = term151;
                IStrategoTerm c_186 = null;
                IStrategoTerm d_186 = null;
                IStrategoTerm g_186 = null;
                c_186 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail173;
                d_186 = term;
                g_186 = c_186;
                term = report_with_failure_0_2.instance.invoke(context, g_186, random_test.const125, d_186);
                if(term == null)
                  break Fail173;
              }
              term = e_186;
              if(b_186 == null)
                break Fail173;
              term = b_186;
              if(true)
                break Success139;
            }
            term = term150;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail166;
            term = u_702;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_$N$B$L_referrals_0_0 extends Strategy 
  { 
    public static get_$N$B$L_referrals_0_0 instance = new get_$N$B$L_referrals_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("get_NBL_referrals_0_0");
      Fail175:
      { 
        IStrategoTerm w_186 = null;
        IStrategoTerm a_187 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail175;
        w_186 = term.getSubterm(0);
        a_187 = term.getSubterm(1);
        term = termFactory.makeTuple(w_186, a_187);
        term = get_$S$D$F_constructor_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail175;
        term = termFactory.makeTuple(term, a_187);
        term = get_nbl_references_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail175;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_nbl_references_0_0 extends Strategy 
  { 
    public static get_nbl_references_0_0 instance = new get_nbl_references_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("get_nbl_references_0_0");
      Fail176:
      { 
        IStrategoTerm term152 = term;
        Success141:
        { 
          Fail177:
          { 
            IStrategoTerm j_187 = null;
            IStrategoTerm k_187 = null;
            IStrategoTerm m_187 = null;
            IStrategoTerm p_187 = null;
            IStrategoTerm q_187 = null;
            k_187 = term;
            IStrategoTerm cons13 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            j_187 = cons13;
            p_187 = term;
            IStrategoTerm term153 = term;
            Success142:
            { 
              Fail178:
              { 
                term = j_187;
                if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
                  break Fail178;
                { 
                  if(true)
                    break Fail177;
                  if(true)
                    break Success142;
                }
              }
              term = term153;
            }
            term = p_187;
            q_187 = p_187;
            IStrategoTerm term154 = term;
            Success143:
            { 
              Fail179:
              { 
                term = create_key_0_0.instance.invoke(context, k_187);
                if(term == null)
                  break Fail179;
                term = bagof_$N$B$L$Key2$Refer_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail179;
                m_187 = term;
                if(true)
                  break Success143;
              }
              term = term154;
              IStrategoTerm n_187 = null;
              IStrategoTerm o_187 = null;
              IStrategoTerm s_187 = null;
              n_187 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail177;
              o_187 = term;
              s_187 = n_187;
              term = report_with_failure_0_2.instance.invoke(context, s_187, random_test.const127, o_187);
              if(term == null)
                break Fail177;
            }
            term = q_187;
            if(m_187 == null)
              break Fail177;
            term = m_187;
            if(true)
              break Success141;
          }
          term = term152;
          IStrategoTerm d_187 = null;
          IStrategoTerm e_187 = null;
          IStrategoTerm f_187 = null;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail176;
          e_187 = term.getSubterm(0);
          d_187 = term.getSubterm(1);
          term = filter_prods_0_0.instance.invoke(context, d_187);
          if(term == null)
            break Fail176;
          f_187 = term;
          IStrategoTerm mkterm3;
          mkterm3 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{e_187, f_187});
          if(mkterm3 == null)
            break Fail176;
          term = this.invoke(context, mkterm3);
          if(term == null)
            break Fail176;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class use_nbl_referral_0_4 extends Strategy 
  { 
    public static use_nbl_referral_0_4 instance = new use_nbl_referral_0_4();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm v_187, IStrategoTerm w_187, IStrategoTerm x_187, IStrategoTerm y_187)
    { 
      context.push("use_nbl_referral_0_4");
      Fail180:
      { 
        IStrategoTerm z_187 = null;
        IStrategoTerm b_188 = null;
        IStrategoTerm d_188 = null;
        IStrategoTerm e_188 = null;
        IStrategoTerm h_188 = null;
        z_187 = term;
        h_188 = term;
        IStrategoTerm term155 = term;
        Success144:
        { 
          Fail181:
          { 
            term = randomly_pick_from_list_0_0.instance.invoke(context, z_187);
            if(term == null)
              break Fail181;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
              break Fail181;
            b_188 = term.getSubterm(0);
            d_188 = term.getSubterm(2);
            term = randomly_pick_from_list_0_0.instance.invoke(context, b_188);
            if(term == null)
              break Fail181;
            term = random_generate_referral_0_5.instance.invoke(context, d_188, term, v_187, w_187, x_187, y_187);
            if(term == null)
              break Fail181;
            e_188 = term;
            if(true)
              break Success144;
          }
          term = term155;
          IStrategoTerm f_188 = null;
          IStrategoTerm g_188 = null;
          IStrategoTerm j_188 = null;
          f_188 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail180;
          g_188 = term;
          j_188 = f_188;
          term = report_with_failure_0_2.instance.invoke(context, j_188, random_test.const128, g_188);
          if(term == null)
            break Fail180;
        }
        term = h_188;
        if(e_188 == null)
          break Fail180;
        term = e_188;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class random_generate_referral_0_5 extends Strategy 
  { 
    public static random_generate_referral_0_5 instance = new random_generate_referral_0_5();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_m_188, IStrategoTerm ref_n_188, IStrategoTerm ref_o_188, IStrategoTerm ref_p_188, IStrategoTerm ref_q_188)
    { 
      TermReference m_188 = new TermReference(ref_m_188);
      TermReference n_188 = new TermReference(ref_n_188);
      TermReference o_188 = new TermReference(ref_o_188);
      TermReference p_188 = new TermReference(ref_p_188);
      TermReference q_188 = new TermReference(ref_q_188);
      context.push("random_generate_referral_0_5");
      Fail182:
      { 
        IStrategoTerm r_188 = null;
        TermReference s_188 = new TermReference();
        IStrategoTerm u_188 = null;
        IStrategoTerm x_188 = null;
        IStrategoTerm y_188 = null;
        IStrategoTerm cons14 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(s_188.value == null)
          s_188.value = cons14;
        else
          if(s_188.value != cons14 && !s_188.value.match(cons14))
            break Fail182;
        IStrategoTerm args13 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        r_188 = args13;
        x_188 = term;
        IStrategoTerm term156 = term;
        Success145:
        { 
          Fail183:
          { 
            if(s_188.value == null)
              break Fail183;
            term = s_188.value;
            if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
              break Fail183;
            { 
              if(true)
                break Fail182;
              if(true)
                break Success145;
            }
          }
          term = term156;
        }
        term = x_188;
        y_188 = x_188;
        IStrategoTerm term157 = term;
        Success146:
        { 
          Fail184:
          { 
            term = number$Items_0_0.instance.invoke(context, r_188);
            if(term == null)
              break Fail184;
            lifted111 lifted1110 = new lifted111();
            lifted1110.m_188 = m_188;
            lifted1110.s_188 = s_188;
            lifted1110.n_188 = n_188;
            lifted1110.o_188 = o_188;
            lifted1110.p_188 = p_188;
            lifted1110.q_188 = q_188;
            term = map_1_0.instance.invoke(context, term, lifted1110);
            if(term == null)
              break Fail184;
            u_188 = term;
            if(true)
              break Success146;
          }
          term = term157;
          IStrategoTerm v_188 = null;
          IStrategoTerm w_188 = null;
          IStrategoTerm a_189 = null;
          v_188 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail182;
          w_188 = term;
          a_189 = v_188;
          term = report_with_failure_0_2.instance.invoke(context, a_189, random_test.const129, w_188);
          if(term == null)
            break Fail182;
        }
        term = y_188;
        if(s_188.value == null || u_188 == null)
          break Fail182;
        IStrategoTerm mkterm4;
        mkterm4 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{s_188.value, u_188});
        if(mkterm4 == null)
          break Fail182;
        term = mkterm4;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class random_generate_referral_body_aux_0_6 extends Strategy 
  { 
    public static random_generate_referral_body_aux_0_6 instance = new random_generate_referral_body_aux_0_6();

    public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm w_702, IStrategoTerm x_702, IStrategoTerm y_702, IStrategoTerm z_702, IStrategoTerm a_703, IStrategoTerm b_703)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("random_generate_referral_body_aux_0_6");
      Fail185:
      { 
        IStrategoTerm term158 = term;
        Success147:
        { 
          Fail186:
          { 
            IStrategoTerm o_190 = null;
            IStrategoTerm p_190 = null;
            TermReference r_190 = new TermReference();
            IStrategoTerm s_190 = null;
            IStrategoTerm t_190 = null;
            IStrategoTerm u_190 = null;
            IStrategoTerm y_190 = null;
            IStrategoTerm term159 = term;
            Success148:
            { 
              Fail187:
              { 
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail187;
                IStrategoTerm arg47 = term.getSubterm(0);
                if(arg47.getTermType() != IStrategoTerm.APPL || random_test._consWld_0 != ((IStrategoAppl)arg47).getConstructor())
                  break Fail187;
                if(r_190.value == null)
                  r_190.value = term.getSubterm(1);
                else
                  if(r_190.value != term.getSubterm(1) && !r_190.value.match(term.getSubterm(1)))
                    break Fail187;
                if(true)
                  break Success148;
              }
              term = term159;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail186;
              IStrategoTerm arg48 = term.getSubterm(0);
              if(arg48.getTermType() != IStrategoTerm.APPL || random_test._consNBLType_0 != ((IStrategoAppl)arg48).getConstructor())
                break Fail186;
              if(r_190.value == null)
                r_190.value = term.getSubterm(1);
              else
                if(r_190.value != term.getSubterm(1) && !r_190.value.match(term.getSubterm(1)))
                  break Fail186;
            }
            y_190 = term;
            IStrategoTerm term160 = term;
            Success149:
            { 
              Fail188:
              { 
                term = $Cons$C$F_0_0.instance.invoke(context, x_702);
                if(term == null)
                  break Fail188;
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail188;
                p_190 = term.getSubterm(0);
                o_190 = term.getSubterm(1);
                term = filter_prods_0_0.instance.invoke(context, o_190);
                if(term == null)
                  break Fail188;
                term = number$Items_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail188;
                lifted115 lifted1150 = new lifted115();
                lifted1150.r_190 = r_190;
                term = filter_1_0.instance.invoke(context, term, lifted1150);
                if(term == null)
                  break Fail188;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail188;
                IStrategoTerm arg50 = ((IStrategoList)term).head();
                if(arg50.getTermType() != IStrategoTerm.TUPLE || arg50.getSubtermCount() != 2)
                  break Fail188;
                t_190 = arg50.getSubterm(0);
                term = $Item$Count_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail188;
                term = termFactory.makeTuple(o_190, p_190, term);
                term = get_and_distribute_rejections_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail188;
                term = number$Items_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail188;
                lifted117 lifted1170 = new lifted117();
                lifted1170.r_190 = r_190;
                term = filter_1_0.instance.invoke(context, term, lifted1170);
                if(term == null)
                  break Fail188;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail188;
                IStrategoTerm arg54 = ((IStrategoList)term).head();
                if(arg54.getTermType() != IStrategoTerm.TUPLE || arg54.getSubtermCount() != 2)
                  break Fail188;
                s_190 = arg54.getSubterm(0);
                term = write_rule_0_5.instance.invoke(context, t_190, y_702, z_702, a_703, b_703, s_190);
                if(term == null)
                  break Fail188;
                u_190 = term;
                if(true)
                  break Success149;
              }
              term = term160;
              IStrategoTerm v_190 = null;
              IStrategoTerm w_190 = null;
              IStrategoTerm c_191 = null;
              v_190 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail186;
              w_190 = term;
              c_191 = v_190;
              term = report_with_failure_0_2.instance.invoke(context, c_191, random_test.const130, w_190);
              if(term == null)
                break Fail186;
            }
            term = y_190;
            if(u_190 == null)
              break Fail186;
            term = u_190;
            if(true)
              break Success147;
          }
          term = term158;
          IStrategoTerm term161 = term;
          Success150:
          { 
            Fail189:
            { 
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail189;
              IStrategoTerm arg57 = term.getSubterm(0);
              if(arg57.getTermType() != IStrategoTerm.APPL || random_test._consNBLRef_0 != ((IStrategoAppl)arg57).getConstructor())
                break Fail189;
              term = w_702;
              if(true)
                break Success150;
            }
            term = term161;
            IStrategoTerm term162 = term;
            Success151:
            { 
              Fail190:
              { 
                IStrategoTerm y_189 = null;
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail190;
                y_189 = term.getSubterm(0);
                term = is_string_0_0.instance.invoke(context, y_189);
                if(term == null)
                  break Fail190;
                term = y_189;
                if(true)
                  break Success151;
              }
              term = term162;
              IStrategoTerm k_189 = null;
              IStrategoTerm l_189 = null;
              IStrategoTerm o_189 = null;
              IStrategoTerm p_189 = null;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail185;
              k_189 = term.getSubterm(0);
              o_189 = term;
              IStrategoTerm term163 = term;
              Success152:
              { 
                Fail191:
                { 
                  IStrategoTerm term164 = term;
                  Success153:
                  { 
                    Fail192:
                    { 
                      term = is_string_0_0.instance.invoke(context, k_189);
                      if(term == null)
                        break Fail192;
                      if(true)
                        break Success153;
                    }
                    term = term164;
                    IStrategoTerm term165 = term;
                    IStrategoConstructor cons39 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
                    Success154:
                    { 
                      if(cons39 == random_test._consWld_0)
                      { 
                        Fail193:
                        { 
                          if(true)
                            break Success154;
                        }
                        term = term165;
                      }
                      Success155:
                      { 
                        if(cons39 == random_test._consNBLRef_0)
                        { 
                          Fail194:
                          { 
                            if(true)
                              break Success155;
                          }
                          term = term165;
                        }
                        term = $N$B$L$Type_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail191;
                      }
                    }
                  }
                  { 
                    if(true)
                      break Fail185;
                    if(true)
                      break Success152;
                  }
                }
                term = term163;
              }
              term = o_189;
              p_189 = o_189;
              IStrategoTerm term167 = term;
              Success156:
              { 
                Fail195:
                { 
                  term = random_generate_referral_0_5.instance.invoke(context, k_189, w_702, y_702, z_702, a_703, b_703);
                  if(term == null)
                    break Fail195;
                  l_189 = term;
                  if(true)
                    break Success156;
                }
                term = term167;
                IStrategoTerm m_189 = null;
                IStrategoTerm n_189 = null;
                IStrategoTerm r_189 = null;
                m_189 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail185;
                n_189 = term;
                r_189 = m_189;
                term = report_with_failure_0_2.instance.invoke(context, r_189, random_test.const130, n_189);
                if(term == null)
                  break Fail185;
              }
              term = p_189;
              if(l_189 == null)
                break Fail185;
              term = l_189;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }

    @Override public IStrategoTerm invokeDynamic(Context context, IStrategoTerm term, Strategy[] sargs, IStrategoTerm[] targs)
    { 
      if(sargs == null || targs == null || sargs.length != 0 || targs.length != 6)
        throw new IllegalArgumentException("Illegal arguments for " + getName());
      return invoke(context, term, targs[0], targs[1], targs[2], targs[3], targs[4], targs[5]);
    }
  }

  @SuppressWarnings("all") public static class inject_$N$B$L_definition_creation_0_4 extends Strategy 
  { 
    public static inject_$N$B$L_definition_creation_0_4 instance = new inject_$N$B$L_definition_creation_0_4();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm f_191, IStrategoTerm h_191, IStrategoTerm i_191, IStrategoTerm j_191)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("inject_NBL_definition_creation_0_4");
      Fail196:
      { 
        IStrategoTerm l_191 = null;
        IStrategoTerm m_191 = null;
        IStrategoTerm n_191 = null;
        IStrategoTerm o_191 = null;
        IStrategoTerm p_191 = null;
        IStrategoTerm q_191 = null;
        IStrategoTerm w_191 = null;
        l_191 = term;
        w_191 = term;
        IStrategoTerm term168 = term;
        Success157:
        { 
          Fail197:
          { 
            IStrategoTerm y_191 = null;
            term = randomly_pick_a_scope_for_$N$B$L_injection_0_0.instance.invoke(context, l_191);
            if(term == null)
              break Fail197;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
              break Fail197;
            p_191 = term.getSubterm(0);
            m_191 = term.getSubterm(1);
            o_191 = term.getSubterm(2);
            y_191 = random_test.constsort0;
            term = write_rule_0_5.instance.invoke(context, y_191, f_191, h_191, i_191, j_191, random_test.constNil0);
            if(term == null)
              break Fail197;
            q_191 = term;
            term = termFactory.makeTuple(p_191, o_191, term);
            term = write_ns_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail197;
            term = random_generate_referral_0_5.instance.invoke(context, m_191, q_191, f_191, h_191, i_191, j_191);
            if(term == null)
              break Fail197;
            n_191 = term;
            term = termFactory.makeTuple(o_191, p_191, q_191);
            term = write_$N$B$L_injection_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail197;
            if(true)
              break Success157;
          }
          term = term168;
          IStrategoTerm r_191 = null;
          IStrategoTerm s_191 = null;
          IStrategoTerm a_192 = null;
          r_191 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail196;
          s_191 = term;
          a_192 = r_191;
          term = report_with_failure_0_2.instance.invoke(context, a_192, random_test.const132, s_191);
          if(term == null)
            break Fail196;
        }
        term = w_191;
        if(n_191 == null)
          break Fail196;
        term = n_191;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class randomly_pick_a_scope_for_$N$B$L_injection_0_0 extends Strategy 
  { 
    public static randomly_pick_a_scope_for_$N$B$L_injection_0_0 instance = new randomly_pick_a_scope_for_$N$B$L_injection_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("randomly_pick_a_scope_for_NBL_injection_0_0");
      Fail198:
      { 
        IStrategoTerm h_192 = null;
        IStrategoTerm i_192 = null;
        IStrategoTerm j_192 = null;
        IStrategoTerm k_192 = null;
        IStrategoTerm l_192 = null;
        IStrategoTerm n_192 = null;
        IStrategoTerm w_192 = null;
        IStrategoTerm z_192 = null;
        IStrategoTerm a_193 = null;
        h_192 = term;
        w_192 = term;
        IStrategoTerm term169 = term;
        Success158:
        { 
          Fail199:
          { 
            term = create_pool_of_all_scopes_0_0.instance.invoke(context, h_192);
            if(term == null)
              break Fail199;
            term = filter_1_0.instance.invoke(context, term, lifted119.instance);
            if(term == null)
              break Fail199;
            i_192 = term;
            term = debug_1_0.instance.invoke(context, term, lifted121.instance);
            if(term == null)
              break Fail199;
            if(true)
              break Success158;
          }
          term = term169;
          IStrategoTerm o_192 = null;
          IStrategoTerm p_192 = null;
          IStrategoTerm y_192 = null;
          o_192 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail198;
          p_192 = term;
          y_192 = o_192;
          term = report_with_failure_0_2.instance.invoke(context, y_192, random_test.const134, p_192);
          if(term == null)
            break Fail198;
        }
        term = w_192;
        z_192 = w_192;
        IStrategoTerm term171 = term;
        Success159:
        { 
          Fail200:
          { 
            if(i_192 == null)
              break Fail200;
            term = i_192;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail200;
            term = debug_1_0.instance.invoke(context, h_192, lifted125.instance);
            if(term == null)
              break Fail200;
            { 
              if(true)
                break Fail198;
              if(true)
                break Success159;
            }
          }
          term = term171;
        }
        term = z_192;
        a_193 = z_192;
        IStrategoTerm term172 = term;
        Success160:
        { 
          Fail201:
          { 
            if(i_192 == null)
              break Fail201;
            term = randomly_pick_from_list_0_0.instance.invoke(context, i_192);
            if(term == null)
              break Fail201;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
              break Fail201;
            k_192 = term.getSubterm(0);
            l_192 = term.getSubterm(1);
            j_192 = term.getSubterm(2);
            term = randomly_pick_from_list_0_0.instance.invoke(context, j_192);
            if(term == null)
              break Fail201;
            term = termFactory.makeTuple(k_192, l_192, term);
            n_192 = term;
            if(true)
              break Success160;
          }
          term = term172;
          IStrategoTerm q_192 = null;
          IStrategoTerm v_192 = null;
          IStrategoTerm c_193 = null;
          q_192 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail198;
          v_192 = term;
          c_193 = q_192;
          term = report_with_failure_0_2.instance.invoke(context, c_193, random_test.const134, v_192);
          if(term == null)
            break Fail198;
        }
        term = a_193;
        if(n_192 == null)
          break Fail198;
        term = n_192;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class create_pool_of_all_scopes_0_0 extends Strategy 
  { 
    public static create_pool_of_all_scopes_0_0 instance = new create_pool_of_all_scopes_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("create_pool_of_all_scopes_0_0");
      Fail202:
      { 
        IStrategoTerm term173 = term;
        Success161:
        { 
          Fail203:
          { 
            IStrategoTerm a_194 = null;
            IStrategoTerm b_194 = null;
            IStrategoTerm c_194 = null;
            IStrategoTerm d_194 = null;
            IStrategoTerm e_194 = null;
            IStrategoTerm h_194 = null;
            IStrategoTerm i_194 = null;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail203;
            IStrategoTerm arg61 = ((IStrategoList)term).head();
            if(arg61.getTermType() != IStrategoTerm.TUPLE || arg61.getSubtermCount() != 2)
              break Fail203;
            a_194 = arg61.getSubterm(0);
            b_194 = arg61.getSubterm(1);
            d_194 = ((IStrategoList)term).tail();
            h_194 = term;
            term = all_non_native_scopes_0_0.instance.invoke(context, a_194);
            if(term == null)
              break Fail203;
            c_194 = term;
            IStrategoTerm term174 = term;
            Success162:
            { 
              Fail204:
              { 
                term = c_194;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail204;
                { 
                  if(true)
                    break Fail203;
                  if(true)
                    break Success162;
                }
              }
              term = term174;
            }
            term = h_194;
            i_194 = h_194;
            IStrategoTerm term175 = term;
            Success163:
            { 
              Fail205:
              { 
                IStrategoTerm j_194 = null;
                IStrategoTerm k_194 = null;
                k_194 = term;
                term = this.invoke(context, d_194);
                if(term == null)
                  break Fail205;
                j_194 = term;
                term = k_194;
                IStrategoList list2;
                list2 = checkListTail(j_194);
                if(list2 == null)
                  break Fail205;
                term = (IStrategoTerm)termFactory.makeListCons(termFactory.makeTuple(a_194, b_194, c_194), list2);
                e_194 = term;
                if(true)
                  break Success163;
              }
              term = term175;
              IStrategoTerm f_194 = null;
              IStrategoTerm g_194 = null;
              IStrategoTerm m_194 = null;
              f_194 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail203;
              g_194 = term;
              m_194 = f_194;
              term = report_with_failure_0_2.instance.invoke(context, m_194, random_test.const136, g_194);
              if(term == null)
                break Fail203;
            }
            term = i_194;
            if(e_194 == null)
              break Fail203;
            term = e_194;
            if(true)
              break Success161;
          }
          term = term173;
          IStrategoTerm term176 = term;
          Success164:
          { 
            Fail206:
            { 
              IStrategoTerm g_193 = null;
              IStrategoTerm i_193 = null;
              IStrategoTerm j_193 = null;
              IStrategoTerm p_193 = null;
              IStrategoTerm u_193 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail206;
              IStrategoTerm arg62 = ((IStrategoList)term).head();
              if(arg62.getTermType() != IStrategoTerm.TUPLE || arg62.getSubtermCount() != 2)
                break Fail206;
              g_193 = arg62.getSubterm(0);
              i_193 = ((IStrategoList)term).tail();
              p_193 = term;
              term = all_non_native_scopes_0_0.instance.invoke(context, g_193);
              if(term == null)
                break Fail206;
              if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                break Fail206;
              term = p_193;
              u_193 = p_193;
              IStrategoTerm term177 = term;
              Success165:
              { 
                Fail207:
                { 
                  term = this.invoke(context, i_193);
                  if(term == null)
                    break Fail207;
                  j_193 = term;
                  if(true)
                    break Success165;
                }
                term = term177;
                IStrategoTerm k_193 = null;
                IStrategoTerm o_193 = null;
                IStrategoTerm w_193 = null;
                k_193 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail206;
                o_193 = term;
                w_193 = k_193;
                term = report_with_failure_0_2.instance.invoke(context, w_193, random_test.const136, o_193);
                if(term == null)
                  break Fail206;
              }
              term = u_193;
              if(j_193 == null)
                break Fail206;
              term = j_193;
              if(true)
                break Success164;
            }
            term = term176;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail202;
            term = random_test.constNil0;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class non_injectable_scope_0_0 extends Strategy 
  { 
    public static non_injectable_scope_0_0 instance = new non_injectable_scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("non_injectable_scope_0_0");
      Fail208:
      { 
        IStrategoTerm o_194 = null;
        IStrategoTerm p_194 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail208;
        o_194 = term.getSubterm(0);
        IStrategoTerm arg64 = term.getSubterm(2);
        if(arg64.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg64).isEmpty())
          break Fail208;
        p_194 = ((IStrategoList)arg64).head();
        IStrategoTerm arg65 = ((IStrategoList)arg64).tail();
        if(arg65.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg65).isEmpty())
          break Fail208;
        term = $Scope2$Key_0_0.instance.invoke(context, p_194);
        if(term == null)
          break Fail208;
        term = termFactory.makeTuple(term, o_194);
        term = $Non$Injectable_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail208;
        term = debug_1_0.instance.invoke(context, p_194, lifted127.instance);
        if(term == null)
          break Fail208;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_$N$B$L_injection_0_0 extends Strategy 
  { 
    public static write_$N$B$L_injection_0_0 instance = new write_$N$B$L_injection_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_NBL_injection_0_0");
      Fail209:
      { 
        IStrategoTerm r_194 = null;
        IStrategoTerm s_194 = null;
        IStrategoTerm t_194 = null;
        IStrategoTerm u_194 = null;
        IStrategoTerm v_194 = null;
        IStrategoTerm w_194 = null;
        IStrategoTerm y_194 = null;
        IStrategoTerm z_194 = null;
        IStrategoTerm a_195 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail209;
        r_194 = term.getSubterm(0);
        s_194 = term.getSubterm(1);
        t_194 = term.getSubterm(2);
        u_194 = term;
        y_194 = term;
        v_194 = random_test.const138;
        z_194 = y_194;
        term = termFactory.annotateTerm(termFactory.makeTuple(r_194, s_194, t_194), checkListAnnos(termFactory, random_test.constCons0));
        w_194 = term;
        a_195 = z_194;
        term = termFactory.makeTuple(random_test.const139, r_194, s_194, t_194);
        term = dr_set_rule_0_3.instance.invoke(context, a_195, v_194, w_194, term);
        if(term == null)
          break Fail209;
        term = u_194;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class inject_$N$B$L_definitions_0_1 extends Strategy 
  { 
    public static inject_$N$B$L_definitions_0_1 instance = new inject_$N$B$L_definitions_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm c_703)
    { 
      context.push("inject_NBL_definitions_0_1");
      Fail210:
      { 
        IStrategoTerm term178 = term;
        Success166:
        { 
          Fail211:
          { 
            IStrategoTerm f_196 = null;
            IStrategoTerm g_196 = null;
            IStrategoTerm h_196 = null;
            IStrategoTerm j_196 = null;
            IStrategoTerm k_196 = null;
            IStrategoTerm n_196 = null;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail211;
            IStrategoTerm arg66 = ((IStrategoList)term).head();
            if(arg66.getTermType() != IStrategoTerm.TUPLE || arg66.getSubtermCount() != 3)
              break Fail211;
            f_196 = arg66.getSubterm(0);
            g_196 = arg66.getSubterm(1);
            h_196 = arg66.getSubterm(2);
            j_196 = ((IStrategoList)term).tail();
            n_196 = term;
            IStrategoTerm term179 = term;
            Success167:
            { 
              Fail212:
              { 
                term = read_and_search_tree_0_3.instance.invoke(context, c_703, f_196, g_196, h_196);
                if(term == null)
                  break Fail212;
                term = this.invoke(context, j_196, term);
                if(term == null)
                  break Fail212;
                k_196 = term;
                if(true)
                  break Success167;
              }
              term = term179;
              IStrategoTerm l_196 = null;
              IStrategoTerm m_196 = null;
              IStrategoTerm p_196 = null;
              l_196 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail211;
              m_196 = term;
              p_196 = l_196;
              term = report_with_failure_0_2.instance.invoke(context, p_196, random_test.const140, m_196);
              if(term == null)
                break Fail211;
            }
            term = n_196;
            if(k_196 == null)
              break Fail211;
            term = k_196;
            if(true)
              break Success166;
          }
          term = term178;
          if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
            break Fail210;
          term = c_703;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class read_and_search_tree_0_3 extends Strategy 
  { 
    public static read_and_search_tree_0_3 instance = new read_and_search_tree_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_d_703, IStrategoTerm ref_e_703, IStrategoTerm ref_f_703)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference d_703 = new TermReference(ref_d_703);
      TermReference e_703 = new TermReference(ref_e_703);
      TermReference f_703 = new TermReference(ref_f_703);
      context.push("read_and_search_tree_0_3");
      Fail213:
      { 
        IStrategoTerm term180 = term;
        Success168:
        { 
          Fail214:
          { 
            TermReference f_199 = new TermReference();
            TermReference g_199 = new TermReference();
            IStrategoTerm l_199 = null;
            IStrategoTerm m_199 = null;
            if(f_199.value == null)
              f_199.value = term;
            else
              if(f_199.value != term && !f_199.value.match(term))
                break Fail214;
            IStrategoList annos3 = term.getAnnotations();
            if(annos3.getTermType() != IStrategoTerm.LIST || ((IStrategoList)annos3).isEmpty())
              break Fail214;
            if(d_703.value == null)
              d_703.value = ((IStrategoList)annos3).head();
            else
              if(d_703.value != ((IStrategoList)annos3).head() && !d_703.value.match(((IStrategoList)annos3).head()))
                break Fail214;
            IStrategoTerm arg67 = ((IStrategoList)annos3).tail();
            if(arg67.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg67).isEmpty())
              break Fail214;
            l_199 = term;
            IStrategoTerm term181 = term;
            Success169:
            { 
              Fail215:
              { 
                if(f_199.value == null)
                  break Fail215;
                term = is_string_0_0.instance.invoke(context, f_199.value);
                if(term == null)
                  break Fail215;
                { 
                  if(true)
                    break Fail214;
                  if(true)
                    break Success169;
                }
              }
              term = term181;
            }
            IStrategoTerm term182 = term;
            Success170:
            { 
              Fail216:
              { 
                if(f_199.value == null)
                  break Fail216;
                term = is_list_0_0.instance.invoke(context, f_199.value);
                if(term == null)
                  break Fail216;
                { 
                  if(true)
                    break Fail214;
                  if(true)
                    break Success170;
                }
              }
              term = term182;
            }
            term = l_199;
            m_199 = l_199;
            IStrategoTerm term183 = term;
            Success171:
            { 
              Fail217:
              { 
                IStrategoTerm n_199 = null;
                IStrategoTerm o_199 = null;
                o_199 = term;
                n_199 = random_test.const121;
                term = o_199;
                lifted129 lifted1290 = new lifted129();
                lifted1290.f_199 = f_199;
                lifted1290.d_703 = d_703;
                lifted1290.e_703 = e_703;
                lifted1290.f_703 = f_703;
                lifted1290.g_199 = g_199;
                term = dr_scope_1_1.instance.invoke(context, term, lifted1290, n_199);
                if(term == null)
                  break Fail217;
                if(true)
                  break Success171;
              }
              term = term183;
              IStrategoTerm j_199 = null;
              IStrategoTerm k_199 = null;
              IStrategoTerm q_199 = null;
              j_199 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail214;
              k_199 = term;
              q_199 = j_199;
              term = report_with_failure_0_2.instance.invoke(context, q_199, random_test.const141, k_199);
              if(term == null)
                break Fail214;
            }
            term = m_199;
            if(g_199.value == null)
              break Fail214;
            term = g_199.value;
            if(true)
              break Success168;
          }
          term = term180;
          IStrategoTerm term184 = term;
          Success172:
          { 
            Fail218:
            { 
              IStrategoTerm l_198 = null;
              IStrategoTerm m_198 = null;
              IStrategoTerm n_198 = null;
              IStrategoTerm o_198 = null;
              IStrategoTerm r_198 = null;
              IStrategoTerm s_198 = null;
              l_198 = term;
              IStrategoTerm cons16 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              m_198 = cons16;
              IStrategoTerm args15 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
              n_198 = args15;
              r_198 = term;
              IStrategoTerm term185 = term;
              Success173:
              { 
                Fail219:
                { 
                  term = is_string_0_0.instance.invoke(context, l_198);
                  if(term == null)
                    break Fail219;
                  { 
                    if(true)
                      break Fail218;
                    if(true)
                      break Success173;
                  }
                }
                term = term185;
              }
              IStrategoTerm term186 = term;
              Success174:
              { 
                Fail220:
                { 
                  term = is_list_0_0.instance.invoke(context, l_198);
                  if(term == null)
                    break Fail220;
                  { 
                    if(true)
                      break Fail218;
                    if(true)
                      break Success174;
                  }
                }
                term = term186;
              }
              IStrategoTerm term187 = term;
              Success175:
              { 
                Fail221:
                { 
                  term = has_annos_0_0.instance.invoke(context, l_198);
                  if(term == null)
                    break Fail221;
                  { 
                    if(true)
                      break Fail218;
                    if(true)
                      break Success175;
                  }
                }
                term = term187;
              }
              term = r_198;
              s_198 = r_198;
              IStrategoTerm term188 = term;
              Success176:
              { 
                Fail222:
                { 
                  IStrategoTerm t_198 = null;
                  IStrategoTerm v_198 = null;
                  v_198 = term;
                  term = n_198;
                  lifted130 lifted1300 = new lifted130();
                  lifted1300.d_703 = d_703;
                  lifted1300.e_703 = e_703;
                  lifted1300.f_703 = f_703;
                  term = map_1_0.instance.invoke(context, term, lifted1300);
                  if(term == null)
                    break Fail222;
                  t_198 = term;
                  term = v_198;
                  IStrategoTerm mkterm5;
                  mkterm5 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{m_198, t_198});
                  if(mkterm5 == null)
                    break Fail222;
                  term = mkterm5;
                  o_198 = mkterm5;
                  if(true)
                    break Success176;
                }
                term = term188;
                IStrategoTerm p_198 = null;
                IStrategoTerm q_198 = null;
                IStrategoTerm x_198 = null;
                p_198 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail218;
                q_198 = term;
                x_198 = p_198;
                term = report_with_failure_0_2.instance.invoke(context, x_198, random_test.const141, q_198);
                if(term == null)
                  break Fail218;
              }
              term = s_198;
              if(o_198 == null)
                break Fail218;
              term = o_198;
              if(true)
                break Success172;
            }
            term = term184;
            IStrategoTerm term189 = term;
            Success177:
            { 
              Fail223:
              { 
                IStrategoTerm s_197 = null;
                IStrategoTerm t_197 = null;
                TermReference u_197 = new TermReference();
                TermReference v_197 = new TermReference();
                TermReference w_197 = new TermReference();
                IStrategoTerm z_197 = null;
                IStrategoTerm a_198 = null;
                if(u_197.value == null)
                  u_197.value = term;
                else
                  if(u_197.value != term && !u_197.value.match(term))
                    break Fail223;
                IStrategoTerm cons17 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
                s_197 = cons17;
                IStrategoTerm args16 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
                if(v_197.value == null)
                  v_197.value = args16;
                else
                  if(v_197.value != args16 && !v_197.value.match(args16))
                    break Fail223;
                IStrategoList annos4 = term.getAnnotations();
                if(annos4.getTermType() != IStrategoTerm.LIST || ((IStrategoList)annos4).isEmpty())
                  break Fail223;
                t_197 = ((IStrategoList)annos4).head();
                IStrategoTerm arg68 = ((IStrategoList)annos4).tail();
                if(arg68.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg68).isEmpty())
                  break Fail223;
                z_197 = term;
                IStrategoTerm term190 = term;
                Success178:
                { 
                  Fail224:
                  { 
                    if(u_197.value == null)
                      break Fail224;
                    term = is_string_0_0.instance.invoke(context, u_197.value);
                    if(term == null)
                      break Fail224;
                    { 
                      if(true)
                        break Fail223;
                      if(true)
                        break Success178;
                    }
                  }
                  term = term190;
                }
                IStrategoTerm term191 = term;
                Success179:
                { 
                  Fail225:
                  { 
                    if(u_197.value == null)
                      break Fail225;
                    term = is_list_0_0.instance.invoke(context, u_197.value);
                    if(term == null)
                      break Fail225;
                    { 
                      if(true)
                        break Fail223;
                      if(true)
                        break Success179;
                    }
                  }
                  term = term191;
                }
                term = z_197;
                a_198 = z_197;
                IStrategoTerm term192 = term;
                Success180:
                { 
                  Fail226:
                  { 
                    IStrategoTerm b_198 = null;
                    IStrategoTerm c_198 = null;
                    c_198 = term;
                    b_198 = random_test.const121;
                    term = c_198;
                    lifted131 lifted1310 = new lifted131();
                    lifted1310.u_197 = u_197;
                    lifted1310.v_197 = v_197;
                    lifted1310.d_703 = d_703;
                    lifted1310.e_703 = e_703;
                    lifted1310.f_703 = f_703;
                    lifted1310.w_197 = w_197;
                    term = dr_scope_1_1.instance.invoke(context, term, lifted1310, b_198);
                    if(term == null)
                      break Fail226;
                    if(true)
                      break Success180;
                  }
                  term = term192;
                  IStrategoTerm x_197 = null;
                  IStrategoTerm y_197 = null;
                  IStrategoTerm e_198 = null;
                  x_197 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail223;
                  y_197 = term;
                  e_198 = x_197;
                  term = report_with_failure_0_2.instance.invoke(context, e_198, random_test.const141, y_197);
                  if(term == null)
                    break Fail223;
                }
                term = a_198;
                if(w_197.value == null)
                  break Fail223;
                IStrategoTerm mkterm6;
                mkterm6 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{s_197, w_197.value});
                if(mkterm6 == null)
                  break Fail223;
                term = termFactory.annotateTerm(mkterm6, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(t_197, (IStrategoList)random_test.constNil0)));
                if(true)
                  break Success177;
              }
              term = term189;
              IStrategoTerm term193 = term;
              Success181:
              { 
                Fail227:
                { 
                  IStrategoTerm l_197 = null;
                  l_197 = term;
                  term = is_string_0_0.instance.invoke(context, l_197);
                  if(term == null)
                    break Fail227;
                  term = l_197;
                  if(true)
                    break Success181;
                }
                term = term193;
                IStrategoTerm x_196 = null;
                IStrategoTerm y_196 = null;
                IStrategoTerm b_197 = null;
                IStrategoTerm c_197 = null;
                x_196 = term;
                b_197 = term;
                term = is_list_0_0.instance.invoke(context, x_196);
                if(term == null)
                  break Fail213;
                term = b_197;
                c_197 = b_197;
                IStrategoTerm term194 = term;
                Success182:
                { 
                  Fail228:
                  { 
                    term = x_196;
                    lifted133 lifted1330 = new lifted133();
                    lifted1330.d_703 = d_703;
                    lifted1330.e_703 = e_703;
                    lifted1330.f_703 = f_703;
                    term = map_1_0.instance.invoke(context, term, lifted1330);
                    if(term == null)
                      break Fail228;
                    y_196 = term;
                    if(true)
                      break Success182;
                  }
                  term = term194;
                  IStrategoTerm z_196 = null;
                  IStrategoTerm a_197 = null;
                  IStrategoTerm e_197 = null;
                  z_196 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail213;
                  a_197 = term;
                  e_197 = z_196;
                  term = report_with_failure_0_2.instance.invoke(context, e_197, random_test.const141, a_197);
                  if(term == null)
                    break Fail213;
                }
                term = c_197;
                if(y_196 == null)
                  break Fail213;
                term = y_196;
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class update_scopes_0_0 extends Strategy 
  { 
    public static update_scopes_0_0 instance = new update_scopes_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("update_scopes_0_0");
      Fail229:
      { 
        IStrategoTerm term195 = term;
        Success183:
        { 
          Fail230:
          { 
            IStrategoTerm v_199 = null;
            IStrategoTerm x_199 = null;
            IStrategoTerm y_199 = null;
            IStrategoTerm z_199 = null;
            TermReference a_200 = new TermReference();
            TermReference b_200 = new TermReference();
            IStrategoTerm h_200 = null;
            IStrategoTerm i_200 = null;
            IStrategoTerm j_200 = null;
            IStrategoTerm k_200 = null;
            IStrategoTerm l_200 = null;
            IStrategoTerm m_200 = null;
            v_199 = term;
            IStrategoList annos5 = term.getAnnotations();
            if(annos5.getTermType() != IStrategoTerm.LIST || ((IStrategoList)annos5).isEmpty())
              break Fail230;
            if(a_200.value == null)
              a_200.value = ((IStrategoList)annos5).head();
            else
              if(a_200.value != ((IStrategoList)annos5).head() && !a_200.value.match(((IStrategoList)annos5).head()))
                break Fail230;
            IStrategoTerm arg69 = ((IStrategoList)annos5).tail();
            if(arg69.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg69).isEmpty())
              break Fail230;
            h_200 = term;
            term = v_199;
            IStrategoTerm cons18 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            x_199 = cons18;
            i_200 = h_200;
            term = $Cons$C$F_0_0.instance.invoke(context, x_199);
            if(term == null)
              break Fail230;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail230;
            y_199 = term.getSubterm(1);
            term = i_200;
            j_200 = i_200;
            l_200 = term;
            term = filter_prods_0_0.instance.invoke(context, y_199);
            if(term == null)
              break Fail230;
            k_200 = term;
            term = l_200;
            IStrategoTerm mkterm7;
            mkterm7 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{x_199, k_200});
            if(mkterm7 == null)
              break Fail230;
            term = create_key_0_0.instance.invoke(context, mkterm7);
            if(term == null)
              break Fail230;
            if(b_200.value == null)
              b_200.value = term;
            else
              if(b_200.value != term && !b_200.value.match(term))
                break Fail230;
            if(b_200.value == null)
              break Fail230;
            term = bagof_$N$B$L$Key2$Scope_0_0.instance.invoke(context, b_200.value);
            if(term == null)
              break Fail230;
            term = concat_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail230;
            z_199 = term;
            IStrategoTerm term196 = term;
            Success184:
            { 
              Fail231:
              { 
                term = z_199;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail231;
                { 
                  if(true)
                    break Fail230;
                  if(true)
                    break Success184;
                }
              }
              term = term196;
            }
            term = j_200;
            m_200 = j_200;
            IStrategoTerm term197 = term;
            Success185:
            { 
              Fail232:
              { 
                term = nub_0_0.instance.invoke(context, z_199);
                if(term == null)
                  break Fail232;
                lifted134 lifted1340 = new lifted134();
                lifted1340.a_200 = a_200;
                lifted1340.b_200 = b_200;
                term = map_1_0.instance.invoke(context, term, lifted1340);
                if(term == null)
                  break Fail232;
                if(true)
                  break Success185;
              }
              term = term197;
              IStrategoTerm d_200 = null;
              IStrategoTerm e_200 = null;
              IStrategoTerm o_200 = null;
              d_200 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail230;
              e_200 = term;
              o_200 = d_200;
              term = report_with_failure_0_2.instance.invoke(context, o_200, random_test.const142, e_200);
              if(term == null)
                break Fail230;
            }
            term = m_200;
            if(a_200.value == null)
              break Fail230;
            term = termFactory.annotateTerm(v_199, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(a_200.value, (IStrategoList)random_test.constNil0)));
            if(true)
              break Success183;
          }
          term = term195;
          IStrategoTerm r_199 = null;
          r_199 = term;
          IStrategoTerm term198 = term;
          Success186:
          { 
            Fail233:
            { 
              term = has_annos_0_0.instance.invoke(context, r_199);
              if(term == null)
                break Fail233;
              { 
                if(true)
                  break Fail229;
                if(true)
                  break Success186;
              }
            }
            term = term198;
          }
          term = r_199;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class inject_$N$B$L_definition_0_3 extends Strategy 
  { 
    public static inject_$N$B$L_definition_0_3 instance = new inject_$N$B$L_definition_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm r_200, IStrategoTerm s_200, IStrategoTerm t_200)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("inject_NBL_definition_0_3");
      Fail234:
      { 
        IStrategoTerm u_200 = null;
        IStrategoTerm v_200 = null;
        IStrategoTerm w_200 = null;
        IStrategoTerm x_200 = null;
        IStrategoTerm y_200 = null;
        IStrategoTerm z_200 = null;
        IStrategoTerm a_201 = null;
        IStrategoTerm d_201 = null;
        z_200 = term;
        IStrategoList annos6 = term.getAnnotations();
        if(annos6.getTermType() != IStrategoTerm.LIST || ((IStrategoList)annos6).isEmpty())
          break Fail234;
        if(((IStrategoList)annos6).head() != r_200 && !r_200.match(((IStrategoList)annos6).head()))
          break Fail234;
        IStrategoTerm arg71 = ((IStrategoList)annos6).tail();
        if(arg71.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg71).isEmpty())
          break Fail234;
        d_201 = term;
        IStrategoTerm term199 = term;
        Success187:
        { 
          Fail235:
          { 
            term = randomly_pick_alternative_0_1.instance.invoke(context, z_200, s_200);
            if(term == null)
              break Fail235;
            w_200 = term;
            term = debug_1_0.instance.invoke(context, term, lifted135.instance);
            if(term == null)
              break Fail235;
            term = w_200;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail235;
            IStrategoTerm arg72 = term.getSubterm(0);
            v_200 = arg72;
            if(arg72.getTermType() != IStrategoTerm.TUPLE || arg72.getSubtermCount() != 5)
              break Fail235;
            u_200 = arg72.getSubterm(3);
            x_200 = term.getSubterm(1);
            term = build_alternative_0_2.instance.invoke(context, v_200, t_200, u_200);
            if(term == null)
              break Fail235;
            y_200 = term;
            term = debug_1_0.instance.invoke(context, term, lifted142.instance);
            if(term == null)
              break Fail235;
            term = debug_1_0.instance.invoke(context, w_200, lifted157.instance);
            if(term == null)
              break Fail235;
            term = write_to_string_0_0.instance.invoke(context, z_200);
            if(term == null)
              break Fail235;
            term = debug_1_0.instance.invoke(context, term, lifted158.instance);
            if(term == null)
              break Fail235;
            term = inject_alternative_0_2.instance.invoke(context, z_200, x_200, y_200);
            if(term == null)
              break Fail235;
            a_201 = term;
            if(true)
              break Success187;
          }
          term = term199;
          IStrategoTerm b_201 = null;
          IStrategoTerm c_201 = null;
          IStrategoTerm f_201 = null;
          b_201 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail234;
          c_201 = term;
          f_201 = b_201;
          term = report_with_failure_0_2.instance.invoke(context, f_201, random_test.const147, c_201);
          if(term == null)
            break Fail234;
        }
        term = d_201;
        if(a_201 == null)
          break Fail234;
        term = termFactory.annotateTerm(a_201, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(r_200, (IStrategoList)random_test.constNil0)));
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class inject_alternative_0_2 extends Strategy 
  { 
    public static inject_alternative_0_2 instance = new inject_alternative_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm g_703, IStrategoTerm ref_h_703)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference h_703 = new TermReference(ref_h_703);
      context.push("inject_alternative_0_2");
      Fail236:
      { 
        IStrategoTerm term200 = term;
        Success188:
        { 
          Fail237:
          { 
            IStrategoTerm d_202 = null;
            IStrategoTerm f_202 = null;
            IStrategoTerm j_202 = null;
            IStrategoTerm k_202 = null;
            IStrategoTerm l_202 = null;
            IStrategoTerm m_202 = null;
            d_202 = term;
            j_202 = term;
            term = g_703;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail237;
            term = j_202;
            k_202 = j_202;
            IStrategoTerm term201 = term;
            Success189:
            { 
              Fail238:
              { 
                IStrategoTerm g_202 = null;
                g_202 = term;
                IStrategoTerm term202 = term;
                Success190:
                { 
                  Fail239:
                  { 
                    term = is_list_0_0.instance.invoke(context, d_202);
                    if(term == null)
                      break Fail239;
                    { 
                      if(true)
                        break Fail238;
                      if(true)
                        break Success190;
                    }
                  }
                  term = term202;
                }
                term = g_202;
                { 
                  term = debug_1_0.instance.invoke(context, d_202, lifted159.instance);
                  if(term == null)
                    break Fail237;
                  if(true)
                    break Success189;
                }
              }
              term = term201;
            }
            l_202 = k_202;
            term = is_list_0_0.instance.invoke(context, d_202);
            if(term == null)
              break Fail237;
            term = l_202;
            m_202 = l_202;
            IStrategoTerm term203 = term;
            Success191:
            { 
              Fail240:
              { 
                if(h_703.value == null)
                  break Fail240;
                IStrategoList list3;
                list3 = checkListTail(d_202);
                if(list3 == null)
                  break Fail240;
                term = (IStrategoTerm)termFactory.makeListCons(h_703.value, list3);
                f_202 = term;
                if(true)
                  break Success191;
              }
              term = term203;
              IStrategoTerm h_202 = null;
              IStrategoTerm i_202 = null;
              IStrategoTerm o_202 = null;
              h_202 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail237;
              i_202 = term;
              o_202 = h_202;
              term = report_with_failure_0_2.instance.invoke(context, o_202, random_test.const149, i_202);
              if(term == null)
                break Fail237;
            }
            term = m_202;
            if(f_202 == null)
              break Fail237;
            term = f_202;
            if(true)
              break Success188;
          }
          term = term200;
          IStrategoTerm k_201 = null;
          IStrategoTerm m_201 = null;
          TermReference n_201 = new TermReference();
          TermReference o_201 = new TermReference();
          IStrategoTerm s_201 = null;
          IStrategoTerm v_201 = null;
          IStrategoTerm w_201 = null;
          IStrategoTerm cons19 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
          k_201 = cons19;
          IStrategoTerm args18 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
          m_201 = args18;
          v_201 = term;
          IStrategoTerm term204 = term;
          Success192:
          { 
            Fail241:
            { 
              term = g_703;
              if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                break Fail241;
              { 
                if(true)
                  break Fail236;
                if(true)
                  break Success192;
              }
            }
            term = term204;
          }
          term = v_201;
          w_201 = v_201;
          IStrategoTerm term205 = term;
          Success193:
          { 
            Fail242:
            { 
              term = g_703;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail242;
              IStrategoTerm arg77 = ((IStrategoList)term).head();
              if(arg77.getTermType() != IStrategoTerm.APPL || random_test._consInjectGoTo_1 != ((IStrategoAppl)arg77).getConstructor())
                break Fail242;
              if(o_201.value == null)
                o_201.value = arg77.getSubterm(0);
              else
                if(o_201.value != arg77.getSubterm(0) && !o_201.value.match(arg77.getSubterm(0)))
                  break Fail242;
              if(n_201.value == null)
                n_201.value = ((IStrategoList)term).tail();
              else
                if(n_201.value != ((IStrategoList)term).tail() && !n_201.value.match(((IStrategoList)term).tail()))
                  break Fail242;
              term = number$Items_0_0.instance.invoke(context, m_201);
              if(term == null)
                break Fail242;
              lifted160 lifted1600 = new lifted160();
              lifted1600.n_201 = n_201;
              lifted1600.h_703 = h_703;
              lifted1600.o_201 = o_201;
              term = map_1_0.instance.invoke(context, term, lifted1600);
              if(term == null)
                break Fail242;
              s_201 = term;
              if(true)
                break Success193;
            }
            term = term205;
            IStrategoTerm t_201 = null;
            IStrategoTerm u_201 = null;
            IStrategoTerm y_201 = null;
            t_201 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail236;
            u_201 = term;
            y_201 = t_201;
            term = report_with_failure_0_2.instance.invoke(context, y_201, random_test.const149, u_201);
            if(term == null)
              break Fail236;
          }
          term = w_201;
          if(s_201 == null)
            break Fail236;
          IStrategoTerm mkterm8;
          mkterm8 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{k_201, s_201});
          if(mkterm8 == null)
            break Fail236;
          term = mkterm8;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class inject_alternative_aux_0_3 extends Strategy 
  { 
    public static inject_alternative_aux_0_3 instance = new inject_alternative_aux_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm i_703, IStrategoTerm j_703, IStrategoTerm k_703)
    { 
      context.push("inject_alternative_aux_0_3");
      Fail243:
      { 
        IStrategoTerm term206 = term;
        Success194:
        { 
          Fail244:
          { 
            IStrategoTerm a_203 = null;
            IStrategoTerm b_203 = null;
            IStrategoTerm e_203 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail244;
            a_203 = term.getSubterm(0);
            if(term.getSubterm(1) != k_703 && !k_703.match(term.getSubterm(1)))
              break Fail244;
            e_203 = term;
            IStrategoTerm term207 = term;
            Success195:
            { 
              Fail245:
              { 
                term = inject_alternative_0_2.instance.invoke(context, a_203, i_703, j_703);
                if(term == null)
                  break Fail245;
                b_203 = term;
                if(true)
                  break Success195;
              }
              term = term207;
              IStrategoTerm c_203 = null;
              IStrategoTerm d_203 = null;
              IStrategoTerm g_203 = null;
              c_203 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail244;
              d_203 = term;
              g_203 = c_203;
              term = report_with_failure_0_2.instance.invoke(context, g_203, random_test.const150, d_203);
              if(term == null)
                break Fail244;
            }
            term = e_203;
            if(b_203 == null)
              break Fail244;
            term = b_203;
            if(true)
              break Success194;
          }
          term = term206;
          IStrategoTerm s_202 = null;
          IStrategoTerm t_202 = null;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail243;
          s_202 = term.getSubterm(0);
          t_202 = term.getSubterm(1);
          IStrategoTerm term208 = term;
          Success196:
          { 
            Fail246:
            { 
              term = k_703;
              if(term != t_202 && !t_202.match(term))
                break Fail246;
              { 
                if(true)
                  break Fail243;
                if(true)
                  break Success196;
              }
            }
            term = term208;
          }
          term = s_202;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class build_alternative_0_2 extends Strategy 
  { 
    public static build_alternative_0_2 instance = new build_alternative_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_l_703, IStrategoTerm ref_m_703)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference l_703 = new TermReference(ref_l_703);
      TermReference m_703 = new TermReference(ref_m_703);
      context.push("build_alternative_0_2");
      Fail247:
      { 
        IStrategoTerm term209 = term;
        Success197:
        { 
          Fail248:
          { 
            TermReference t_204 = new TermReference();
            TermReference u_204 = new TermReference();
            TermReference v_204 = new TermReference();
            TermReference w_204 = new TermReference();
            TermReference z_204 = new TermReference();
            TermReference a_205 = new TermReference();
            TermReference b_205 = new TermReference();
            TermReference c_205 = new TermReference();
            TermReference e_205 = new TermReference();
            TermReference f_205 = new TermReference();
            IStrategoTerm i_205 = null;
            IStrategoTerm j_205 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 5)
              break Fail248;
            IStrategoTerm arg80 = term.getSubterm(3);
            if(arg80.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg80).isEmpty())
              break Fail248;
            IStrategoTerm arg81 = ((IStrategoList)arg80).head();
            if(arg81.getTermType() != IStrategoTerm.APPL || random_test._consDefineHere_1 != ((IStrategoAppl)arg81).getConstructor())
              break Fail248;
            if(t_204.value == null)
              t_204.value = arg81.getSubterm(0);
            else
              if(t_204.value != arg81.getSubterm(0) && !t_204.value.match(arg81.getSubterm(0)))
                break Fail248;
            IStrategoTerm arg82 = ((IStrategoList)arg80).tail();
            if(arg82.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg82).isEmpty())
              break Fail248;
            i_205 = term;
            if(t_204.value == null)
              break Fail248;
            term = debug_1_0.instance.invoke(context, t_204.value, lifted161.instance);
            if(term == null)
              break Fail248;
            term = i_205;
            j_205 = i_205;
            IStrategoTerm term210 = term;
            Success198:
            { 
              Fail249:
              { 
                IStrategoTerm k_205 = null;
                IStrategoTerm l_205 = null;
                l_205 = term;
                k_205 = random_test.const121;
                term = l_205;
                lifted162 lifted1620 = new lifted162();
                lifted1620.t_204 = t_204;
                lifted1620.u_204 = u_204;
                lifted1620.w_204 = w_204;
                lifted1620.v_204 = v_204;
                lifted1620.z_204 = z_204;
                lifted1620.a_205 = a_205;
                lifted1620.l_703 = l_703;
                lifted1620.e_205 = e_205;
                lifted1620.b_205 = b_205;
                lifted1620.c_205 = c_205;
                lifted1620.f_205 = f_205;
                term = dr_scope_1_1.instance.invoke(context, term, lifted1620, k_205);
                if(term == null)
                  break Fail249;
                if(true)
                  break Success198;
              }
              term = term210;
              IStrategoTerm g_205 = null;
              IStrategoTerm h_205 = null;
              IStrategoTerm t_205 = null;
              g_205 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail248;
              h_205 = term;
              t_205 = g_205;
              term = report_with_failure_0_2.instance.invoke(context, t_205, random_test.const159, h_205);
              if(term == null)
                break Fail248;
            }
            term = j_205;
            if(f_205.value == null)
              break Fail248;
            term = f_205.value;
            if(true)
              break Success197;
          }
          term = term209;
          IStrategoTerm l_203 = null;
          IStrategoTerm n_203 = null;
          IStrategoTerm o_203 = null;
          IStrategoTerm p_203 = null;
          IStrategoTerm r_203 = null;
          IStrategoTerm s_203 = null;
          IStrategoTerm t_203 = null;
          TermReference w_203 = new TermReference();
          TermReference x_203 = new TermReference();
          TermReference y_203 = new TermReference();
          TermReference z_203 = new TermReference();
          IStrategoTerm a_204 = null;
          IStrategoTerm c_204 = null;
          IStrategoTerm i_204 = null;
          IStrategoTerm j_204 = null;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 5)
            break Fail247;
          if(x_203.value == null)
            x_203.value = term.getSubterm(0);
          else
            if(x_203.value != term.getSubterm(0) && !x_203.value.match(term.getSubterm(0)))
              break Fail247;
          if(y_203.value == null)
            y_203.value = term.getSubterm(1);
          else
            if(y_203.value != term.getSubterm(1) && !y_203.value.match(term.getSubterm(1)))
              break Fail247;
          if(w_203.value == null)
            w_203.value = term.getSubterm(2);
          else
            if(w_203.value != term.getSubterm(2) && !w_203.value.match(term.getSubterm(2)))
              break Fail247;
          l_203 = term.getSubterm(3);
          if(z_203.value == null)
            z_203.value = term.getSubterm(4);
          else
            if(z_203.value != term.getSubterm(4) && !z_203.value.match(term.getSubterm(4)))
              break Fail247;
          i_204 = term;
          IStrategoTerm term212 = term;
          Success199:
          { 
            Fail250:
            { 
              term = l_203;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail250;
              IStrategoTerm arg84 = ((IStrategoList)term).head();
              if(arg84.getTermType() != IStrategoTerm.APPL || random_test._consDefineHere_1 != ((IStrategoAppl)arg84).getConstructor())
                break Fail250;
              IStrategoTerm arg85 = ((IStrategoList)term).tail();
              if(arg85.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg85).isEmpty())
                break Fail250;
              { 
                if(true)
                  break Fail247;
                if(true)
                  break Success199;
              }
            }
            term = term212;
          }
          term = i_204;
          j_204 = i_204;
          IStrategoTerm term213 = term;
          Success200:
          { 
            Fail251:
            { 
              IStrategoTerm k_204 = null;
              IStrategoTerm l_204 = null;
              if(x_203.value == null)
                break Fail251;
              term = filter_prods_0_0.instance.invoke(context, x_203.value);
              if(term == null)
                break Fail251;
              term = number$Items_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail251;
              n_203 = term;
              l_204 = term;
              term = $Item$Count_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail251;
              k_204 = term;
              term = l_204;
              if(x_203.value == null || y_203.value == null)
                break Fail251;
              term = termFactory.makeTuple(x_203.value, y_203.value, k_204);
              term = get_and_distribute_rejections_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail251;
              o_203 = term;
              term = termFactory.makeTuple(n_203, term);
              term = zip_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail251;
              a_204 = term;
              Success201:
              { 
                Fail252:
                { 
                  IStrategoTerm d_204 = null;
                  d_204 = term;
                  IStrategoTerm term215 = term;
                  Success202:
                  { 
                    Fail253:
                    { 
                      if(y_203.value == null || x_203.value == null)
                        break Fail253;
                      term = termFactory.makeTuple(y_203.value, x_203.value);
                      term = $C$F$Cons_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail253;
                      r_203 = term;
                      if(true)
                        break Success202;
                    }
                    term = term215;
                    if(y_203.value == null || x_203.value == null)
                      break Fail252;
                    term = termFactory.makeTuple(y_203.value, x_203.value);
                    term = get_$Special$A$S$T$Term_cons_0_2.instance.invoke(context, term, x_203.value, o_203);
                    if(term == null)
                      break Fail252;
                    if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                      break Fail252;
                    r_203 = term.getSubterm(0);
                    p_203 = term.getSubterm(1);
                  }
                  term = d_204;
                  { 
                    if(y_203.value == null || x_203.value == null)
                      break Fail251;
                    term = termFactory.makeTuple(y_203.value, x_203.value);
                    Success203:
                    { 
                      Fail254:
                      { 
                        term = update_$N$B$L_scope_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail254;
                        if(true)
                          break Success203;
                      }
                      term = random_test.const110;
                    }
                    t_203 = term;
                    Success204:
                    { 
                      Fail255:
                      { 
                        IStrategoTerm e_204 = null;
                        e_204 = term;
                        if(p_203 == null)
                          break Fail255;
                        term = e_204;
                        { 
                          if(p_203 == null)
                            break Fail251;
                          term = p_203;
                          lifted191 lifted1910 = new lifted191();
                          lifted1910.w_203 = w_203;
                          lifted1910.x_203 = x_203;
                          lifted1910.y_203 = y_203;
                          lifted1910.m_703 = m_703;
                          lifted1910.z_203 = z_203;
                          lifted1910.l_703 = l_703;
                          term = map_1_0.instance.invoke(context, term, lifted1910);
                          if(term == null)
                            break Fail251;
                          s_203 = term;
                          if(true)
                            break Success204;
                        }
                      }
                      term = a_204;
                      lifted197 lifted1970 = new lifted197();
                      lifted1970.w_203 = w_203;
                      lifted1970.x_203 = x_203;
                      lifted1970.y_203 = y_203;
                      lifted1970.m_703 = m_703;
                      lifted1970.z_203 = z_203;
                      lifted1970.l_703 = l_703;
                      term = map_1_0.instance.invoke(context, term, lifted1970);
                      if(term == null)
                        break Fail251;
                      s_203 = term;
                    }
                    IStrategoTerm term218 = term;
                    Success205:
                    { 
                      Fail256:
                      { 
                        IStrategoTerm f_204 = null;
                        f_204 = term;
                        term = t_203;
                        if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
                          break Fail256;
                        term = f_204;
                        { 
                          IStrategoTerm mkterm9;
                          mkterm9 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{r_203, s_203});
                          if(mkterm9 == null)
                            break Fail251;
                          term = mkterm9;
                          c_204 = mkterm9;
                          if(true)
                            break Success205;
                        }
                      }
                      term = term218;
                      IStrategoTerm mkterm10;
                      mkterm10 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{r_203, s_203});
                      if(mkterm10 == null)
                        break Fail251;
                      term = termFactory.annotateTerm(mkterm10, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(t_203, (IStrategoList)random_test.constNil0)));
                      c_204 = term;
                    }
                    if(true)
                      break Success201;
                  }
                }
                term = a_204;
                lifted202 lifted2020 = new lifted202();
                lifted2020.w_203 = w_203;
                lifted2020.x_203 = x_203;
                lifted2020.y_203 = y_203;
                lifted2020.m_703 = m_703;
                lifted2020.z_203 = z_203;
                lifted2020.l_703 = l_703;
                term = map_1_0.instance.invoke(context, term, lifted2020);
                if(term == null)
                  break Fail251;
                term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
                if(term == null)
                  break Fail251;
                c_204 = term;
              }
              if(true)
                break Success200;
            }
            term = term213;
            IStrategoTerm g_204 = null;
            IStrategoTerm h_204 = null;
            IStrategoTerm n_204 = null;
            g_204 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail247;
            h_204 = term;
            n_204 = g_204;
            term = report_with_failure_0_2.instance.invoke(context, n_204, random_test.const159, h_204);
            if(term == null)
              break Fail247;
          }
          term = j_204;
          if(c_204 == null)
            break Fail247;
          term = c_204;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class construct_result_0_2 extends Strategy 
  { 
    public static construct_result_0_2 instance = new construct_result_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm n_703, IStrategoTerm o_703)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail257:
      { 
        IStrategoTerm term219 = term;
        Success206:
        { 
          Fail258:
          { 
            if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
              break Fail258;
            IStrategoTerm mkterm11;
            mkterm11 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{n_703, o_703});
            if(mkterm11 == null)
              break Fail258;
            term = mkterm11;
            if(true)
              break Success206;
          }
          term = term219;
          IStrategoTerm w_205 = null;
          IStrategoTerm x_205 = null;
          w_205 = term;
          x_205 = term;
          IStrategoTerm term220 = term;
          Success207:
          { 
            Fail259:
            { 
              term = w_205;
              if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
                break Fail259;
              { 
                if(true)
                  break Fail257;
                if(true)
                  break Success207;
              }
            }
            term = term220;
          }
          term = x_205;
          IStrategoTerm mkterm12;
          mkterm12 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{n_703, o_703});
          if(mkterm12 == null)
            break Fail257;
          term = termFactory.annotateTerm(mkterm12, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(w_205, (IStrategoList)random_test.constNil0)));
        }
        if(true)
          return term;
      }
      context.push("construct_result_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class build_definition_body_0_1 extends Strategy 
  { 
    public static build_definition_body_0_1 instance = new build_definition_body_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm p_703)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("build_definition_body_0_1");
      Fail260:
      { 
        IStrategoTerm term221 = term;
        Success208:
        { 
          Fail261:
          { 
            IStrategoTerm g_207 = null;
            IStrategoTerm h_207 = null;
            IStrategoTerm k_207 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail261;
            IStrategoTerm arg86 = term.getSubterm(0);
            if(arg86.getTermType() != IStrategoTerm.TUPLE || arg86.getSubtermCount() != 2)
              break Fail261;
            g_207 = arg86.getSubterm(0);
            h_207 = term;
            IStrategoTerm term222 = term;
            Success209:
            { 
              Fail262:
              { 
                term = g_207;
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consNBLRef_0 != ((IStrategoAppl)term).getConstructor())
                  break Fail262;
                { 
                  if(true)
                    break Fail261;
                  if(true)
                    break Success209;
                }
              }
              term = term222;
            }
            term = h_207;
            k_207 = h_207;
            IStrategoTerm term223 = term;
            Success210:
            { 
              Fail263:
              { 
                term = g_207;
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consNBLType_0 != ((IStrategoAppl)term).getConstructor())
                  break Fail263;
                { 
                  if(true)
                    break Fail261;
                  if(true)
                    break Success210;
                }
              }
              term = term223;
            }
            term = k_207;
            IStrategoTerm term224 = term;
            Success211:
            { 
              Fail264:
              { 
                term = g_207;
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consWld_0 != ((IStrategoAppl)term).getConstructor())
                  break Fail264;
                { 
                  if(true)
                    break Fail261;
                  if(true)
                    break Success211;
                }
              }
              term = term224;
            }
            term = g_207;
            if(true)
              break Success208;
          }
          term = term221;
          IStrategoTerm term225 = term;
          Success212:
          { 
            Fail265:
            { 
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail265;
              IStrategoTerm arg89 = term.getSubterm(0);
              if(arg89.getTermType() != IStrategoTerm.TUPLE || arg89.getSubtermCount() != 2)
                break Fail265;
              IStrategoTerm arg90 = arg89.getSubterm(0);
              if(arg90.getTermType() != IStrategoTerm.APPL || random_test._consNBLRef_0 != ((IStrategoAppl)arg90).getConstructor())
                break Fail265;
              term = p_703;
              if(true)
                break Success212;
            }
            term = term225;
            IStrategoTerm f_206 = null;
            IStrategoTerm g_206 = null;
            IStrategoTerm h_206 = null;
            IStrategoTerm m_206 = null;
            IStrategoTerm term226 = term;
            Success213:
            { 
              Fail266:
              { 
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail266;
                IStrategoTerm arg93 = term.getSubterm(0);
                if(arg93.getTermType() != IStrategoTerm.TUPLE || arg93.getSubtermCount() != 2)
                  break Fail266;
                IStrategoTerm arg94 = arg93.getSubterm(0);
                if(arg94.getTermType() != IStrategoTerm.APPL || random_test._consNBLType_0 != ((IStrategoAppl)arg94).getConstructor())
                  break Fail266;
                g_206 = arg93.getSubterm(1);
                f_206 = term.getSubterm(1);
                if(true)
                  break Success213;
              }
              term = term226;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail260;
              IStrategoTerm arg95 = term.getSubterm(0);
              if(arg95.getTermType() != IStrategoTerm.TUPLE || arg95.getSubtermCount() != 2)
                break Fail260;
              IStrategoTerm arg96 = arg95.getSubterm(0);
              if(arg96.getTermType() != IStrategoTerm.APPL || random_test._consWld_0 != ((IStrategoAppl)arg96).getConstructor())
                break Fail260;
              g_206 = arg95.getSubterm(1);
              f_206 = term.getSubterm(1);
            }
            m_206 = term;
            IStrategoTerm term227 = term;
            Success214:
            { 
              Fail267:
              { 
                IStrategoTerm n_206 = null;
                IStrategoTerm o_206 = null;
                IStrategoTerm p_206 = null;
                IStrategoTerm t_206 = null;
                IStrategoTerm u_206 = null;
                IStrategoTerm v_206 = null;
                IStrategoTerm w_206 = null;
                IStrategoTerm x_206 = null;
                IStrategoTerm z_206 = null;
                t_206 = g_206;
                n_206 = random_test.constNil0;
                u_206 = t_206;
                o_206 = random_test.const58;
                v_206 = u_206;
                p_206 = random_test.const58;
                term = v_206;
                w_206 = v_206;
                z_206 = term;
                term = $Max$Count_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail267;
                x_206 = term;
                term = z_206;
                term = $Cons$Count_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail267;
                term = termFactory.makeTuple(x_206, term);
                term = subti_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail267;
                term = write_rule_0_5.instance.invoke(context, w_206, n_206, o_206, p_206, term, f_206);
                if(term == null)
                  break Fail267;
                h_206 = term;
                if(true)
                  break Success214;
              }
              term = term227;
              IStrategoTerm i_206 = null;
              IStrategoTerm k_206 = null;
              IStrategoTerm c_207 = null;
              i_206 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail260;
              k_206 = term;
              c_207 = i_206;
              term = report_with_failure_0_2.instance.invoke(context, c_207, random_test.const160, k_206);
              if(term == null)
                break Fail260;
            }
            term = m_206;
            if(h_206 == null)
              break Fail260;
            term = h_206;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class build_alternative_body_0_6 extends Strategy 
  { 
    public static build_alternative_body_0_6 instance = new build_alternative_body_0_6();

    public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm q_703, IStrategoTerm r_703, IStrategoTerm s_703, IStrategoTerm t_703, IStrategoTerm u_703, IStrategoTerm v_703)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("build_alternative_body_0_6");
      Fail268:
      { 
        IStrategoTerm term228 = term;
        Success215:
        { 
          Fail269:
          { 
            TermReference z_208 = new TermReference();
            IStrategoTerm a_209 = null;
            TermReference e_209 = new TermReference();
            IStrategoTerm f_209 = null;
            IStrategoTerm g_209 = null;
            IStrategoTerm h_209 = null;
            IStrategoTerm i_209 = null;
            IStrategoTerm o_209 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail269;
            IStrategoTerm arg97 = term.getSubterm(0);
            if(arg97.getTermType() != IStrategoTerm.TUPLE || arg97.getSubtermCount() != 2)
              break Fail269;
            g_209 = arg97.getSubterm(0);
            if(arg97.getSubterm(1) != q_703 && !q_703.match(arg97.getSubterm(1)))
              break Fail269;
            f_209 = term.getSubterm(1);
            o_209 = term;
            IStrategoTerm term229 = term;
            Success216:
            { 
              Fail270:
              { 
                term = g_209;
                lifted204 lifted2040 = new lifted204();
                lifted2040.z_208 = z_208;
                term = oncetd_1_0.instance.invoke(context, term, lifted2040);
                if(term == null)
                  break Fail270;
                term = t_703;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail270;
                if(z_208.value == null)
                  z_208.value = ((IStrategoList)term).head();
                else
                  if(z_208.value != ((IStrategoList)term).head() && !z_208.value.match(((IStrategoList)term).head()))
                    break Fail270;
                if(e_209.value == null)
                  e_209.value = ((IStrategoList)term).tail();
                else
                  if(e_209.value != ((IStrategoList)term).tail() && !e_209.value.match(((IStrategoList)term).tail()))
                    break Fail270;
                term = bagof_$Define$Parent$Sorts_0_0.instance.invoke(context, u_703);
                if(term == null)
                  break Fail270;
                lifted211 lifted2110 = new lifted211();
                lifted2110.z_208 = z_208;
                lifted2110.e_209 = e_209;
                term = filter_1_0.instance.invoke(context, term, lifted2110);
                if(term == null)
                  break Fail270;
                a_209 = term;
                IStrategoTerm term230 = term;
                Success217:
                { 
                  Fail271:
                  { 
                    IStrategoTerm j_209 = null;
                    j_209 = term;
                    term = a_209;
                    if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                      break Fail271;
                    term = j_209;
                    { 
                      term = debug_1_0.instance.invoke(context, g_209, lifted213.instance);
                      if(term == null)
                        break Fail270;
                      if(z_208.value == null)
                        break Fail270;
                      term = debug_1_0.instance.invoke(context, z_208.value, lifted214.instance);
                      if(term == null)
                        break Fail270;
                      term = debug_1_0.instance.invoke(context, t_703, lifted215.instance);
                      if(term == null)
                        break Fail270;
                      if(true)
                        break Success217;
                    }
                  }
                  term = term230;
                }
                term = randomly_pick_from_list_0_0.instance.invoke(context, a_209);
                if(term == null)
                  break Fail270;
                term = build_alternative_0_2.instance.invoke(context, term, v_703, e_209.value);
                if(term == null)
                  break Fail270;
                h_209 = term;
                Success218:
                { 
                  Fail272:
                  { 
                    IStrategoTerm k_209 = null;
                    k_209 = term;
                    term = oncetd_1_0.instance.invoke(context, g_209, is_injectable_sort_0_0.instance);
                    if(term == null)
                      break Fail272;
                    term = k_209;
                    { 
                      Success219:
                      { 
                        Fail273:
                        { 
                          IStrategoTerm l_209 = null;
                          l_209 = term;
                          term = next_random_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail273;
                          term = abs_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail273;
                          term = termFactory.makeTuple(term, random_test.const108);
                          term = mod_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail273;
                          term = termFactory.makeTuple(term, random_test.const164);
                          term = gt_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail273;
                          term = l_209;
                          { 
                            IStrategoTerm v_209 = null;
                            IStrategoTerm w_209 = null;
                            IStrategoTerm x_209 = null;
                            IStrategoTerm z_209 = null;
                            IStrategoTerm a_210 = null;
                            IStrategoTerm b_210 = null;
                            IStrategoTerm c_210 = null;
                            IStrategoTerm d_210 = null;
                            IStrategoTerm f_210 = null;
                            z_209 = g_209;
                            v_209 = random_test.constNil0;
                            a_210 = z_209;
                            w_209 = random_test.const58;
                            b_210 = a_210;
                            x_209 = random_test.const58;
                            term = b_210;
                            c_210 = b_210;
                            f_210 = term;
                            term = $Max$Count_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail270;
                            d_210 = term;
                            term = f_210;
                            term = $Cons$Count_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail270;
                            term = termFactory.makeTuple(d_210, term);
                            term = subti_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail270;
                            term = write_rule_0_5.instance.invoke(context, c_210, v_209, w_209, x_209, term, f_209);
                            if(term == null)
                              break Fail270;
                            term = termFactory.makeTuple((IStrategoTerm)termFactory.makeListCons(h_209, (IStrategoList)random_test.constNil0), term);
                            term = conc_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail270;
                            i_209 = term;
                            if(true)
                              break Success219;
                          }
                        }
                        term = (IStrategoTerm)termFactory.makeListCons(h_209, (IStrategoList)random_test.constNil0);
                        i_209 = term;
                      }
                      if(true)
                        break Success218;
                    }
                  }
                  term = h_209;
                  i_209 = h_209;
                }
                if(true)
                  break Success216;
              }
              term = term229;
              IStrategoTerm m_209 = null;
              IStrategoTerm n_209 = null;
              IStrategoTerm i_210 = null;
              m_209 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail269;
              n_209 = term;
              i_210 = m_209;
              term = report_with_failure_0_2.instance.invoke(context, i_210, random_test.const165, n_209);
              if(term == null)
                break Fail269;
            }
            term = o_209;
            if(i_209 == null)
              break Fail269;
            term = i_209;
            if(true)
              break Success215;
          }
          term = term228;
          IStrategoTerm u_207 = null;
          IStrategoTerm w_207 = null;
          IStrategoTerm x_207 = null;
          IStrategoTerm y_207 = null;
          IStrategoTerm b_208 = null;
          IStrategoTerm c_208 = null;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail268;
          IStrategoTerm arg101 = term.getSubterm(0);
          if(arg101.getTermType() != IStrategoTerm.TUPLE || arg101.getSubtermCount() != 2)
            break Fail268;
          x_207 = arg101.getSubterm(0);
          u_207 = arg101.getSubterm(1);
          w_207 = term.getSubterm(1);
          b_208 = term;
          IStrategoTerm term233 = term;
          Success220:
          { 
            Fail274:
            { 
              term = q_703;
              if(term != u_207 && !u_207.match(term))
                break Fail274;
              { 
                if(true)
                  break Fail268;
                if(true)
                  break Success220;
              }
            }
            term = term233;
          }
          term = b_208;
          c_208 = b_208;
          IStrategoTerm term234 = term;
          Success221:
          { 
            Fail275:
            { 
              IStrategoTerm d_208 = null;
              IStrategoTerm e_208 = null;
              IStrategoTerm f_208 = null;
              IStrategoTerm h_208 = null;
              IStrategoTerm i_208 = null;
              IStrategoTerm j_208 = null;
              IStrategoTerm k_208 = null;
              IStrategoTerm l_208 = null;
              IStrategoTerm n_208 = null;
              h_208 = x_207;
              d_208 = random_test.constNil0;
              i_208 = h_208;
              e_208 = random_test.const58;
              j_208 = i_208;
              f_208 = random_test.const58;
              term = j_208;
              k_208 = j_208;
              n_208 = term;
              term = $Max$Count_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail275;
              l_208 = term;
              term = n_208;
              term = $Cons$Count_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail275;
              term = termFactory.makeTuple(l_208, term);
              term = subti_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail275;
              term = write_rule_0_5.instance.invoke(context, k_208, d_208, e_208, f_208, term, w_207);
              if(term == null)
                break Fail275;
              y_207 = term;
              if(true)
                break Success221;
            }
            term = term234;
            IStrategoTerm z_207 = null;
            IStrategoTerm a_208 = null;
            IStrategoTerm q_208 = null;
            z_207 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail268;
            a_208 = term;
            q_208 = z_207;
            term = report_with_failure_0_2.instance.invoke(context, q_208, random_test.const165, a_208);
            if(term == null)
              break Fail268;
          }
          term = c_208;
          if(y_207 == null)
            break Fail268;
          term = y_207;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }

    @Override public IStrategoTerm invokeDynamic(Context context, IStrategoTerm term, Strategy[] sargs, IStrategoTerm[] targs)
    { 
      if(sargs == null || targs == null || sargs.length != 0 || targs.length != 6)
        throw new IllegalArgumentException("Illegal arguments for " + getName());
      return invoke(context, term, targs[0], targs[1], targs[2], targs[3], targs[4], targs[5]);
    }
  }

  @SuppressWarnings("all") public static class randomly_pick_alternative_0_1 extends Strategy 
  { 
    public static randomly_pick_alternative_0_1 instance = new randomly_pick_alternative_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_j_210)
    { 
      TermReference j_210 = new TermReference(ref_j_210);
      context.push("randomly_pick_alternative_0_1");
      Fail276:
      { 
        IStrategoTerm k_210 = null;
        IStrategoTerm l_210 = null;
        TermReference m_210 = new TermReference();
        IStrategoTerm n_210 = null;
        IStrategoTerm cons21 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(m_210.value == null)
          m_210.value = cons21;
        else
          if(m_210.value != cons21 && !m_210.value.match(cons21))
            break Fail276;
        IStrategoTerm args20 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        k_210 = args20;
        term = debug_1_0.instance.invoke(context, term, lifted217.instance);
        if(term == null)
          break Fail276;
        term = number$Items_0_0.instance.invoke(context, k_210);
        if(term == null)
          break Fail276;
        l_210 = term;
        term = debug_1_0.instance.invoke(context, term, lifted218.instance);
        if(term == null)
          break Fail276;
        term = l_210;
        lifted219 lifted2190 = new lifted219();
        lifted2190.m_210 = m_210;
        lifted2190.j_210 = j_210;
        term = filter_1_0.instance.invoke(context, term, lifted2190);
        if(term == null)
          break Fail276;
        term = concat_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail276;
        n_210 = term;
        term = debug_1_0.instance.invoke(context, term, lifted224.instance);
        if(term == null)
          break Fail276;
        if(j_210.value == null)
          break Fail276;
        term = debug_1_0.instance.invoke(context, j_210.value, lifted225.instance);
        if(term == null)
          break Fail276;
        if(m_210.value == null)
          break Fail276;
        term = debug_1_0.instance.invoke(context, m_210.value, lifted226.instance);
        if(term == null)
          break Fail276;
        term = randomly_pick_from_list_0_0.instance.invoke(context, n_210);
        if(term == null)
          break Fail276;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_injections_per_iter_0_3 extends Strategy 
  { 
    public static get_injections_per_iter_0_3 instance = new get_injections_per_iter_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm w_703, IStrategoTerm ref_x_703, IStrategoTerm y_703)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference x_703 = new TermReference(ref_x_703);
      context.push("get_injections_per_iter_0_3");
      Fail277:
      { 
        IStrategoTerm term235 = term;
        Success222:
        { 
          Fail278:
          { 
            IStrategoTerm u_211 = null;
            IStrategoTerm v_211 = null;
            IStrategoTerm w_211 = null;
            IStrategoTerm x_211 = null;
            IStrategoTerm y_211 = null;
            IStrategoTerm z_211 = null;
            IStrategoTerm d_212 = null;
            IStrategoTerm e_212 = null;
            IStrategoTerm f_212 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail278;
            u_211 = term.getSubterm(0);
            v_211 = term.getSubterm(1);
            d_212 = term;
            term = is_list_0_0.instance.invoke(context, u_211);
            if(term == null)
              break Fail278;
            e_212 = d_212;
            term = termFactory.makeTuple(w_703, v_211);
            term = is_itersort_in_$S$D$F_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail278;
            w_211 = term;
            term = e_212;
            f_212 = e_212;
            IStrategoTerm term236 = term;
            Success223:
            { 
              Fail279:
              { 
                term = termFactory.makeTuple(y_703, (IStrategoTerm)termFactory.makeListCons(termFactory.makeAppl(random_test._consInjectGoTo_1, new IStrategoTerm[]{v_211}), (IStrategoList)random_test.constNil0));
                term = conc_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail279;
                y_211 = term;
                term = is_injectable_sort_for_0_3.instance.invoke(context, w_211, x_703.value, w_703, v_211);
                if(term == null)
                  break Fail279;
                x_211 = term;
                Success224:
                { 
                  Fail280:
                  { 
                    IStrategoTerm a_212 = null;
                    a_212 = term;
                    term = x_211;
                    if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                      break Fail280;
                    term = a_212;
                    { 
                      term = random_test.constNil0;
                      z_211 = random_test.constNil0;
                      if(true)
                        break Success224;
                    }
                  }
                  term = randomly_pick_from_list_0_0.instance.invoke(context, x_211);
                  if(term == null)
                    break Fail279;
                  term = (IStrategoTerm)termFactory.makeListCons(termFactory.makeTuple(term, y_211), (IStrategoList)random_test.constNil0);
                  z_211 = term;
                }
                if(true)
                  break Success223;
              }
              term = term236;
              IStrategoTerm b_212 = null;
              IStrategoTerm c_212 = null;
              IStrategoTerm l_212 = null;
              b_212 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail278;
              c_212 = term;
              l_212 = b_212;
              term = report_with_failure_0_2.instance.invoke(context, l_212, random_test.const171, c_212);
              if(term == null)
                break Fail278;
            }
            term = f_212;
            if(z_211 == null)
              break Fail278;
            term = z_211;
            if(true)
              break Success222;
          }
          term = term235;
          IStrategoTerm v_210 = null;
          IStrategoTerm x_210 = null;
          IStrategoTerm y_210 = null;
          TermReference z_210 = new TermReference();
          TermReference a_211 = new TermReference();
          IStrategoTerm c_211 = null;
          IStrategoTerm h_211 = null;
          IStrategoTerm i_211 = null;
          IStrategoTerm j_211 = null;
          IStrategoTerm k_211 = null;
          IStrategoTerm l_211 = null;
          IStrategoTerm m_211 = null;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail277;
          v_210 = term.getSubterm(0);
          x_210 = term.getSubterm(1);
          h_211 = term;
          term = write_to_string_0_0.instance.invoke(context, v_210);
          if(term == null)
            break Fail277;
          term = debug_1_0.instance.invoke(context, term, lifted227.instance);
          if(term == null)
            break Fail277;
          term = h_211;
          i_211 = h_211;
          IStrategoTerm term238 = term;
          Success225:
          { 
            Fail281:
            { 
              term = is_string_0_0.instance.invoke(context, v_210);
              if(term == null)
                break Fail281;
              { 
                if(true)
                  break Fail277;
                if(true)
                  break Success225;
              }
            }
            term = term238;
          }
          IStrategoTerm term239 = term;
          Success226:
          { 
            Fail282:
            { 
              term = is_list_0_0.instance.invoke(context, v_210);
              if(term == null)
                break Fail282;
              { 
                if(true)
                  break Fail277;
                if(true)
                  break Success226;
              }
            }
            term = term239;
          }
          IStrategoTerm term240 = term;
          Success227:
          { 
            Fail283:
            { 
              term = is_tuple_0_0.instance.invoke(context, v_210);
              if(term == null)
                break Fail283;
              { 
                if(true)
                  break Fail277;
                if(true)
                  break Success227;
              }
            }
            term = term240;
          }
          term = i_211;
          j_211 = i_211;
          IStrategoTerm term241 = term;
          Success228:
          { 
            Fail284:
            { 
              term = term_scopes_namespace_0_1.instance.invoke(context, v_210, x_703.value);
              if(term == null)
                break Fail284;
              { 
                if(true)
                  break Fail277;
                if(true)
                  break Success228;
              }
            }
            term = term241;
          }
          k_211 = j_211;
          term = v_210;
          IStrategoTerm cons22 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
          if(z_210.value == null)
            z_210.value = cons22;
          else
            if(z_210.value != cons22 && !z_210.value.match(cons22))
              break Fail277;
          IStrategoTerm args21 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
          y_210 = args21;
          term = k_211;
          l_211 = k_211;
          IStrategoTerm term242 = term;
          Success229:
          { 
            Fail285:
            { 
              IStrategoTerm d_211 = null;
              d_211 = term;
              if(z_210.value == null)
                break Fail285;
              term = z_210.value;
              if(term.getTermType() != IStrategoTerm.STRING || !"InitAction".equals(((IStrategoString)term).stringValue()))
                break Fail285;
              term = d_211;
              { 
                if(x_703.value == null)
                  break Fail277;
                term = termFactory.makeTuple(v_210, x_703.value, y_703);
                term = debug_1_0.instance.invoke(context, term, lifted228.instance);
                if(term == null)
                  break Fail277;
                if(true)
                  break Success229;
              }
            }
            term = term242;
          }
          term = l_211;
          m_211 = l_211;
          IStrategoTerm term243 = term;
          Success230:
          { 
            Fail286:
            { 
              Success231:
              { 
                Fail287:
                { 
                  IStrategoTerm e_211 = null;
                  e_211 = term;
                  term = termFactory.makeTuple(x_210, random_test.const58);
                  term = geq_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail287;
                  term = e_211;
                  { 
                    term = termFactory.makeTuple(y_703, (IStrategoTerm)termFactory.makeListCons(termFactory.makeAppl(random_test._consInjectGoTo_1, new IStrategoTerm[]{x_210}), (IStrategoList)random_test.constNil0));
                    term = conc_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail286;
                    if(a_211.value == null)
                      a_211.value = term;
                    else
                      if(a_211.value != term && !a_211.value.match(term))
                        break Fail286;
                    if(true)
                      break Success231;
                  }
                }
                term = y_703;
                if(a_211.value == null)
                  a_211.value = term;
                else
                  if(a_211.value != term && !a_211.value.match(term))
                    break Fail286;
              }
              term = number$Items_0_0.instance.invoke(context, y_210);
              if(term == null)
                break Fail286;
              lifted229 lifted2290 = new lifted229();
              lifted2290.z_210 = z_210;
              lifted2290.x_703 = x_703;
              lifted2290.a_211 = a_211;
              term = filter_1_0.instance.invoke(context, term, lifted2290);
              if(term == null)
                break Fail286;
              term = concat_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail286;
              c_211 = term;
              if(true)
                break Success230;
            }
            term = term243;
            IStrategoTerm f_211 = null;
            IStrategoTerm g_211 = null;
            IStrategoTerm o_211 = null;
            f_211 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail277;
            g_211 = term;
            o_211 = f_211;
            term = report_with_failure_0_2.instance.invoke(context, o_211, random_test.const171, g_211);
            if(term == null)
              break Fail277;
          }
          term = m_211;
          if(c_211 == null)
            break Fail277;
          term = c_211;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_injectable_sort_for_0_3 extends Strategy 
  { 
    public static is_injectable_sort_for_0_3 instance = new is_injectable_sort_for_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_m_213, IStrategoTerm ref_n_213, IStrategoTerm ref_o_213)
    { 
      TermReference m_213 = new TermReference(ref_m_213);
      TermReference n_213 = new TermReference(ref_n_213);
      TermReference o_213 = new TermReference(ref_o_213);
      context.push("is_injectable_sort_for_0_3");
      Fail288:
      { 
        TermReference q_213 = new TermReference();
        if(q_213.value == null)
          q_213.value = term;
        else
          if(q_213.value != term && !q_213.value.match(term))
            break Fail288;
        if(m_213.value == null)
          break Fail288;
        term = bagof_$N$B$L$Namespace2$Def$Key_0_0.instance.invoke(context, m_213.value);
        if(term == null)
          break Fail288;
        lifted230 lifted2300 = new lifted230();
        lifted2300.m_213 = m_213;
        term = filter_1_0.instance.invoke(context, term, lifted2300);
        if(term == null)
          break Fail288;
        lifted231 lifted2311 = new lifted231();
        lifted2311.q_213 = q_213;
        lifted2311.n_213 = n_213;
        lifted2311.o_213 = o_213;
        term = filter_1_0.instance.invoke(context, term, lifted2311);
        if(term == null)
          break Fail288;
        term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
        if(term == null)
          break Fail288;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class check_if_parent_sorts_coincede_0_3 extends Strategy 
  { 
    public static check_if_parent_sorts_coincede_0_3 instance = new check_if_parent_sorts_coincede_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_t_213, IStrategoTerm u_213, IStrategoTerm v_213)
    { 
      TermReference t_213 = new TermReference(ref_t_213);
      context.push("check_if_parent_sorts_coincede_0_3");
      Fail289:
      { 
        IStrategoTerm y_213 = null;
        y_213 = term;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail289;
        term = bagof_$Define$Parent$Sorts_0_0.instance.invoke(context, y_213);
        if(term == null)
          break Fail289;
        lifted233 lifted2330 = new lifted233();
        lifted2330.t_213 = t_213;
        term = filter_1_0.instance.invoke(context, term, lifted2330);
        if(term == null)
          break Fail289;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_itersort_in_$S$D$F_0_0 extends Strategy 
  { 
    public static is_itersort_in_$S$D$F_0_0 instance = new is_itersort_in_$S$D$F_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("is_itersort_in_SDF_0_0");
      Fail290:
      { 
        IStrategoTerm c_214 = null;
        IStrategoTerm d_214 = null;
        TermReference f_214 = new TermReference();
        IStrategoTerm g_214 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail290;
        c_214 = term.getSubterm(0);
        if(f_214.value == null)
          f_214.value = term.getSubterm(1);
        else
          if(f_214.value != term.getSubterm(1) && !f_214.value.match(term.getSubterm(1)))
            break Fail290;
        term = $Cons$C$F_0_0.instance.invoke(context, c_214);
        if(term == null)
          break Fail290;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail290;
        d_214 = term.getSubterm(1);
        term = filter_prods_0_0.instance.invoke(context, d_214);
        if(term == null)
          break Fail290;
        term = number$Items_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail290;
        lifted235 lifted2350 = new lifted235();
        lifted2350.f_214 = f_214;
        term = filter_1_0.instance.invoke(context, term, lifted2350);
        if(term == null)
          break Fail290;
        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
          break Fail290;
        IStrategoTerm arg108 = ((IStrategoList)term).head();
        if(arg108.getTermType() != IStrategoTerm.TUPLE || arg108.getSubtermCount() != 2)
          break Fail290;
        g_214 = arg108.getSubterm(0);
        term = is_or_leads_to_injectable_sort_0_0.instance.invoke(context, g_214);
        if(term == null)
          break Fail290;
        term = recognize_sort_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail290;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $S$D$F_sort_0_0 extends Strategy 
  { 
    public static $S$D$F_sort_0_0 instance = new $S$D$F_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("SDF_sort_0_0");
      Fail291:
      { 
        IStrategoTerm l_214 = null;
        TermReference n_214 = new TermReference();
        TermReference o_214 = new TermReference();
        IStrategoTerm p_214 = null;
        IStrategoTerm q_214 = null;
        IStrategoTerm u_214 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail291;
        l_214 = term.getSubterm(0);
        if(n_214.value == null)
          n_214.value = term.getSubterm(1);
        else
          if(n_214.value != term.getSubterm(1) && !n_214.value.match(term.getSubterm(1)))
            break Fail291;
        if(o_214.value == null)
          o_214.value = term.getSubterm(2);
        else
          if(o_214.value != term.getSubterm(2) && !o_214.value.match(term.getSubterm(2)))
            break Fail291;
        u_214 = term;
        IStrategoTerm term246 = term;
        Success232:
        { 
          Fail292:
          { 
            term = bagof_$Cons$C$F_0_0.instance.invoke(context, l_214);
            if(term == null)
              break Fail292;
            lifted244 lifted2440 = new lifted244();
            lifted2440.n_214 = n_214;
            term = filter_1_0.instance.invoke(context, term, lifted2440);
            if(term == null)
              break Fail292;
            term = randomly_pick_from_list_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail292;
            term = number$Items_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail292;
            lifted248 lifted2480 = new lifted248();
            lifted2480.o_214 = o_214;
            term = filter_1_0.instance.invoke(context, term, lifted2480);
            if(term == null)
              break Fail292;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail292;
            IStrategoTerm arg113 = ((IStrategoList)term).head();
            if(arg113.getTermType() != IStrategoTerm.TUPLE || arg113.getSubtermCount() != 2)
              break Fail292;
            p_214 = arg113.getSubterm(0);
            IStrategoTerm arg115 = ((IStrategoList)term).tail();
            if(arg115.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg115).isEmpty())
              break Fail292;
            term = debug_1_0.instance.invoke(context, term, lifted257.instance);
            if(term == null)
              break Fail292;
            term = oncetd_1_0.instance.invoke(context, p_214, recognize_sort_0_0.instance);
            if(term == null)
              break Fail292;
            q_214 = term;
            if(true)
              break Success232;
          }
          term = term246;
          IStrategoTerm s_214 = null;
          IStrategoTerm t_214 = null;
          IStrategoTerm z_214 = null;
          s_214 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail291;
          t_214 = term;
          z_214 = s_214;
          term = report_with_failure_0_2.instance.invoke(context, z_214, random_test.const175, t_214);
          if(term == null)
            break Fail291;
        }
        term = u_214;
        if(q_214 == null)
          break Fail291;
        term = q_214;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_or_leads_to_injectable_sort_0_0 extends Strategy 
  { 
    public static is_or_leads_to_injectable_sort_0_0 instance = new is_or_leads_to_injectable_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("is_or_leads_to_injectable_sort_0_0");
      Fail293:
      { 
        IStrategoTerm term247 = term;
        Success233:
        { 
          Fail294:
          { 
            term = is_injectable_sort_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail294;
            if(true)
              break Success233;
          }
          term = has_productions_with_no_constructors_0_0.instance.invoke(context, term247);
          if(term == null)
            break Fail293;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class has_productions_with_no_constructors_0_0 extends Strategy 
  { 
    public static has_productions_with_no_constructors_0_0 instance = new has_productions_with_no_constructors_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("has_productions_with_no_constructors_0_0");
      Fail295:
      { 
        IStrategoTerm term248 = term;
        Success234:
        { 
          Fail296:
          { 
            TermReference g_215 = new TermReference();
            IStrategoTerm term249 = term;
            Success235:
            { 
              Fail297:
              { 
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consalt_2 != ((IStrategoAppl)term).getConstructor())
                  break Fail297;
                { 
                  if(true)
                    break Fail296;
                  if(true)
                    break Success235;
                }
              }
              term = term249;
            }
            term = recognize_sort_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail296;
            if(g_215.value == null)
              g_215.value = term;
            else
              if(g_215.value != term && !g_215.value.match(term))
                break Fail296;
            if(g_215.value == null)
              break Fail296;
            term = bagof_$C$F$Sorts_0_0.instance.invoke(context, g_215.value);
            if(term == null)
              break Fail296;
            lifted303 lifted3030 = new lifted303();
            lifted3030.g_215 = g_215;
            term = filter_1_0.instance.invoke(context, term, lifted3030);
            if(term == null)
              break Fail296;
            IStrategoTerm term251 = term;
            Success236:
            { 
              Fail298:
              { 
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail298;
                { 
                  if(true)
                    break Fail296;
                  if(true)
                    break Success236;
                }
              }
              term = term251;
            }
            term = filter_1_0.instance.invoke(context, term, lifted305.instance);
            if(term == null)
              break Fail296;
            IStrategoTerm term253 = term;
            Success237:
            { 
              Fail299:
              { 
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail299;
                { 
                  if(true)
                    break Fail296;
                  if(true)
                    break Success237;
                }
              }
              term = term253;
            }
            term = $Hd_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail296;
            if(true)
              break Success234;
          }
          term = term248;
          TermReference a_215 = new TermReference();
          IStrategoTerm term254 = term;
          Success238:
          { 
            Fail300:
            { 
              if(term.getTermType() != IStrategoTerm.APPL || random_test._consalt_2 != ((IStrategoAppl)term).getConstructor())
                break Fail300;
              { 
                if(true)
                  break Fail295;
                if(true)
                  break Success238;
              }
            }
            term = term254;
          }
          term = recognize_sort_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail295;
          if(a_215.value == null)
            a_215.value = term;
          else
            if(a_215.value != term && !a_215.value.match(term))
              break Fail295;
          if(a_215.value == null)
            break Fail295;
          term = bagof_$C$F$Sorts_0_0.instance.invoke(context, a_215.value);
          if(term == null)
            break Fail295;
          lifted306 lifted3060 = new lifted306();
          lifted3060.a_215 = a_215;
          term = filter_1_0.instance.invoke(context, term, lifted3060);
          if(term == null)
            break Fail295;
          IStrategoTerm term256 = term;
          Success239:
          { 
            Fail301:
            { 
              if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                break Fail301;
              { 
                if(true)
                  break Fail295;
                if(true)
                  break Success239;
              }
            }
            term = term256;
          }
          term = filter_1_0.instance.invoke(context, term, lifted310.instance);
          if(term == null)
            break Fail295;
          IStrategoTerm term258 = term;
          Success240:
          { 
            Fail302:
            { 
              if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                break Fail302;
              { 
                if(true)
                  break Fail295;
                if(true)
                  break Success240;
              }
            }
            term = term258;
          }
          term = $Hd_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail295;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_injectable_sort_0_0 extends Strategy 
  { 
    public static is_injectable_sort_0_0 instance = new is_injectable_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("is_injectable_sort_0_0");
      Fail303:
      { 
        IStrategoTerm term259 = term;
        IStrategoConstructor cons42 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success241:
        { 
          if(cons42 == random_test._consopt_1)
          { 
            Fail304:
            { 
              IStrategoTerm r_215 = null;
              r_215 = term.getSubterm(0);
              term = this.invoke(context, r_215);
              if(term == null)
                break Fail304;
              if(true)
                break Success241;
            }
            term = term259;
          }
          Success242:
          { 
            if(cons42 == random_test._consiter_1)
            { 
              Fail305:
              { 
                IStrategoTerm q_215 = null;
                q_215 = term.getSubterm(0);
                term = q_215;
                if(true)
                  break Success242;
              }
              term = term259;
            }
            Success243:
            { 
              if(cons42 == random_test._consiter_sep_2)
              { 
                Fail306:
                { 
                  IStrategoTerm o_215 = null;
                  o_215 = term.getSubterm(0);
                  term = o_215;
                  if(true)
                    break Success243;
                }
                term = term259;
              }
              Success244:
              { 
                if(cons42 == random_test._consiter_star_1)
                { 
                  Fail307:
                  { 
                    IStrategoTerm n_215 = null;
                    n_215 = term.getSubterm(0);
                    term = n_215;
                    if(true)
                      break Success244;
                  }
                  term = term259;
                }
                if(cons42 == random_test._consiter_star_sep_2)
                { 
                  IStrategoTerm m_215 = null;
                  m_215 = term.getSubterm(0);
                  term = m_215;
                }
                else
                { 
                  break Fail303;
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class term_scopes_namespace_0_1 extends Strategy 
  { 
    public static term_scopes_namespace_0_1 instance = new term_scopes_namespace_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_v_215)
    { 
      TermReference v_215 = new TermReference(ref_v_215);
      context.push("term_scopes_namespace_0_1");
      Fail308:
      { 
        term = create_key_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail308;
        term = $N$B$L$Key2$Scope_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail308;
        lifted313 lifted3130 = new lifted313();
        lifted3130.v_215 = v_215;
        term = oncetd_1_0.instance.invoke(context, term, lifted3130);
        if(term == null)
          break Fail308;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class match_error_and_fix_0_2 extends Strategy 
  { 
    public static match_error_and_fix_0_2 instance = new match_error_and_fix_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm b_704, IStrategoTerm c_704)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("match_error_and_fix_0_2");
      Fail309:
      { 
        IStrategoTerm term263 = term;
        Success245:
        { 
          Fail310:
          { 
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail310;
            term = debug_0_0.instance.invoke(context, random_test.const176);
            if(term == null)
              break Fail310;
            term = b_704;
            if(true)
              break Success245;
          }
          term = term263;
          IStrategoTerm v_216 = null;
          IStrategoTerm z_216 = null;
          IStrategoTerm a_217 = null;
          IStrategoTerm e_217 = null;
          IStrategoTerm f_217 = null;
          IStrategoTerm i_217 = null;
          IStrategoTerm j_217 = null;
          IStrategoTerm n_217 = null;
          IStrategoTerm u_217 = null;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail309;
          a_217 = ((IStrategoList)term).head();
          j_217 = ((IStrategoList)term).tail();
          u_217 = term;
          IStrategoTerm term264 = term;
          Success246:
          { 
            Fail311:
            { 
              Success247:
              { 
                Fail312:
                { 
                  IStrategoTerm o_217 = null;
                  o_217 = term;
                  term = match_error_0_0.instance.invoke(context, a_217);
                  if(term == null)
                    break Fail312;
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail312;
                  v_216 = term.getSubterm(0);
                  z_216 = term.getSubterm(1);
                  term = o_217;
                  { 
                    term = termFactory.makeTuple(v_216, z_216);
                    term = fix_0_3.instance.invoke(context, term, b_704, a_217, c_704);
                    if(term == null)
                      break Fail311;
                    i_217 = term;
                    if(true)
                      break Success247;
                  }
                }
                i_217 = b_704;
                term = a_217;
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail311;
                f_217 = term.getSubterm(0);
                e_217 = term.getSubterm(1);
                term = write_to_string_0_0.instance.invoke(context, f_217);
                if(term == null)
                  break Fail311;
                term = (IStrategoTerm)termFactory.makeListCons(random_test.const179, termFactory.makeListCons(e_217, termFactory.makeListCons(random_test.const178, termFactory.makeListCons(random_test.const177, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0)))));
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail311;
                term = debug_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail311;
              }
              term = this.invoke(context, j_217, i_217, c_704);
              if(term == null)
                break Fail311;
              n_217 = term;
              if(true)
                break Success246;
            }
            term = term264;
            IStrategoTerm s_217 = null;
            IStrategoTerm t_217 = null;
            IStrategoTerm e_218 = null;
            s_217 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail309;
            t_217 = term;
            e_218 = s_217;
            term = report_with_failure_0_2.instance.invoke(context, e_218, random_test.const180, t_217);
            if(term == null)
              break Fail309;
          }
          term = u_217;
          if(n_217 == null)
            break Fail309;
          term = n_217;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class fix_0_3 extends Strategy 
  { 
    public static fix_0_3 instance = new fix_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm d_704, IStrategoTerm e_704, IStrategoTerm f_704)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("fix_0_3");
      Fail313:
      { 
        IStrategoTerm term266 = term;
        Success248:
        { 
          Fail314:
          { 
            IStrategoTerm r_219 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail314;
            r_219 = term.getSubterm(0);
            IStrategoTerm arg124 = term.getSubterm(1);
            if(arg124.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg124).isEmpty())
              break Fail314;
            term = (IStrategoTerm)termFactory.makeListCons(random_test.const182, termFactory.makeListCons(r_219, (IStrategoList)random_test.constCons44));
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail314;
            term = debug_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail314;
            term = d_704;
            if(true)
              break Success248;
          }
          term = term266;
          IStrategoTerm u_218 = null;
          IStrategoTerm x_218 = null;
          IStrategoTerm y_218 = null;
          IStrategoTerm b_219 = null;
          IStrategoTerm g_219 = null;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail313;
          x_218 = term.getSubterm(0);
          IStrategoTerm arg125 = term.getSubterm(1);
          if(arg125.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg125).isEmpty())
            break Fail313;
          u_218 = ((IStrategoList)arg125).head();
          y_218 = ((IStrategoList)arg125).tail();
          g_219 = term;
          IStrategoTerm term267 = term;
          Success249:
          { 
            Fail315:
            { 
              Success250:
              { 
                Fail316:
                { 
                  IStrategoTerm c_219 = null;
                  c_219 = term;
                  term = termFactory.makeTuple(x_218, u_218);
                  term = fix$Each_0_3.instance.invoke(context, term, d_704, e_704, f_704);
                  if(term == null)
                    break Fail316;
                  b_219 = term;
                  term = c_219;
                  { 
                    term = write_to_string_0_0.instance.invoke(context, e_704);
                    if(term == null)
                      break Fail315;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const184, termFactory.makeListCons(term, termFactory.makeListCons(random_test.const183, termFactory.makeListCons(x_218, (IStrategoList)random_test.constNil0))));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail315;
                    term = debug_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail315;
                    if(true)
                      break Success250;
                  }
                }
                term = termFactory.makeTuple(x_218, y_218);
                term = this.invoke(context, term, d_704, e_704, f_704);
                if(term == null)
                  break Fail315;
                b_219 = term;
              }
              if(true)
                break Success249;
            }
            term = term267;
            IStrategoTerm e_219 = null;
            IStrategoTerm f_219 = null;
            IStrategoTerm n_219 = null;
            e_219 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail313;
            f_219 = term;
            n_219 = e_219;
            term = report_with_failure_0_2.instance.invoke(context, n_219, random_test.const185, f_219);
            if(term == null)
              break Fail313;
          }
          term = g_219;
          if(b_219 == null)
            break Fail313;
          term = b_219;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class fix$Each_0_3 extends Strategy 
  { 
    public static fix$Each_0_3 instance = new fix$Each_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm g_704, IStrategoTerm h_704, IStrategoTerm i_704)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("fixEach_0_3");
      Fail317:
      { 
        IStrategoTerm term269 = term;
        Success251:
        { 
          Fail318:
          { 
            IStrategoTerm p_222 = null;
            IStrategoTerm q_222 = null;
            IStrategoTerm t_222 = null;
            IStrategoTerm u_222 = null;
            IStrategoTerm x_222 = null;
            IStrategoTerm term270 = term;
            Success252:
            { 
              Fail319:
              { 
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail319;
                u_222 = term.getSubterm(0);
                IStrategoTerm arg126 = term.getSubterm(1);
                q_222 = arg126;
                if(arg126.getTermType() != IStrategoTerm.APPL || random_test._consAddCorrection_3 != ((IStrategoAppl)arg126).getConstructor())
                  break Fail319;
                IStrategoTerm arg127 = arg126.getSubterm(0);
                if(arg127.getTermType() != IStrategoTerm.APPL || random_test._consInsertOnce_0 != ((IStrategoAppl)arg127).getConstructor())
                  break Fail319;
                p_222 = arg126.getSubterm(1);
                t_222 = arg126.getSubterm(2);
                if(true)
                  break Success252;
              }
              term = term270;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail318;
              u_222 = term.getSubterm(0);
              IStrategoTerm arg128 = term.getSubterm(1);
              q_222 = arg128;
              if(arg128.getTermType() != IStrategoTerm.APPL || random_test._consAddCorrectionFirst_3 != ((IStrategoAppl)arg128).getConstructor())
                break Fail318;
              IStrategoTerm arg129 = arg128.getSubterm(0);
              if(arg129.getTermType() != IStrategoTerm.APPL || random_test._consInsertOnce_0 != ((IStrategoAppl)arg129).getConstructor())
                break Fail318;
              p_222 = arg128.getSubterm(1);
              t_222 = arg128.getSubterm(2);
            }
            term = write_to_string_0_0.instance.invoke(context, h_704);
            if(term == null)
              break Fail318;
            term = debug_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail318;
            Success253:
            { 
              Fail320:
              { 
                IStrategoTerm z_222 = null;
                z_222 = term;
                IStrategoTerm term272 = term;
                Success254:
                { 
                  Fail321:
                  { 
                    term = iset_contains_0_1.instance.invoke(context, i_704, u_222);
                    if(term == null)
                      break Fail321;
                    { 
                      if(true)
                        break Fail320;
                      if(true)
                        break Success254;
                    }
                  }
                  term = term272;
                }
                term = z_222;
                { 
                  term = translate_fix_0_1.instance.invoke(context, p_222, u_222);
                  if(term == null)
                    break Fail318;
                  term = process_location_0_3.instance.invoke(context, t_222, q_222, term, g_704);
                  if(term == null)
                    break Fail318;
                  x_222 = term;
                  term = iset_add_0_1.instance.invoke(context, i_704, u_222);
                  if(term == null)
                    break Fail318;
                  term = iset_elements_0_0.instance.invoke(context, i_704);
                  if(term == null)
                    break Fail318;
                  term = write_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail318;
                  term = debug_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail318;
                  if(true)
                    break Success253;
                }
              }
              term = g_704;
              x_222 = g_704;
            }
            term = x_222;
            if(true)
              break Success251;
          }
          term = term269;
          IStrategoTerm term273 = term;
          Success255:
          { 
            Fail322:
            { 
              IStrategoTerm y_221 = null;
              IStrategoTerm z_221 = null;
              IStrategoTerm a_222 = null;
              IStrategoTerm b_222 = null;
              IStrategoTerm e_222 = null;
              IStrategoTerm f_222 = null;
              IStrategoTerm g_222 = null;
              IStrategoTerm term274 = term;
              Success256:
              { 
                Fail323:
                { 
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail323;
                  z_221 = term.getSubterm(0);
                  IStrategoTerm arg130 = term.getSubterm(1);
                  b_222 = arg130;
                  if(arg130.getTermType() != IStrategoTerm.APPL || random_test._consAddCorrection_3 != ((IStrategoAppl)arg130).getConstructor())
                    break Fail323;
                  IStrategoTerm arg131 = arg130.getSubterm(0);
                  if(arg131.getTermType() != IStrategoTerm.APPL || random_test._consInsertOnceFor_1 != ((IStrategoAppl)arg131).getConstructor())
                    break Fail323;
                  y_221 = arg131.getSubterm(0);
                  a_222 = arg130.getSubterm(1);
                  e_222 = arg130.getSubterm(2);
                  if(true)
                    break Success256;
                }
                term = term274;
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail322;
                z_221 = term.getSubterm(0);
                IStrategoTerm arg132 = term.getSubterm(1);
                b_222 = arg132;
                if(arg132.getTermType() != IStrategoTerm.APPL || random_test._consAddCorrectionFirst_3 != ((IStrategoAppl)arg132).getConstructor())
                  break Fail322;
                IStrategoTerm arg133 = arg132.getSubterm(0);
                if(arg133.getTermType() != IStrategoTerm.APPL || random_test._consInsertOnceFor_1 != ((IStrategoAppl)arg133).getConstructor())
                  break Fail322;
                y_221 = arg133.getSubterm(0);
                a_222 = arg132.getSubterm(1);
                e_222 = arg132.getSubterm(2);
              }
              term = translate_fix_0_1.instance.invoke(context, y_221, z_221);
              if(term == null)
                break Fail322;
              term = termFactory.makeTuple(z_221, term);
              f_222 = term;
              Success257:
              { 
                Fail324:
                { 
                  IStrategoTerm h_222 = null;
                  h_222 = term;
                  IStrategoTerm term276 = term;
                  Success258:
                  { 
                    Fail325:
                    { 
                      term = iset_contains_0_1.instance.invoke(context, i_704, f_222);
                      if(term == null)
                        break Fail325;
                      { 
                        if(true)
                          break Fail324;
                        if(true)
                          break Success258;
                      }
                    }
                    term = term276;
                  }
                  term = h_222;
                  { 
                    term = translate_fix_0_1.instance.invoke(context, a_222, z_221);
                    if(term == null)
                      break Fail322;
                    term = process_location_0_3.instance.invoke(context, e_222, b_222, term, g_704);
                    if(term == null)
                      break Fail322;
                    g_222 = term;
                    term = iset_add_0_1.instance.invoke(context, i_704, f_222);
                    if(term == null)
                      break Fail322;
                    if(true)
                      break Success257;
                  }
                }
                term = g_704;
                g_222 = g_704;
              }
              term = g_222;
              if(true)
                break Success255;
            }
            term = term273;
            IStrategoTerm term277 = term;
            Success259:
            { 
              Fail326:
              { 
                IStrategoTerm l_221 = null;
                IStrategoTerm m_221 = null;
                IStrategoTerm n_221 = null;
                IStrategoTerm p_221 = null;
                IStrategoTerm term278 = term;
                Success260:
                { 
                  Fail327:
                  { 
                    if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                      break Fail327;
                    l_221 = term.getSubterm(0);
                    IStrategoTerm arg134 = term.getSubterm(1);
                    n_221 = arg134;
                    if(arg134.getTermType() != IStrategoTerm.APPL || random_test._consAddCorrection_3 != ((IStrategoAppl)arg134).getConstructor())
                      break Fail327;
                    IStrategoTerm arg135 = arg134.getSubterm(0);
                    if(arg135.getTermType() != IStrategoTerm.APPL || random_test._consInsert_0 != ((IStrategoAppl)arg135).getConstructor())
                      break Fail327;
                    m_221 = arg134.getSubterm(1);
                    p_221 = arg134.getSubterm(2);
                    if(true)
                      break Success260;
                  }
                  term = term278;
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail326;
                  l_221 = term.getSubterm(0);
                  IStrategoTerm arg136 = term.getSubterm(1);
                  n_221 = arg136;
                  if(arg136.getTermType() != IStrategoTerm.APPL || random_test._consAddCorrectionFirst_3 != ((IStrategoAppl)arg136).getConstructor())
                    break Fail326;
                  IStrategoTerm arg137 = arg136.getSubterm(0);
                  if(arg137.getTermType() != IStrategoTerm.APPL || random_test._consInsert_0 != ((IStrategoAppl)arg137).getConstructor())
                    break Fail326;
                  m_221 = arg136.getSubterm(1);
                  p_221 = arg136.getSubterm(2);
                }
                term = iset_add_0_1.instance.invoke(context, i_704, l_221);
                if(term == null)
                  break Fail326;
                term = translate_fix_0_1.instance.invoke(context, m_221, l_221);
                if(term == null)
                  break Fail326;
                term = process_location_0_3.instance.invoke(context, p_221, n_221, term, g_704);
                if(term == null)
                  break Fail326;
                if(true)
                  break Success259;
              }
              term = term277;
              IStrategoTerm term279 = term;
              Success261:
              { 
                Fail328:
                { 
                  IStrategoTerm z_220 = null;
                  TermReference a_221 = new TermReference();
                  TermReference b_221 = new TermReference();
                  IStrategoTerm c_221 = null;
                  IStrategoTerm d_221 = null;
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail328;
                  d_221 = term.getSubterm(0);
                  IStrategoTerm arg138 = term.getSubterm(1);
                  if(arg138.getTermType() != IStrategoTerm.APPL || random_test._consChangeCorrection_1 != ((IStrategoAppl)arg138).getConstructor())
                    break Fail328;
                  z_220 = arg138.getSubterm(0);
                  term = translate_fix_0_1.instance.invoke(context, z_220, d_221);
                  if(term == null)
                    break Fail328;
                  if(b_221.value == null)
                    b_221.value = term;
                  else
                    if(b_221.value != term && !b_221.value.match(term))
                      break Fail328;
                  term = translate_fix_0_1.instance.invoke(context, random_test.constFix_Var0, d_221);
                  if(term == null)
                    break Fail328;
                  if(a_221.value == null)
                    a_221.value = term;
                  else
                    if(a_221.value != term && !a_221.value.match(term))
                      break Fail328;
                  term = g_704;
                  lifted321 lifted3211 = new lifted321();
                  lifted3211.a_221 = a_221;
                  lifted3211.b_221 = b_221;
                  term = oncetd_1_0.instance.invoke(context, term, lifted3211);
                  if(term == null)
                    break Fail328;
                  c_221 = term;
                  term = iset_add_0_1.instance.invoke(context, i_704, d_221);
                  if(term == null)
                    break Fail328;
                  term = c_221;
                  if(true)
                    break Success261;
                }
                term = term279;
                IStrategoTerm term280 = term;
                Success262:
                { 
                  Fail329:
                  { 
                    IStrategoTerm l_220 = null;
                    TermReference m_220 = new TermReference();
                    TermReference n_220 = new TermReference();
                    IStrategoTerm o_220 = null;
                    IStrategoTerm p_220 = null;
                    IStrategoTerm s_220 = null;
                    IStrategoTerm u_220 = null;
                    if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                      break Fail329;
                    if(n_220.value == null)
                      n_220.value = term.getSubterm(0);
                    else
                      if(n_220.value != term.getSubterm(0) && !n_220.value.match(term.getSubterm(0)))
                        break Fail329;
                    IStrategoTerm arg139 = term.getSubterm(1);
                    if(arg139.getTermType() != IStrategoTerm.APPL || random_test._consDeleteFromListCorrection_2 != ((IStrategoAppl)arg139).getConstructor())
                      break Fail329;
                    IStrategoTerm arg140 = arg139.getSubterm(0);
                    if(arg140.getTermType() != IStrategoTerm.APPL || random_test._consDeleteFor_1 != ((IStrategoAppl)arg140).getConstructor())
                      break Fail329;
                    l_220 = arg140.getSubterm(0);
                    if(m_220.value == null)
                      m_220.value = arg139.getSubterm(1);
                    else
                      if(m_220.value != arg139.getSubterm(1) && !m_220.value.match(arg139.getSubterm(1)))
                        break Fail329;
                    u_220 = term;
                    term = translate_fix_0_1.instance.invoke(context, l_220, n_220.value);
                    if(term == null)
                      break Fail329;
                    s_220 = term;
                    term = u_220;
                    if(n_220.value == null)
                      break Fail329;
                    term = termFactory.makeTuple(n_220.value, s_220);
                    o_220 = term;
                    Success263:
                    { 
                      Fail330:
                      { 
                        IStrategoTerm q_220 = null;
                        q_220 = term;
                        IStrategoTerm term282 = term;
                        Success264:
                        { 
                          Fail331:
                          { 
                            term = iset_contains_0_1.instance.invoke(context, i_704, o_220);
                            if(term == null)
                              break Fail331;
                            { 
                              if(true)
                                break Fail330;
                              if(true)
                                break Success264;
                            }
                          }
                          term = term282;
                        }
                        term = q_220;
                        { 
                          term = g_704;
                          lifted322 lifted3220 = new lifted322();
                          lifted3220.m_220 = m_220;
                          lifted3220.n_220 = n_220;
                          term = oncetd_1_0.instance.invoke(context, term, lifted3220);
                          if(term == null)
                            break Fail329;
                          p_220 = term;
                          term = iset_add_0_1.instance.invoke(context, i_704, o_220);
                          if(term == null)
                            break Fail329;
                          if(true)
                            break Success263;
                        }
                      }
                      term = g_704;
                      p_220 = g_704;
                    }
                    term = p_220;
                    if(true)
                      break Success262;
                  }
                  term = term280;
                  TermReference z_219 = new TermReference();
                  TermReference a_220 = new TermReference();
                  IStrategoTerm b_220 = null;
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail317;
                  if(a_220.value == null)
                    a_220.value = term.getSubterm(0);
                  else
                    if(a_220.value != term.getSubterm(0) && !a_220.value.match(term.getSubterm(0)))
                      break Fail317;
                  IStrategoTerm arg141 = term.getSubterm(1);
                  if(arg141.getTermType() != IStrategoTerm.APPL || random_test._consDeleteFromListCorrection_2 != ((IStrategoAppl)arg141).getConstructor())
                    break Fail317;
                  IStrategoTerm arg142 = arg141.getSubterm(0);
                  if(arg142.getTermType() != IStrategoTerm.APPL || random_test._consDelete_0 != ((IStrategoAppl)arg142).getConstructor())
                    break Fail317;
                  if(z_219.value == null)
                    z_219.value = arg141.getSubterm(1);
                  else
                    if(z_219.value != arg141.getSubterm(1) && !z_219.value.match(arg141.getSubterm(1)))
                      break Fail317;
                  Success265:
                  { 
                    Fail332:
                    { 
                      IStrategoTerm c_220 = null;
                      c_220 = term;
                      IStrategoTerm term284 = term;
                      Success266:
                      { 
                        Fail333:
                        { 
                          term = iset_contains_0_1.instance.invoke(context, i_704, a_220.value);
                          if(term == null)
                            break Fail333;
                          { 
                            if(true)
                              break Fail332;
                            if(true)
                              break Success266;
                          }
                        }
                        term = term284;
                      }
                      term = c_220;
                      { 
                        term = g_704;
                        lifted324 lifted3240 = new lifted324();
                        lifted3240.z_219 = z_219;
                        lifted3240.a_220 = a_220;
                        term = oncetd_1_0.instance.invoke(context, term, lifted3240);
                        if(term == null)
                          break Fail317;
                        b_220 = term;
                        term = iset_add_0_1.instance.invoke(context, i_704, a_220.value);
                        if(term == null)
                          break Fail317;
                        if(true)
                          break Success265;
                      }
                    }
                    term = g_704;
                    b_220 = g_704;
                  }
                  term = b_220;
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class change_fix_0_2 extends Strategy 
  { 
    public static change_fix_0_2 instance = new change_fix_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm d_223, IStrategoTerm e_223)
    { 
      Fail334:
      { 
        if(term != d_223 && !d_223.match(term))
          break Fail334;
        term = e_223;
        if(true)
          return term;
      }
      context.push("change_fix_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class remove_one_0_2 extends Strategy 
  { 
    public static remove_one_0_2 instance = new remove_one_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_i_223, IStrategoTerm ref_j_223)
    { 
      TermReference i_223 = new TermReference(ref_i_223);
      TermReference j_223 = new TermReference(ref_j_223);
      context.push("remove_one_0_2");
      Fail335:
      { 
        TermReference k_223 = new TermReference();
        IStrategoTerm l_223 = null;
        IStrategoTerm m_223 = null;
        IStrategoTerm q_223 = null;
        IStrategoTerm r_223 = null;
        IStrategoTerm s_223 = null;
        l_223 = term;
        q_223 = term;
        term = is_list_0_0.instance.invoke(context, l_223);
        if(term == null)
          break Fail335;
        r_223 = q_223;
        term = l_223;
        lifted325 lifted3250 = new lifted325();
        lifted3250.i_223 = i_223;
        lifted3250.j_223 = j_223;
        lifted3250.k_223 = k_223;
        term = SRTS_one.instance.invoke(context, term, lifted3250);
        if(term == null)
          break Fail335;
        term = r_223;
        s_223 = r_223;
        IStrategoTerm term285 = term;
        Success267:
        { 
          Fail336:
          { 
            IStrategoTerm u_223 = null;
            u_223 = l_223;
            term = remove_one_from_list_0_2.instance.invoke(context, u_223, k_223.value, random_test.constNil0);
            if(term == null)
              break Fail336;
            m_223 = term;
            if(true)
              break Success267;
          }
          term = term285;
          IStrategoTerm o_223 = null;
          IStrategoTerm p_223 = null;
          IStrategoTerm w_223 = null;
          o_223 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail335;
          p_223 = term;
          w_223 = o_223;
          term = report_with_failure_0_2.instance.invoke(context, w_223, random_test.const187, p_223);
          if(term == null)
            break Fail335;
        }
        term = s_223;
        if(m_223 == null)
          break Fail335;
        term = m_223;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class remove_one_from_list_0_2 extends Strategy 
  { 
    public static remove_one_from_list_0_2 instance = new remove_one_from_list_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm j_704, IStrategoTerm k_704)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("remove_one_from_list_0_2");
      Fail337:
      { 
        IStrategoTerm term286 = term;
        Success268:
        { 
          Fail338:
          { 
            IStrategoTerm v_224 = null;
            IStrategoTerm w_224 = null;
            IStrategoTerm z_224 = null;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail338;
            if(((IStrategoList)term).head() != j_704 && !j_704.match(((IStrategoList)term).head()))
              break Fail338;
            v_224 = ((IStrategoList)term).tail();
            z_224 = term;
            IStrategoTerm term287 = term;
            Success269:
            { 
              Fail339:
              { 
                term = termFactory.makeTuple(k_704, v_224);
                term = conc_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail339;
                w_224 = term;
                if(true)
                  break Success269;
              }
              term = term287;
              IStrategoTerm x_224 = null;
              IStrategoTerm y_224 = null;
              IStrategoTerm b_225 = null;
              x_224 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail338;
              y_224 = term;
              b_225 = x_224;
              term = report_with_failure_0_2.instance.invoke(context, b_225, random_test.const188, y_224);
              if(term == null)
                break Fail338;
            }
            term = z_224;
            if(w_224 == null)
              break Fail338;
            term = w_224;
            if(true)
              break Success268;
          }
          term = term286;
          IStrategoTerm b_224 = null;
          IStrategoTerm c_224 = null;
          IStrategoTerm d_224 = null;
          IStrategoTerm g_224 = null;
          IStrategoTerm h_224 = null;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail337;
          b_224 = ((IStrategoList)term).head();
          c_224 = ((IStrategoList)term).tail();
          g_224 = term;
          IStrategoTerm term288 = term;
          Success270:
          { 
            Fail340:
            { 
              term = b_224;
              if(term != j_704 && !j_704.match(term))
                break Fail340;
              { 
                if(true)
                  break Fail337;
                if(true)
                  break Success270;
              }
            }
            term = term288;
          }
          term = g_224;
          h_224 = g_224;
          IStrategoTerm term289 = term;
          Success271:
          { 
            Fail341:
            { 
              IStrategoTerm k_224 = null;
              k_224 = c_224;
              term = termFactory.makeTuple(k_704, (IStrategoTerm)termFactory.makeListCons(b_224, (IStrategoList)random_test.constNil0));
              term = conc_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail341;
              term = this.invoke(context, k_224, j_704, term);
              if(term == null)
                break Fail341;
              d_224 = term;
              if(true)
                break Success271;
            }
            term = term289;
            IStrategoTerm e_224 = null;
            IStrategoTerm f_224 = null;
            IStrategoTerm p_224 = null;
            e_224 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail337;
            f_224 = term;
            p_224 = e_224;
            term = report_with_failure_0_2.instance.invoke(context, p_224, random_test.const188, f_224);
            if(term == null)
              break Fail337;
          }
          term = h_224;
          if(d_224 == null)
            break Fail337;
          term = d_224;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class process_location_0_3 extends Strategy 
  { 
    public static process_location_0_3 instance = new process_location_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_p_704, IStrategoTerm ref_q_704, IStrategoTerm ref_r_704)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference p_704 = new TermReference(ref_p_704);
      TermReference q_704 = new TermReference(ref_q_704);
      TermReference r_704 = new TermReference(ref_r_704);
      context.push("process_location_0_3");
      Fail342:
      { 
        IStrategoTerm term290 = term;
        IStrategoConstructor cons43 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success272:
        { 
          if(cons43 == random_test._consDestMatchString_1)
          { 
            Fail343:
            { 
              IStrategoTerm j_229 = null;
              IStrategoTerm k_229 = null;
              j_229 = term.getSubterm(0);
              k_229 = term;
              if(r_704.value == null)
                break Fail343;
              term = r_704.value;
              if(term != j_229 && !j_229.match(term))
                break Fail343;
              term = k_229;
              if(r_704.value == null)
                break Fail343;
              term = r_704.value;
              if(true)
                break Success272;
            }
            term = term290;
          }
          Success273:
          { 
            if(cons43 == random_test._consDestMatchInt_1)
            { 
              Fail344:
              { 
                IStrategoTerm a_229 = null;
                IStrategoTerm b_229 = null;
                IStrategoTerm c_229 = null;
                a_229 = term.getSubterm(0);
                c_229 = term;
                term = string_to_int_0_0.instance.invoke(context, a_229);
                if(term == null)
                  break Fail344;
                b_229 = term;
                if(r_704.value == null)
                  break Fail344;
                term = r_704.value;
                if(term != b_229 && !b_229.match(term))
                  break Fail344;
                term = c_229;
                if(r_704.value == null)
                  break Fail344;
                term = r_704.value;
                if(true)
                  break Success273;
              }
              term = term290;
            }
            Success274:
            { 
              if(cons43 == random_test._consDestMatchWildCard_0)
              { 
                Fail345:
                { 
                  if(r_704.value == null)
                    break Fail345;
                  term = r_704.value;
                  if(true)
                    break Success274;
                }
                term = term290;
              }
              Success275:
              { 
                if(cons43 == random_test._consDestMatchCons_2)
                { 
                  Fail346:
                  { 
                    IStrategoTerm k_228 = null;
                    IStrategoTerm m_228 = null;
                    IStrategoTerm n_228 = null;
                    m_228 = term.getSubterm(0);
                    k_228 = term.getSubterm(1);
                    if(r_704.value == null)
                      break Fail346;
                    term = r_704.value;
                    IStrategoTerm cons23 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
                    if(cons23 != m_228 && !m_228.match(cons23))
                      break Fail346;
                    IStrategoTerm args22 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
                    term = termFactory.makeTuple(args22, k_228);
                    term = zip_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail346;
                    lifted328 lifted3280 = new lifted328();
                    lifted3280.p_704 = p_704;
                    lifted3280.q_704 = q_704;
                    term = map_1_0.instance.invoke(context, term, lifted3280);
                    if(term == null)
                      break Fail346;
                    n_228 = term;
                    IStrategoTerm mkterm13;
                    mkterm13 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{m_228, n_228});
                    if(mkterm13 == null)
                      break Fail346;
                    term = mkterm13;
                    if(true)
                      break Success275;
                  }
                  term = term290;
                }
                IStrategoTerm term294 = term;
                Success276:
                { 
                  Fail347:
                  { 
                    TermReference z_227 = new TermReference();
                    TermReference a_228 = new TermReference();
                    TermReference b_228 = new TermReference();
                    if(a_228.value == null)
                      a_228.value = term;
                    else
                      if(a_228.value != term && !a_228.value.match(term))
                        break Fail347;
                    if(term.getTermType() != IStrategoTerm.APPL || random_test._consDestMatchCons_2 != ((IStrategoAppl)term).getConstructor())
                      break Fail347;
                    lifted331 lifted3311 = new lifted331();
                    lifted330 lifted3300 = new lifted330();
                    lifted3311.z_227 = z_227;
                    lifted3300.r_704 = r_704;
                    lifted3300.z_227 = z_227;
                    lifted3300.b_228 = b_228;
                    term = and_2_0.instance.invoke(context, term, lifted3300, lifted3311);
                    if(term == null)
                      break Fail347;
                    if(b_228.value == null)
                      break Fail347;
                    term = b_228.value;
                    lifted333 lifted3330 = new lifted333();
                    lifted3330.a_228 = a_228;
                    lifted3330.p_704 = p_704;
                    lifted3330.q_704 = q_704;
                    term = oncetd_1_0.instance.invoke(context, term, lifted3330);
                    if(term == null)
                      break Fail347;
                    if(true)
                      break Success276;
                  }
                  term = term294;
                  IStrategoTerm s_227 = null;
                  if(term.getTermType() != IStrategoTerm.APPL || random_test._consTargetNode_0 != ((IStrategoAppl)term).getConstructor())
                    break Fail342;
                  IStrategoTerm term296 = term;
                  Success277:
                  { 
                    Fail348:
                    { 
                      IStrategoTerm t_227 = null;
                      t_227 = term;
                      if(p_704.value == null)
                        break Fail348;
                      term = p_704.value;
                      if(term.getTermType() != IStrategoTerm.APPL || random_test._consAddCorrectionFirst_3 != ((IStrategoAppl)term).getConstructor())
                        break Fail348;
                      term = t_227;
                      { 
                        if(q_704.value == null || r_704.value == null)
                          break Fail342;
                        term = termFactory.makeTuple((IStrategoTerm)termFactory.makeListCons(q_704.value, (IStrategoList)random_test.constNil0), r_704.value);
                        term = conc_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail342;
                        s_227 = term;
                        if(true)
                          break Success277;
                      }
                    }
                    term = term296;
                    if(r_704.value == null || q_704.value == null)
                      break Fail342;
                    term = termFactory.makeTuple(r_704.value, (IStrategoTerm)termFactory.makeListCons(q_704.value, (IStrategoList)random_test.constNil0));
                    term = conc_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail342;
                    s_227 = term;
                  }
                  term = s_227;
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class translate_fix_0_1 extends Strategy 
  { 
    public static translate_fix_0_1 instance = new translate_fix_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_s_704)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference s_704 = new TermReference(ref_s_704);
      context.push("translate_fix_0_1");
      Fail349:
      { 
        IStrategoTerm term297 = term;
        IStrategoConstructor cons44 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success278:
        { 
          if(cons44 == random_test._consFix_Cons_2)
          { 
            Fail350:
            { 
              IStrategoTerm v_231 = null;
              IStrategoTerm x_231 = null;
              IStrategoTerm b_232 = null;
              IStrategoTerm c_232 = null;
              v_231 = term.getSubterm(0);
              x_231 = term.getSubterm(1);
              c_232 = term;
              term = x_231;
              lifted334 lifted3340 = new lifted334();
              lifted3340.s_704 = s_704;
              term = map_1_0.instance.invoke(context, term, lifted3340);
              if(term == null)
                break Fail350;
              b_232 = term;
              term = c_232;
              IStrategoTerm mkterm14;
              mkterm14 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{v_231, b_232});
              if(mkterm14 == null)
                break Fail350;
              term = mkterm14;
              if(true)
                break Success278;
            }
            term = term297;
          }
          Success279:
          { 
            if(cons44 == random_test._consFix_Conc_2)
            { 
              Fail351:
              { 
                IStrategoTerm c_231 = null;
                IStrategoTerm e_231 = null;
                IStrategoTerm k_231 = null;
                c_231 = term.getSubterm(0);
                k_231 = term;
                IStrategoTerm term299 = term;
                Success280:
                { 
                  Fail352:
                  { 
                    IStrategoTerm m_231 = null;
                    term = this.invoke(context, c_231, s_704.value);
                    if(term == null)
                      break Fail352;
                    m_231 = term;
                    term = this.invoke(context, c_231, s_704.value);
                    if(term == null)
                      break Fail352;
                    term = termFactory.makeTuple(m_231, term);
                    term = conc_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail352;
                    e_231 = term;
                    if(true)
                      break Success280;
                  }
                  term = term299;
                  IStrategoTerm h_231 = null;
                  IStrategoTerm j_231 = null;
                  IStrategoTerm t_231 = null;
                  h_231 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail351;
                  j_231 = term;
                  t_231 = h_231;
                  term = report_with_failure_0_2.instance.invoke(context, t_231, random_test.const189, j_231);
                  if(term == null)
                    break Fail351;
                }
                term = k_231;
                if(e_231 == null)
                  break Fail351;
                term = e_231;
                if(true)
                  break Success279;
              }
              term = term297;
            }
            Success281:
            { 
              if(cons44 == random_test._consFix_Int_1)
              { 
                Fail353:
                { 
                  IStrategoTerm p_230 = null;
                  IStrategoTerm q_230 = null;
                  IStrategoTerm v_230 = null;
                  p_230 = term.getSubterm(0);
                  v_230 = term;
                  IStrategoTerm term301 = term;
                  Success282:
                  { 
                    Fail354:
                    { 
                      term = string_to_int_0_0.instance.invoke(context, p_230);
                      if(term == null)
                        break Fail354;
                      q_230 = term;
                      if(true)
                        break Success282;
                    }
                    term = term301;
                    IStrategoTerm r_230 = null;
                    IStrategoTerm s_230 = null;
                    IStrategoTerm x_230 = null;
                    r_230 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail353;
                    s_230 = term;
                    x_230 = r_230;
                    term = report_with_failure_0_2.instance.invoke(context, x_230, random_test.const189, s_230);
                    if(term == null)
                      break Fail353;
                  }
                  term = v_230;
                  if(q_230 == null)
                    break Fail353;
                  term = q_230;
                  if(true)
                    break Success281;
                }
                term = term297;
              }
              Success283:
              { 
                if(cons44 == random_test._consFix_Var_1)
                { 
                  Fail355:
                  { 
                    IStrategoTerm j_230 = null;
                    j_230 = term.getSubterm(0);
                    if(s_704.value == null)
                      break Fail355;
                    term = termFactory.makeTuple(s_704.value, j_230);
                    term = $Error$Match$Param_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail355;
                    if(true)
                      break Success283;
                  }
                  term = term297;
                }
                Success284:
                { 
                  if(cons44 == random_test._consFix_Array_1)
                  { 
                    Fail356:
                    { 
                      IStrategoTerm e_230 = null;
                      e_230 = term.getSubterm(0);
                      term = e_230;
                      lifted336 lifted3360 = new lifted336();
                      lifted3360.s_704 = s_704;
                      term = map_1_0.instance.invoke(context, term, lifted3360);
                      if(term == null)
                        break Fail356;
                      if(true)
                        break Success284;
                    }
                    term = term297;
                  }
                  Success285:
                  { 
                    if(cons44 == random_test._consFix_String_1)
                    { 
                      Fail357:
                      { 
                        IStrategoTerm p_229 = null;
                        p_229 = term.getSubterm(0);
                        term = un_double_quote_0_0.instance.invoke(context, p_229);
                        if(term == null)
                          break Fail357;
                        if(true)
                          break Success285;
                      }
                      term = term297;
                    }
                    Success286:
                    { 
                      if(cons44 == random_test._consFix_EmptyArray_0)
                      { 
                        Fail358:
                        { 
                          term = random_test.constNil0;
                          if(true)
                            break Success286;
                        }
                        term = term297;
                      }
                    }
                  }
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class fix_program_0_3 extends Strategy 
  { 
    public static fix_program_0_3 instance = new fix_program_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm d_232, IStrategoTerm ref_f_232, IStrategoTerm g_232)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference f_232 = new TermReference(ref_f_232);
      context.push("fix_program_0_3");
      Fail359:
      { 
        IStrategoTerm h_232 = null;
        IStrategoTerm i_232 = null;
        IStrategoTerm j_232 = null;
        IStrategoTerm k_232 = null;
        IStrategoTerm n_232 = null;
        IStrategoTerm p_232 = null;
        IStrategoTerm q_232 = null;
        IStrategoTerm a_234 = null;
        IStrategoTerm b_234 = null;
        IStrategoTerm j_234 = null;
        IStrategoTerm y_232 = null;
        IStrategoTerm b_233 = null;
        IStrategoTerm c_233 = null;
        IStrategoTerm q_234 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail359;
        j_232 = term.getSubterm(0);
        h_232 = term.getSubterm(1);
        term = map_1_0.instance.invoke(context, h_232, lifted337.instance);
        if(term == null)
          break Fail359;
        i_232 = term;
        term = new_iset_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail359;
        q_232 = term;
        term = match_error_and_fix_0_2.instance.invoke(context, i_232, j_232, term);
        if(term == null)
          break Fail359;
        k_232 = term;
        a_234 = d_232;
        term = iset_elements_0_0.instance.invoke(context, q_232);
        if(term == null)
          break Fail359;
        term = iset_addlist_0_1.instance.invoke(context, a_234, term);
        if(term == null)
          break Fail359;
        j_234 = term;
        if(f_232.value == null)
          break Fail359;
        term = f_232.value;
        IStrategoTerm term306 = term;
        Success287:
        { 
          Fail360:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail360;
            if(true)
              break Success287;
          }
          term = term306;
          IStrategoTerm term307 = term;
          Success288:
          { 
            Fail361:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail361;
              if(true)
                break Success288;
            }
            term = term307;
            IStrategoTerm term308 = term;
            Success289:
            { 
              Fail362:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail362;
                if(true)
                  break Success289;
              }
              term = term308;
              IStrategoTerm term309 = term;
              Success290:
              { 
                Fail363:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail363;
                  if(true)
                    break Success290;
                }
                term = term309;
                IStrategoTerm t_232 = null;
                IStrategoTerm v_232 = null;
                IStrategoTerm x_232 = null;
                t_232 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail359;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail359;
                v_232 = ((IStrategoList)term).tail();
                x_232 = v_232;
                term = report_failure_0_2.instance.invoke(context, x_232, random_test.const190, t_232);
                if(term == null)
                  break Fail359;
              }
            }
          }
        }
        b_233 = term;
        y_232 = random_test.const8;
        c_233 = b_233;
        term = string_replace_0_2.instance.invoke(context, c_233, y_232, random_test.const8);
        if(term == null)
          break Fail359;
        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons45);
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail359;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        b_234 = term;
        q_234 = j_234;
        term = iset_elements_0_0.instance.invoke(context, d_232);
        if(term == null)
          break Fail359;
        term = print_parse_cycle_0_3.instance.invoke(context, q_234, k_232, b_234, term);
        if(term == null)
          break Fail359;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail359;
        n_232 = term.getSubterm(0);
        p_232 = term.getSubterm(1);
        term = p_232;
        lifted368 lifted3680 = new lifted368();
        lifted3680.f_232 = f_232;
        term = bottomup_1_0.instance.invoke(context, term, lifted3680);
        if(term == null)
          break Fail359;
        term = write_log_0_1.instance.invoke(context, n_232, g_232);
        if(term == null)
          break Fail359;
        term = iset_elements_0_0.instance.invoke(context, q_232);
        if(term == null)
          break Fail359;
        term = debug_1_0.instance.invoke(context, term, lifted373.instance);
        if(term == null)
          break Fail359;
        term = iset_elements_0_0.instance.invoke(context, q_232);
        if(term == null)
          break Fail359;
        term = termFactory.makeTuple(k_232, n_232, p_232, term);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class match_error_node_0_0 extends Strategy 
  { 
    public static match_error_node_0_0 instance = new match_error_node_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("match_error_node_0_0");
      Fail364:
      { 
        IStrategoTerm c_235 = null;
        IStrategoTerm d_235 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail364;
        c_235 = term.getSubterm(0);
        d_235 = term.getSubterm(1);
        term = $Error$Source$Node$Pattern_0_0.instance.invoke(context, d_235);
        if(term == null)
          break Fail364;
        term = process_error_node_0_2.instance.invoke(context, term, c_235, d_235);
        if(term == null)
          break Fail364;
        term = $Error$Correcting$Action_0_0.instance.invoke(context, d_235);
        if(term == null)
          break Fail364;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class process_error$Match$Cons_0_3 extends Strategy 
  { 
    public static process_error$Match$Cons_0_3 instance = new process_error$Match$Cons_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_h_235, IStrategoTerm j_235, IStrategoTerm m_235)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference h_235 = new TermReference(ref_h_235);
      context.push("process_errorMatchCons_0_3");
      Fail365:
      { 
        IStrategoTerm n_235 = null;
        IStrategoTerm o_235 = null;
        n_235 = term;
        IStrategoTerm cons25 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(cons25 != j_235 && !j_235.match(cons25))
          break Fail365;
        IStrategoTerm args24 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        o_235 = args24;
        IStrategoTerm term314 = term;
        Success291:
        { 
          Fail366:
          { 
            IStrategoTerm q_235 = null;
            q_235 = term;
            IStrategoTerm term315 = term;
            Success292:
            { 
              Fail367:
              { 
                IStrategoTerm u_235 = null;
                term = length_0_0.instance.invoke(context, o_235);
                if(term == null)
                  break Fail367;
                u_235 = term;
                term = length_0_0.instance.invoke(context, m_235);
                if(term == null)
                  break Fail367;
                term = termFactory.makeTuple(u_235, term);
                term = eq_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail367;
                { 
                  if(true)
                    break Fail366;
                  if(true)
                    break Success292;
                }
              }
              term = term315;
            }
            term = q_235;
            { 
              if(true)
                break Fail365;
              if(true)
                break Success291;
            }
          }
          term = term314;
        }
        term = termFactory.makeTuple(o_235, m_235);
        term = zip_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail365;
        lifted375 lifted3750 = new lifted375();
        lifted3750.h_235 = h_235;
        term = map_1_0.instance.invoke(context, term, lifted3750);
        if(term == null)
          break Fail365;
        term = n_235;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class process_error_node_0_2 extends Strategy 
  { 
    public static process_error_node_0_2 instance = new process_error_node_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm t_704, IStrategoTerm u_704)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("process_error_node_0_2");
      Fail368:
      { 
        IStrategoTerm term316 = term;
        IStrategoConstructor cons45 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success293:
        { 
          if(cons45 == random_test._consErrMatchCons_2)
          { 
            Fail369:
            { 
              IStrategoTerm o_237 = null;
              IStrategoTerm p_237 = null;
              o_237 = term.getSubterm(0);
              p_237 = term.getSubterm(1);
              term = process_error$Match$Cons_0_3.instance.invoke(context, t_704, u_704, o_237, p_237);
              if(term == null)
                break Fail369;
              term = t_704;
              if(true)
                break Success293;
            }
            term = term316;
          }
          Success294:
          { 
            if(cons45 == random_test._consErrMatchParam_1)
            { 
              Fail370:
              { 
                IStrategoTerm h_237 = null;
                IStrategoTerm i_237 = null;
                h_237 = term.getSubterm(0);
                term = termFactory.makeTuple(u_704, h_237);
                term = $Error$Match$Param_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail370;
                i_237 = term;
                term = t_704;
                if(term != i_237 && !i_237.match(term))
                  break Fail370;
                term = t_704;
                if(true)
                  break Success294;
              }
              term = term316;
            }
            Success295:
            { 
              if(cons45 == random_test._consErrMatchParamBind_1)
              { 
                Fail371:
                { 
                  IStrategoTerm s_236 = null;
                  IStrategoTerm t_236 = null;
                  IStrategoTerm x_236 = null;
                  IStrategoTerm y_236 = null;
                  IStrategoTerm a_237 = null;
                  IStrategoTerm b_237 = null;
                  IStrategoTerm d_237 = null;
                  s_236 = term;
                  t_236 = term.getSubterm(0);
                  a_237 = term;
                  x_236 = random_test.const194;
                  b_237 = a_237;
                  term = termFactory.annotateTerm(termFactory.makeTuple(u_704, t_236), checkListAnnos(termFactory, random_test.constCons0));
                  y_236 = term;
                  d_237 = b_237;
                  term = termFactory.makeTuple(random_test.const195, t_704);
                  term = dr_set_rule_0_3.instance.invoke(context, d_237, x_236, y_236, term);
                  if(term == null)
                    break Fail371;
                  term = s_236;
                  if(true)
                    break Success295;
                }
                term = term316;
              }
              Success296:
              { 
                if(cons45 == random_test._consErrMatchString_1)
                { 
                  Fail372:
                  { 
                    IStrategoTerm l_236 = null;
                    term = un_double_quote_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail372;
                    l_236 = term;
                    term = t_704;
                    if(term != l_236 && !l_236.match(term))
                      break Fail372;
                    term = t_704;
                    if(true)
                      break Success296;
                  }
                  term = term316;
                }
                Success297:
                { 
                  if(cons45 == random_test._consErrMatchINT_1)
                  { 
                    Fail373:
                    { 
                      IStrategoTerm e_236 = null;
                      IStrategoTerm f_236 = null;
                      e_236 = term.getSubterm(0);
                      term = string_to_int_0_0.instance.invoke(context, e_236);
                      if(term == null)
                        break Fail373;
                      f_236 = term;
                      term = t_704;
                      if(term != f_236 && !f_236.match(term))
                        break Fail373;
                      term = t_704;
                      if(true)
                        break Success297;
                    }
                    term = term316;
                  }
                  if(cons45 == random_test._consErrMatchWildCard_0)
                  { 
                    term = t_704;
                  }
                  else
                  { 
                    break Fail368;
                  }
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class match_error_0_0 extends Strategy 
  { 
    public static match_error_0_0 instance = new match_error_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("match_error_0_0");
      Fail374:
      { 
        IStrategoTerm r_237 = null;
        IStrategoTerm u_237 = null;
        IStrategoTerm v_237 = null;
        IStrategoTerm w_237 = null;
        IStrategoTerm x_237 = null;
        IStrategoTerm b_238 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail374;
        u_237 = term.getSubterm(0);
        r_237 = term.getSubterm(1);
        term = split_at_space_0_0.instance.invoke(context, r_237);
        if(term == null)
          break Fail374;
        v_237 = term;
        term = all_keys_$Error$Message$Pattern_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail374;
        b_238 = term;
        term = map_1_0.instance.invoke(context, b_238, lifted376.instance);
        if(term == null)
          break Fail374;
        term = match_error_rec_0_2.instance.invoke(context, term, u_237, v_237);
        if(term == null)
          break Fail374;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail374;
        w_237 = term.getSubterm(0);
        x_237 = term.getSubterm(1);
        term = termFactory.makeTuple(w_237, x_237);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class match_error_rec_0_2 extends Strategy 
  { 
    public static match_error_rec_0_2 instance = new match_error_rec_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm v_704, IStrategoTerm w_704)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("match_error_rec_0_2");
      Fail375:
      { 
        IStrategoTerm term321 = term;
        Success298:
        { 
          Fail376:
          { 
            IStrategoTerm m_238 = null;
            IStrategoTerm n_238 = null;
            IStrategoTerm p_238 = null;
            IStrategoTerm q_238 = null;
            IStrategoTerm r_238 = null;
            IStrategoTerm t_238 = null;
            IStrategoTerm u_238 = null;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail376;
            IStrategoTerm arg152 = ((IStrategoList)term).head();
            if(arg152.getTermType() != IStrategoTerm.TUPLE || arg152.getSubtermCount() != 2)
              break Fail376;
            q_238 = arg152.getSubterm(0);
            m_238 = arg152.getSubterm(1);
            r_238 = ((IStrategoList)term).tail();
            term = split_at_space_0_0.instance.invoke(context, m_238);
            if(term == null)
              break Fail376;
            n_238 = term;
            Success299:
            { 
              Fail377:
              { 
                IStrategoTerm v_238 = null;
                v_238 = term;
                term = match_error_rec2_0_3.instance.invoke(context, n_238, v_704, w_704, q_238);
                if(term == null)
                  break Fail377;
                p_238 = term;
                term = v_238;
                { 
                  u_238 = p_238;
                  term = q_238;
                  t_238 = q_238;
                  if(true)
                    break Success299;
                }
              }
              term = this.invoke(context, r_238, v_704, w_704);
              if(term == null)
                break Fail376;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail376;
              t_238 = term.getSubterm(0);
              u_238 = term.getSubterm(1);
            }
            term = termFactory.makeTuple(t_238, u_238);
            if(true)
              break Success298;
          }
          term = term321;
          if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
            break Fail375;
          if(true)
            break Fail375;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class match_error_rec2_0_3 extends Strategy 
  { 
    public static match_error_rec2_0_3 instance = new match_error_rec2_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm x_238, IStrategoTerm y_238, IStrategoTerm z_238)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("match_error_rec2_0_3");
      Fail378:
      { 
        TermReference a_239 = new TermReference();
        IStrategoTerm b_239 = null;
        IStrategoTerm c_239 = null;
        IStrategoTerm f_239 = null;
        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
          break Fail378;
        if(a_239.value == null)
          a_239.value = ((IStrategoList)term).head();
        else
          if(a_239.value != ((IStrategoList)term).head() && !a_239.value.match(((IStrategoList)term).head()))
            break Fail378;
        b_239 = ((IStrategoList)term).tail();
        f_239 = term;
        IStrategoTerm term323 = term;
        Success300:
        { 
          Fail379:
          { 
            IStrategoTerm d_239 = null;
            d_239 = term;
            term = y_238;
            lifted378 lifted3780 = new lifted378();
            lifted3780.a_239 = a_239;
            term = filter_1_0.instance.invoke(context, term, lifted3780);
            if(term == null)
              break Fail379;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail379;
            term = d_239;
            { 
              if(true)
                break Fail378;
              if(true)
                break Success300;
            }
          }
          term = term323;
          Success301:
          { 
            Fail380:
            { 
              IStrategoTerm e_239 = null;
              e_239 = term;
              term = b_239;
              if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                break Fail380;
              term = e_239;
              { 
                term = termFactory.makeTuple(x_238, z_238);
                term = match_error_node_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail378;
                c_239 = term;
                if(true)
                  break Success301;
              }
            }
            term = this.invoke(context, b_239, x_238, y_238, z_238);
            if(term == null)
              break Fail378;
            c_239 = term;
          }
        }
        term = f_239;
        if(c_239 == null)
          break Fail378;
        term = c_239;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class extract_settings_0_0 extends Strategy 
  { 
    public static extract_settings_0_0 instance = new extract_settings_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("extract_settings_0_0");
      Fail381:
      { 
        IStrategoTerm term325 = term;
        IStrategoConstructor cons46 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success302:
        { 
          if(cons46 == random_test._consAutoTest_1)
          { 
            Fail382:
            { 
              IStrategoTerm k_240 = null;
              IStrategoTerm l_240 = null;
              k_240 = term;
              IStrategoTerm arg153 = term.getSubterm(0);
              if(arg153.getTermType() != IStrategoTerm.APPL || random_test._consATSettings_1 != ((IStrategoAppl)arg153).getConstructor())
                break Fail382;
              l_240 = arg153.getSubterm(0);
              IStrategoTerm term326 = term;
              Success303:
              { 
                Fail383:
                { 
                  term = map_1_0.instance.invoke(context, l_240, extract$S_0_0.instance);
                  if(term == null)
                    break Fail383;
                  if(true)
                    break Success303;
                }
                term = term326;
                IStrategoTerm m_240 = null;
                IStrategoTerm o_240 = null;
                IStrategoTerm s_240 = null;
                m_240 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail382;
                o_240 = term;
                s_240 = m_240;
                term = report_with_failure_0_2.instance.invoke(context, s_240, random_test.const196, o_240);
                if(term == null)
                  break Fail382;
              }
              term = k_240;
              if(true)
                break Success302;
            }
            term = term325;
          }
          Success304:
          { 
            if(cons46 == random_test._consAutoTest_3)
            { 
              Fail384:
              { 
                IStrategoTerm x_239 = null;
                IStrategoTerm y_239 = null;
                IStrategoTerm z_239 = null;
                IStrategoTerm a_240 = null;
                x_239 = term;
                IStrategoTerm arg154 = term.getSubterm(0);
                if(arg154.getTermType() != IStrategoTerm.APPL || random_test._consATSettings_1 != ((IStrategoAppl)arg154).getConstructor())
                  break Fail384;
                y_239 = arg154.getSubterm(0);
                IStrategoTerm arg155 = term.getSubterm(1);
                if(arg155.getTermType() != IStrategoTerm.APPL || random_test._consCOVSettings_1 != ((IStrategoAppl)arg155).getConstructor())
                  break Fail384;
                z_239 = arg155.getSubterm(0);
                IStrategoTerm arg156 = term.getSubterm(2);
                if(arg156.getTermType() != IStrategoTerm.APPL || random_test._consErrorCorrections_1 != ((IStrategoAppl)arg156).getConstructor())
                  break Fail384;
                a_240 = arg156.getSubterm(0);
                IStrategoTerm term328 = term;
                Success305:
                { 
                  Fail385:
                  { 
                    term = map_1_0.instance.invoke(context, y_239, extract$S_0_0.instance);
                    if(term == null)
                      break Fail385;
                    term = map_1_0.instance.invoke(context, z_239, extract$S_0_0.instance);
                    if(term == null)
                      break Fail385;
                    term = map_1_0.instance.invoke(context, a_240, extract$S_0_0.instance);
                    if(term == null)
                      break Fail385;
                    if(true)
                      break Success305;
                  }
                  term = term328;
                  IStrategoTerm b_240 = null;
                  IStrategoTerm c_240 = null;
                  IStrategoTerm h_240 = null;
                  b_240 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail384;
                  c_240 = term;
                  h_240 = b_240;
                  term = report_with_failure_0_2.instance.invoke(context, h_240, random_test.const196, c_240);
                  if(term == null)
                    break Fail384;
                }
                term = x_239;
                if(true)
                  break Success304;
              }
              term = term325;
            }
            Success306:
            { 
              if(cons46 == random_test._consAutoTest_2)
              { 
                Fail386:
                { 
                  IStrategoTerm k_239 = null;
                  IStrategoTerm l_239 = null;
                  IStrategoTerm n_239 = null;
                  k_239 = term;
                  IStrategoTerm arg157 = term.getSubterm(0);
                  if(arg157.getTermType() != IStrategoTerm.APPL || random_test._consATSettings_1 != ((IStrategoAppl)arg157).getConstructor())
                    break Fail386;
                  l_239 = arg157.getSubterm(0);
                  IStrategoTerm arg158 = term.getSubterm(1);
                  if(arg158.getTermType() != IStrategoTerm.APPL || random_test._consCOVSettings_1 != ((IStrategoAppl)arg158).getConstructor())
                    break Fail386;
                  n_239 = arg158.getSubterm(0);
                  IStrategoTerm term330 = term;
                  Success307:
                  { 
                    Fail387:
                    { 
                      term = map_1_0.instance.invoke(context, l_239, extract$S_0_0.instance);
                      if(term == null)
                        break Fail387;
                      term = map_1_0.instance.invoke(context, n_239, extract$S_0_0.instance);
                      if(term == null)
                        break Fail387;
                      if(true)
                        break Success307;
                    }
                    term = term330;
                    IStrategoTerm o_239 = null;
                    IStrategoTerm p_239 = null;
                    IStrategoTerm u_239 = null;
                    o_239 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail386;
                    p_239 = term;
                    u_239 = o_239;
                    term = report_with_failure_0_2.instance.invoke(context, u_239, random_test.const196, p_239);
                    if(term == null)
                      break Fail386;
                  }
                  term = k_239;
                  if(true)
                    break Success306;
                }
                term = term325;
              }
              IStrategoTerm g_239 = null;
              g_239 = term;
              term = write_to_string_0_0.instance.invoke(context, g_239);
              if(term == null)
                break Fail381;
              term = debug_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail381;
              term = g_239;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class extract$S_0_0_fragment_0 extends Strategy 
  { 
    public static extract$S_0_0_fragment_0 instance = new extract$S_0_0_fragment_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("extractS_0_0_fragment_0");
      Fail388:
      { 
        IStrategoTerm term331 = term;
        IStrategoConstructor cons47 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success308:
        { 
          if(cons47 == random_test._consMaxCount_1)
          { 
            Fail389:
            { 
              IStrategoTerm q_250 = null;
              IStrategoTerm r_250 = null;
              IStrategoTerm u_250 = null;
              q_250 = term;
              r_250 = term.getSubterm(0);
              IStrategoTerm term332 = term;
              Success309:
              { 
                Fail390:
                { 
                  IStrategoTerm v_250 = null;
                  IStrategoTerm w_250 = null;
                  IStrategoTerm b_251 = null;
                  IStrategoTerm c_251 = null;
                  IStrategoTerm e_251 = null;
                  IStrategoTerm f_251 = null;
                  IStrategoTerm g_251 = null;
                  term = string_to_int_0_0.instance.invoke(context, r_250);
                  if(term == null)
                    break Fail390;
                  u_250 = term;
                  v_250 = term;
                  term = u_250;
                  w_250 = u_250;
                  e_251 = term;
                  b_251 = random_test.const197;
                  f_251 = e_251;
                  c_251 = random_test.constCons0;
                  g_251 = f_251;
                  term = termFactory.makeTuple(random_test.const198, w_250);
                  term = dr_set_rule_0_3.instance.invoke(context, g_251, b_251, c_251, term);
                  if(term == null)
                    break Fail390;
                  term = v_250;
                  if(true)
                    break Success309;
                }
                term = term332;
                IStrategoTerm y_250 = null;
                IStrategoTerm z_250 = null;
                IStrategoTerm i_251 = null;
                y_250 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail389;
                z_250 = term;
                i_251 = y_250;
                term = report_with_failure_0_2.instance.invoke(context, i_251, random_test.const199, z_250);
                if(term == null)
                  break Fail389;
              }
              term = q_250;
              if(true)
                break Success308;
            }
            term = term331;
          }
          Success310:
          { 
            if(cons47 == random_test._consMaxIter_1)
            { 
              Fail391:
              { 
                IStrategoTerm u_249 = null;
                IStrategoTerm v_249 = null;
                IStrategoTerm w_249 = null;
                u_249 = term;
                v_249 = term.getSubterm(0);
                IStrategoTerm term334 = term;
                Success311:
                { 
                  Fail392:
                  { 
                    IStrategoTerm x_249 = null;
                    IStrategoTerm y_249 = null;
                    IStrategoTerm e_250 = null;
                    IStrategoTerm g_250 = null;
                    IStrategoTerm i_250 = null;
                    IStrategoTerm j_250 = null;
                    IStrategoTerm k_250 = null;
                    term = string_to_int_0_0.instance.invoke(context, v_249);
                    if(term == null)
                      break Fail392;
                    w_249 = term;
                    x_249 = term;
                    term = w_249;
                    y_249 = w_249;
                    i_250 = term;
                    e_250 = random_test.const200;
                    j_250 = i_250;
                    g_250 = random_test.constCons0;
                    k_250 = j_250;
                    term = termFactory.makeTuple(random_test.const201, y_249);
                    term = dr_set_rule_0_3.instance.invoke(context, k_250, e_250, g_250, term);
                    if(term == null)
                      break Fail392;
                    term = x_249;
                    if(true)
                      break Success311;
                  }
                  term = term334;
                  IStrategoTerm a_250 = null;
                  IStrategoTerm b_250 = null;
                  IStrategoTerm m_250 = null;
                  a_250 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail391;
                  b_250 = term;
                  m_250 = a_250;
                  term = report_with_failure_0_2.instance.invoke(context, m_250, random_test.const199, b_250);
                  if(term == null)
                    break Fail391;
                }
                term = u_249;
                if(true)
                  break Success310;
              }
              term = term331;
            }
            Success312:
            { 
              if(cons47 == random_test._consMaxRec_1)
              { 
                Fail393:
                { 
                  IStrategoTerm y_248 = null;
                  IStrategoTerm z_248 = null;
                  IStrategoTerm a_249 = null;
                  y_248 = term;
                  z_248 = term.getSubterm(0);
                  IStrategoTerm term336 = term;
                  Success313:
                  { 
                    Fail394:
                    { 
                      IStrategoTerm b_249 = null;
                      IStrategoTerm c_249 = null;
                      IStrategoTerm i_249 = null;
                      IStrategoTerm j_249 = null;
                      IStrategoTerm m_249 = null;
                      IStrategoTerm n_249 = null;
                      IStrategoTerm o_249 = null;
                      term = string_to_int_0_0.instance.invoke(context, z_248);
                      if(term == null)
                        break Fail394;
                      a_249 = term;
                      b_249 = term;
                      term = a_249;
                      c_249 = a_249;
                      m_249 = term;
                      i_249 = random_test.const202;
                      n_249 = m_249;
                      j_249 = random_test.constCons0;
                      o_249 = n_249;
                      term = termFactory.makeTuple(random_test.const203, c_249);
                      term = dr_set_rule_0_3.instance.invoke(context, o_249, i_249, j_249, term);
                      if(term == null)
                        break Fail394;
                      term = b_249;
                      if(true)
                        break Success313;
                    }
                    term = term336;
                    IStrategoTerm f_249 = null;
                    IStrategoTerm g_249 = null;
                    IStrategoTerm q_249 = null;
                    f_249 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail393;
                    g_249 = term;
                    q_249 = f_249;
                    term = report_with_failure_0_2.instance.invoke(context, q_249, random_test.const199, g_249);
                    if(term == null)
                      break Fail393;
                  }
                  term = y_248;
                  if(true)
                    break Success312;
                }
                term = term331;
              }
              Success314:
              { 
                if(cons47 == random_test._consErrorCorrection_4)
                { 
                  Fail395:
                  { 
                    IStrategoTerm l_247 = null;
                    IStrategoTerm m_247 = null;
                    IStrategoTerm n_247 = null;
                    IStrategoTerm o_247 = null;
                    IStrategoTerm q_247 = null;
                    IStrategoTerm r_247 = null;
                    l_247 = term;
                    q_247 = term.getSubterm(0);
                    m_247 = term.getSubterm(1);
                    r_247 = term.getSubterm(2);
                    o_247 = term.getSubterm(3);
                    IStrategoTerm term338 = term;
                    Success315:
                    { 
                      Fail396:
                      { 
                        IStrategoTerm s_247 = null;
                        IStrategoTerm c_248 = null;
                        IStrategoTerm e_248 = null;
                        IStrategoTerm f_248 = null;
                        IStrategoTerm t_247 = null;
                        IStrategoTerm g_248 = null;
                        IStrategoTerm i_248 = null;
                        IStrategoTerm j_248 = null;
                        IStrategoTerm u_247 = null;
                        IStrategoTerm k_248 = null;
                        IStrategoTerm n_248 = null;
                        IStrategoTerm o_248 = null;
                        term = un_double_quote_0_0.instance.invoke(context, m_247);
                        if(term == null)
                          break Fail396;
                        n_247 = term;
                        s_247 = term;
                        e_248 = term;
                        c_248 = random_test.const204;
                        f_248 = e_248;
                        term = termFactory.makeTuple(random_test.const205, n_247);
                        term = dr_set_rule_0_3.instance.invoke(context, f_248, c_248, q_247, term);
                        if(term == null)
                          break Fail396;
                        term = s_247;
                        t_247 = s_247;
                        i_248 = term;
                        g_248 = random_test.const206;
                        j_248 = i_248;
                        term = termFactory.makeTuple(random_test.const207, o_247);
                        term = dr_set_rule_0_3.instance.invoke(context, j_248, g_248, q_247, term);
                        if(term == null)
                          break Fail396;
                        term = t_247;
                        u_247 = t_247;
                        n_248 = term;
                        k_248 = random_test.const208;
                        o_248 = n_248;
                        term = termFactory.makeTuple(random_test.const209, r_247);
                        term = dr_set_rule_0_3.instance.invoke(context, o_248, k_248, q_247, term);
                        if(term == null)
                          break Fail396;
                        term = u_247;
                        if(true)
                          break Success315;
                      }
                      term = term338;
                      IStrategoTerm v_247 = null;
                      IStrategoTerm y_247 = null;
                      IStrategoTerm s_248 = null;
                      v_247 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail395;
                      y_247 = term;
                      s_248 = v_247;
                      term = report_with_failure_0_2.instance.invoke(context, s_248, random_test.const199, y_247);
                      if(term == null)
                        break Fail395;
                    }
                    term = l_247;
                    if(true)
                      break Success314;
                  }
                  term = term331;
                }
                Success316:
                { 
                  if(cons47 == random_test._consTerminalPoolSize_1)
                  { 
                    Fail397:
                    { 
                      IStrategoTerm l_246 = null;
                      IStrategoTerm m_246 = null;
                      IStrategoTerm n_246 = null;
                      l_246 = term;
                      m_246 = term.getSubterm(0);
                      IStrategoTerm term340 = term;
                      Success317:
                      { 
                        Fail398:
                        { 
                          IStrategoTerm o_246 = null;
                          IStrategoTerm q_246 = null;
                          IStrategoTerm w_246 = null;
                          IStrategoTerm x_246 = null;
                          IStrategoTerm z_246 = null;
                          IStrategoTerm b_247 = null;
                          IStrategoTerm c_247 = null;
                          term = string_to_int_0_0.instance.invoke(context, m_246);
                          if(term == null)
                            break Fail398;
                          n_246 = term;
                          o_246 = term;
                          term = n_246;
                          q_246 = n_246;
                          z_246 = term;
                          w_246 = random_test.const210;
                          b_247 = z_246;
                          x_246 = random_test.constCons0;
                          c_247 = b_247;
                          term = termFactory.makeTuple(random_test.const211, q_246);
                          term = dr_set_rule_0_3.instance.invoke(context, c_247, w_246, x_246, term);
                          if(term == null)
                            break Fail398;
                          term = o_246;
                          if(true)
                            break Success317;
                        }
                        term = term340;
                        IStrategoTerm s_246 = null;
                        IStrategoTerm t_246 = null;
                        IStrategoTerm f_247 = null;
                        s_246 = term;
                        term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                        if(term == null)
                          break Fail397;
                        t_246 = term;
                        f_247 = s_246;
                        term = report_with_failure_0_2.instance.invoke(context, f_247, random_test.const199, t_246);
                        if(term == null)
                          break Fail397;
                      }
                      term = l_246;
                      if(true)
                        break Success316;
                    }
                    term = term331;
                  }
                  Success318:
                  { 
                    if(cons47 == random_test._consNumberOfRuns_1)
                    { 
                      Fail399:
                      { 
                        IStrategoTerm q_245 = null;
                        IStrategoTerm r_245 = null;
                        IStrategoTerm s_245 = null;
                        q_245 = term;
                        r_245 = term.getSubterm(0);
                        IStrategoTerm term342 = term;
                        Success319:
                        { 
                          Fail400:
                          { 
                            IStrategoTerm t_245 = null;
                            IStrategoTerm u_245 = null;
                            IStrategoTerm a_246 = null;
                            IStrategoTerm b_246 = null;
                            IStrategoTerm d_246 = null;
                            IStrategoTerm e_246 = null;
                            IStrategoTerm f_246 = null;
                            term = string_to_int_0_0.instance.invoke(context, r_245);
                            if(term == null)
                              break Fail400;
                            s_245 = term;
                            t_245 = term;
                            term = s_245;
                            u_245 = s_245;
                            d_246 = term;
                            a_246 = random_test.const212;
                            e_246 = d_246;
                            b_246 = random_test.constCons0;
                            f_246 = e_246;
                            term = termFactory.makeTuple(random_test.const213, u_245);
                            term = dr_set_rule_0_3.instance.invoke(context, f_246, a_246, b_246, term);
                            if(term == null)
                              break Fail400;
                            term = t_245;
                            if(true)
                              break Success319;
                          }
                          term = term342;
                          IStrategoTerm w_245 = null;
                          IStrategoTerm y_245 = null;
                          IStrategoTerm h_246 = null;
                          w_245 = term;
                          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                          if(term == null)
                            break Fail399;
                          y_245 = term;
                          h_246 = w_245;
                          term = report_with_failure_0_2.instance.invoke(context, h_246, random_test.const199, y_245);
                          if(term == null)
                            break Fail399;
                        }
                        term = q_245;
                        if(true)
                          break Success318;
                      }
                      term = term331;
                    }
                    Success320:
                    { 
                      if(cons47 == random_test._consTargetLanguage_1)
                      { 
                        Fail401:
                        { 
                          IStrategoTerm t_244 = null;
                          IStrategoTerm v_244 = null;
                          t_244 = term;
                          v_244 = term.getSubterm(0);
                          IStrategoTerm term344 = term;
                          Success321:
                          { 
                            Fail402:
                            { 
                              IStrategoTerm x_244 = null;
                              IStrategoTerm y_244 = null;
                              IStrategoTerm d_245 = null;
                              IStrategoTerm e_245 = null;
                              IStrategoTerm g_245 = null;
                              IStrategoTerm h_245 = null;
                              IStrategoTerm i_245 = null;
                              x_244 = term;
                              term = v_244;
                              y_244 = v_244;
                              g_245 = term;
                              d_245 = random_test.const5;
                              h_245 = g_245;
                              e_245 = random_test.constCons0;
                              i_245 = h_245;
                              term = termFactory.makeTuple(random_test.const6, y_244);
                              term = dr_set_rule_0_3.instance.invoke(context, i_245, d_245, e_245, term);
                              if(term == null)
                                break Fail402;
                              term = x_244;
                              if(true)
                                break Success321;
                            }
                            term = term344;
                            IStrategoTerm a_245 = null;
                            IStrategoTerm b_245 = null;
                            IStrategoTerm l_245 = null;
                            a_245 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail401;
                            b_245 = term;
                            l_245 = a_245;
                            term = report_with_failure_0_2.instance.invoke(context, l_245, random_test.const199, b_245);
                            if(term == null)
                              break Fail401;
                          }
                          term = t_244;
                          if(true)
                            break Success320;
                        }
                        term = term331;
                      }
                      Success322:
                      { 
                        if(cons47 == random_test._consTargetStrategy_2)
                        { 
                          Fail403:
                          { 
                            IStrategoTerm n_243 = null;
                            IStrategoTerm o_243 = null;
                            IStrategoTerm p_243 = null;
                            IStrategoTerm q_243 = null;
                            n_243 = term;
                            p_243 = term.getSubterm(0);
                            o_243 = term.getSubterm(1);
                            IStrategoTerm term346 = term;
                            Success323:
                            { 
                              Fail404:
                              { 
                                IStrategoTerm r_243 = null;
                                IStrategoTerm s_243 = null;
                                IStrategoTerm b_244 = null;
                                IStrategoTerm c_244 = null;
                                IStrategoTerm e_244 = null;
                                IStrategoTerm f_244 = null;
                                IStrategoTerm g_244 = null;
                                IStrategoTerm v_243 = null;
                                IStrategoTerm w_243 = null;
                                IStrategoTerm h_244 = null;
                                IStrategoTerm i_244 = null;
                                IStrategoTerm k_244 = null;
                                IStrategoTerm l_244 = null;
                                IStrategoTerm m_244 = null;
                                term = un_double_quote_0_0.instance.invoke(context, o_243);
                                if(term == null)
                                  break Fail404;
                                q_243 = term;
                                r_243 = term;
                                term = p_243;
                                s_243 = p_243;
                                e_244 = term;
                                b_244 = random_test.const214;
                                f_244 = e_244;
                                c_244 = random_test.constCons0;
                                g_244 = f_244;
                                term = termFactory.makeTuple(random_test.const215, s_243);
                                term = dr_set_rule_0_3.instance.invoke(context, g_244, b_244, c_244, term);
                                if(term == null)
                                  break Fail404;
                                v_243 = r_243;
                                term = q_243;
                                w_243 = q_243;
                                k_244 = term;
                                h_244 = random_test.const216;
                                l_244 = k_244;
                                i_244 = random_test.constCons0;
                                m_244 = l_244;
                                term = termFactory.makeTuple(random_test.const217, w_243);
                                term = dr_set_rule_0_3.instance.invoke(context, m_244, h_244, i_244, term);
                                if(term == null)
                                  break Fail404;
                                term = v_243;
                                if(true)
                                  break Success323;
                              }
                              term = term346;
                              IStrategoTerm y_243 = null;
                              IStrategoTerm z_243 = null;
                              IStrategoTerm o_244 = null;
                              y_243 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail403;
                              z_243 = term;
                              o_244 = y_243;
                              term = report_with_failure_0_2.instance.invoke(context, o_244, random_test.const199, z_243);
                              if(term == null)
                                break Fail403;
                            }
                            term = n_243;
                            if(true)
                              break Success322;
                          }
                          term = term331;
                        }
                        Success324:
                        { 
                          if(cons47 == random_test._consCoveredFiles_1)
                          { 
                            Fail405:
                            { 
                              IStrategoTerm r_242 = null;
                              IStrategoTerm s_242 = null;
                              IStrategoTerm t_242 = null;
                              r_242 = term;
                              s_242 = term.getSubterm(0);
                              IStrategoTerm term348 = term;
                              Success325:
                              { 
                                Fail406:
                                { 
                                  IStrategoTerm u_242 = null;
                                  IStrategoTerm v_242 = null;
                                  IStrategoTerm a_243 = null;
                                  IStrategoTerm b_243 = null;
                                  IStrategoTerm d_243 = null;
                                  IStrategoTerm e_243 = null;
                                  IStrategoTerm f_243 = null;
                                  term = map_1_0.instance.invoke(context, s_242, un_double_quote_0_0.instance);
                                  if(term == null)
                                    break Fail406;
                                  t_242 = term;
                                  u_242 = term;
                                  term = t_242;
                                  v_242 = t_242;
                                  d_243 = term;
                                  a_243 = random_test.const218;
                                  e_243 = d_243;
                                  b_243 = random_test.constCons0;
                                  f_243 = e_243;
                                  term = termFactory.makeTuple(random_test.const219, v_242);
                                  term = dr_set_rule_0_3.instance.invoke(context, f_243, a_243, b_243, term);
                                  if(term == null)
                                    break Fail406;
                                  term = u_242;
                                  if(true)
                                    break Success325;
                                }
                                term = term348;
                                IStrategoTerm x_242 = null;
                                IStrategoTerm y_242 = null;
                                IStrategoTerm h_243 = null;
                                x_242 = term;
                                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                if(term == null)
                                  break Fail405;
                                y_242 = term;
                                h_243 = x_242;
                                term = report_with_failure_0_2.instance.invoke(context, h_243, random_test.const199, y_242);
                                if(term == null)
                                  break Fail405;
                              }
                              term = r_242;
                              if(true)
                                break Success324;
                            }
                            term = term331;
                          }
                          Success326:
                          { 
                            if(cons47 == random_test._consIgnoreSorts_1)
                            { 
                              Fail407:
                              { 
                                IStrategoTerm x_241 = null;
                                IStrategoTerm z_241 = null;
                                x_241 = term;
                                z_241 = term.getSubterm(0);
                                IStrategoTerm term350 = term;
                                Success327:
                                { 
                                  Fail408:
                                  { 
                                    term = map_1_0.instance.invoke(context, z_241, un_double_quote_0_0.instance);
                                    if(term == null)
                                      break Fail408;
                                    term = map_1_0.instance.invoke(context, term, lifted428.instance);
                                    if(term == null)
                                      break Fail408;
                                    if(true)
                                      break Success327;
                                  }
                                  term = term350;
                                  IStrategoTerm d_242 = null;
                                  IStrategoTerm e_242 = null;
                                  IStrategoTerm n_242 = null;
                                  d_242 = term;
                                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                  if(term == null)
                                    break Fail407;
                                  e_242 = term;
                                  n_242 = d_242;
                                  term = report_with_failure_0_2.instance.invoke(context, n_242, random_test.const199, e_242);
                                  if(term == null)
                                    break Fail407;
                                }
                                term = x_241;
                                if(true)
                                  break Success326;
                              }
                              term = term331;
                            }
                            if(cons47 == random_test._consTestFolder_1)
                            { 
                              IStrategoTerm w_240 = null;
                              IStrategoTerm x_240 = null;
                              IStrategoTerm y_240 = null;
                              w_240 = term;
                              x_240 = term.getSubterm(0);
                              IStrategoTerm term351 = term;
                              Success328:
                              { 
                                Fail409:
                                { 
                                  IStrategoTerm z_240 = null;
                                  IStrategoTerm a_241 = null;
                                  IStrategoTerm j_241 = null;
                                  IStrategoTerm k_241 = null;
                                  IStrategoTerm m_241 = null;
                                  IStrategoTerm n_241 = null;
                                  IStrategoTerm o_241 = null;
                                  term = un_double_quote_0_0.instance.invoke(context, x_240);
                                  if(term == null)
                                    break Fail409;
                                  y_240 = term;
                                  z_240 = term;
                                  term = y_240;
                                  a_241 = y_240;
                                  m_241 = term;
                                  j_241 = random_test.const222;
                                  n_241 = m_241;
                                  k_241 = random_test.constCons0;
                                  o_241 = n_241;
                                  term = termFactory.makeTuple(random_test.const223, a_241);
                                  term = dr_set_rule_0_3.instance.invoke(context, o_241, j_241, k_241, term);
                                  if(term == null)
                                    break Fail409;
                                  term = z_240;
                                  if(true)
                                    break Success328;
                                }
                                term = term351;
                                IStrategoTerm d_241 = null;
                                IStrategoTerm e_241 = null;
                                IStrategoTerm s_241 = null;
                                d_241 = term;
                                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                if(term == null)
                                  break Fail388;
                                e_241 = term;
                                s_241 = d_241;
                                term = report_with_failure_0_2.instance.invoke(context, s_241, random_test.const199, e_241);
                                if(term == null)
                                  break Fail388;
                              }
                              term = w_240;
                            }
                            else
                            { 
                              break Fail388;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class extract$S_0_0 extends Strategy 
  { 
    public static extract$S_0_0 instance = new extract$S_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("extractS_0_0");
      Fail410:
      { 
        IStrategoTerm term352 = term;
        Success329:
        { 
          Fail411:
          { 
            IStrategoTerm n_251 = null;
            IStrategoTerm o_251 = null;
            n_251 = term;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consATtag_1 != ((IStrategoAppl)term).getConstructor())
              break Fail411;
            o_251 = term.getSubterm(0);
            IStrategoTerm term353 = term;
            Success330:
            { 
              Fail412:
              { 
                IStrategoTerm p_251 = null;
                IStrategoTerm q_251 = null;
                IStrategoTerm y_251 = null;
                IStrategoTerm z_251 = null;
                IStrategoTerm b_252 = null;
                IStrategoTerm c_252 = null;
                IStrategoTerm d_252 = null;
                p_251 = term;
                term = o_251;
                q_251 = o_251;
                b_252 = term;
                y_251 = random_test.const224;
                c_252 = b_252;
                z_251 = random_test.constCons0;
                d_252 = c_252;
                term = termFactory.makeTuple(random_test.const225, q_251);
                term = dr_set_rule_0_3.instance.invoke(context, d_252, y_251, z_251, term);
                if(term == null)
                  break Fail412;
                term = p_251;
                if(true)
                  break Success330;
              }
              term = term353;
              IStrategoTerm v_251 = null;
              IStrategoTerm w_251 = null;
              IStrategoTerm f_252 = null;
              v_251 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail411;
              w_251 = term;
              f_252 = v_251;
              term = report_with_failure_0_2.instance.invoke(context, f_252, random_test.const199, w_251);
              if(term == null)
                break Fail411;
            }
            term = n_251;
            if(true)
              break Success329;
          }
          term = term352;
          term = extract$S_0_0_fragment_0.instance.invoke(context, term);
          if(term == null)
            break Fail410;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class build_xeger_0_0_fragment_0 extends Strategy 
  { 
    public static build_xeger_0_0_fragment_0 instance = new build_xeger_0_0_fragment_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("build_xeger_0_0_fragment_0");
      Fail413:
      { 
        IStrategoTerm term354 = term;
        IStrategoConstructor cons49 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success331:
        { 
          if(cons49 == random_test._conspresent_1)
          { 
            Fail414:
            { 
              IStrategoTerm e_259 = null;
              IStrategoTerm f_259 = null;
              IStrategoTerm s_259 = null;
              IStrategoTerm n_259 = null;
              IStrategoTerm p_259 = null;
              IStrategoTerm r_259 = null;
              e_259 = term.getSubterm(0);
              s_259 = term;
              IStrategoTerm term355 = term;
              Success332:
              { 
                Fail415:
                { 
                  term = build_xeger_0_0.instance.invoke(context, e_259);
                  if(term == null)
                    break Fail415;
                  f_259 = term;
                  if(true)
                    break Success332;
                }
                term = term355;
                IStrategoTerm g_259 = null;
                IStrategoTerm h_259 = null;
                IStrategoTerm u_259 = null;
                g_259 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail414;
                h_259 = term;
                u_259 = g_259;
                term = report_with_failure_0_2.instance.invoke(context, u_259, random_test.const226, h_259);
                if(term == null)
                  break Fail414;
              }
              term = s_259;
              if(f_259 == null)
                break Fail414;
              term = f_259;
              IStrategoTerm term356 = term;
              Success333:
              { 
                Fail416:
                { 
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail416;
                  if(true)
                    break Success333;
                }
                term = term356;
                IStrategoTerm term357 = term;
                Success334:
                { 
                  Fail417:
                  { 
                    term = is_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail417;
                    if(true)
                      break Success334;
                  }
                  term = term357;
                  IStrategoTerm term358 = term;
                  Success335:
                  { 
                    Fail418:
                    { 
                      term = int_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail418;
                      if(true)
                        break Success335;
                    }
                    term = term358;
                    IStrategoTerm term359 = term;
                    Success336:
                    { 
                      Fail419:
                      { 
                        term = real_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail419;
                        if(true)
                          break Success336;
                      }
                      term = term359;
                      IStrategoTerm i_259 = null;
                      IStrategoTerm k_259 = null;
                      IStrategoTerm m_259 = null;
                      i_259 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail414;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail414;
                      k_259 = ((IStrategoList)term).tail();
                      m_259 = k_259;
                      term = report_failure_0_2.instance.invoke(context, m_259, random_test.const227, i_259);
                      if(term == null)
                        break Fail414;
                    }
                  }
                }
              }
              p_259 = term;
              n_259 = random_test.const8;
              r_259 = p_259;
              term = string_replace_0_2.instance.invoke(context, r_259, n_259, random_test.const8);
              if(term == null)
                break Fail414;
              term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constNil0);
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail414;
              term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
              if(true)
                break Success331;
            }
            term = term354;
          }
          Success337:
          { 
            if(cons49 == random_test._conssimple_charclass_1)
            { 
              Fail420:
              { 
                IStrategoTerm f_258 = null;
                IStrategoTerm g_258 = null;
                IStrategoTerm t_258 = null;
                IStrategoTerm n_258 = null;
                IStrategoTerm r_258 = null;
                IStrategoTerm s_258 = null;
                f_258 = term.getSubterm(0);
                t_258 = term;
                IStrategoTerm term361 = term;
                Success338:
                { 
                  Fail421:
                  { 
                    term = build_xeger_0_0.instance.invoke(context, f_258);
                    if(term == null)
                      break Fail421;
                    g_258 = term;
                    if(true)
                      break Success338;
                  }
                  term = term361;
                  IStrategoTerm h_258 = null;
                  IStrategoTerm i_258 = null;
                  IStrategoTerm v_258 = null;
                  h_258 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail420;
                  i_258 = term;
                  v_258 = h_258;
                  term = report_with_failure_0_2.instance.invoke(context, v_258, random_test.const226, i_258);
                  if(term == null)
                    break Fail420;
                }
                term = t_258;
                if(g_258 == null)
                  break Fail420;
                term = g_258;
                IStrategoTerm term362 = term;
                Success339:
                { 
                  Fail422:
                  { 
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail422;
                    if(true)
                      break Success339;
                  }
                  term = term362;
                  IStrategoTerm term363 = term;
                  Success340:
                  { 
                    Fail423:
                    { 
                      term = is_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail423;
                      if(true)
                        break Success340;
                    }
                    term = term363;
                    IStrategoTerm term364 = term;
                    Success341:
                    { 
                      Fail424:
                      { 
                        term = int_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail424;
                        if(true)
                          break Success341;
                      }
                      term = term364;
                      IStrategoTerm term365 = term;
                      Success342:
                      { 
                        Fail425:
                        { 
                          term = real_to_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail425;
                          if(true)
                            break Success342;
                        }
                        term = term365;
                        IStrategoTerm j_258 = null;
                        IStrategoTerm k_258 = null;
                        IStrategoTerm m_258 = null;
                        j_258 = term;
                        term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                        if(term == null)
                          break Fail420;
                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                          break Fail420;
                        k_258 = ((IStrategoList)term).tail();
                        m_258 = k_258;
                        term = report_failure_0_2.instance.invoke(context, m_258, random_test.const227, j_258);
                        if(term == null)
                          break Fail420;
                      }
                    }
                  }
                }
                r_258 = term;
                n_258 = random_test.const8;
                s_258 = r_258;
                term = string_replace_0_2.instance.invoke(context, s_258, n_258, random_test.const228);
                if(term == null)
                  break Fail420;
                term = (IStrategoTerm)termFactory.makeListCons(random_test.const230, termFactory.makeListCons(term, (IStrategoList)random_test.constCons47));
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail420;
                term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                if(true)
                  break Success337;
              }
              term = term354;
            }
            Success343:
            { 
              if(cons49 == random_test._conschar_class_1)
              { 
                Fail426:
                { 
                  IStrategoTerm v_257 = null;
                  IStrategoTerm w_257 = null;
                  IStrategoTerm a_258 = null;
                  v_257 = term.getSubterm(0);
                  a_258 = term;
                  IStrategoTerm term367 = term;
                  Success344:
                  { 
                    Fail427:
                    { 
                      term = build_xeger_0_0.instance.invoke(context, v_257);
                      if(term == null)
                        break Fail427;
                      w_257 = term;
                      if(true)
                        break Success344;
                    }
                    term = term367;
                    IStrategoTerm x_257 = null;
                    IStrategoTerm y_257 = null;
                    IStrategoTerm c_258 = null;
                    x_257 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail426;
                    y_257 = term;
                    c_258 = x_257;
                    term = report_with_failure_0_2.instance.invoke(context, c_258, random_test.const226, y_257);
                    if(term == null)
                      break Fail426;
                  }
                  term = a_258;
                  if(w_257 == null)
                    break Fail426;
                  term = w_257;
                  if(true)
                    break Success343;
                }
                term = term354;
              }
              Success345:
              { 
                if(cons49 == random_test._consopt_1)
                { 
                  Fail428:
                  { 
                    IStrategoTerm x_256 = null;
                    IStrategoTerm y_256 = null;
                    IStrategoTerm l_257 = null;
                    IStrategoTerm h_257 = null;
                    IStrategoTerm j_257 = null;
                    IStrategoTerm k_257 = null;
                    x_256 = term.getSubterm(0);
                    l_257 = term;
                    IStrategoTerm term369 = term;
                    Success346:
                    { 
                      Fail429:
                      { 
                        term = build_xeger_0_0.instance.invoke(context, x_256);
                        if(term == null)
                          break Fail429;
                        y_256 = term;
                        if(true)
                          break Success346;
                      }
                      term = term369;
                      IStrategoTerm a_257 = null;
                      IStrategoTerm b_257 = null;
                      IStrategoTerm o_257 = null;
                      a_257 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail428;
                      b_257 = term;
                      o_257 = a_257;
                      term = report_with_failure_0_2.instance.invoke(context, o_257, random_test.const226, b_257);
                      if(term == null)
                        break Fail428;
                    }
                    term = l_257;
                    if(y_256 == null)
                      break Fail428;
                    term = y_256;
                    IStrategoTerm term370 = term;
                    Success347:
                    { 
                      Fail430:
                      { 
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail430;
                        if(true)
                          break Success347;
                      }
                      term = term370;
                      IStrategoTerm term371 = term;
                      Success348:
                      { 
                        Fail431:
                        { 
                          term = is_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail431;
                          if(true)
                            break Success348;
                        }
                        term = term371;
                        IStrategoTerm term372 = term;
                        Success349:
                        { 
                          Fail432:
                          { 
                            term = int_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail432;
                            if(true)
                              break Success349;
                          }
                          term = term372;
                          IStrategoTerm term373 = term;
                          Success350:
                          { 
                            Fail433:
                            { 
                              term = real_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail433;
                              if(true)
                                break Success350;
                            }
                            term = term373;
                            IStrategoTerm c_257 = null;
                            IStrategoTerm d_257 = null;
                            IStrategoTerm f_257 = null;
                            c_257 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail428;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail428;
                            d_257 = ((IStrategoList)term).tail();
                            f_257 = d_257;
                            term = report_failure_0_2.instance.invoke(context, f_257, random_test.const227, c_257);
                            if(term == null)
                              break Fail428;
                          }
                        }
                      }
                    }
                    j_257 = term;
                    h_257 = random_test.const8;
                    k_257 = j_257;
                    term = string_replace_0_2.instance.invoke(context, k_257, h_257, random_test.const228);
                    if(term == null)
                      break Fail428;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const232, termFactory.makeListCons(term, (IStrategoList)random_test.constCons48));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail428;
                    term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                    if(true)
                      break Success345;
                  }
                  term = term354;
                }
                Success351:
                { 
                  if(cons49 == random_test._consnumeric_1)
                  { 
                    Fail434:
                    { 
                      IStrategoTerm o_256 = null;
                      o_256 = term.getSubterm(0);
                      IStrategoTerm term375 = term;
                      Success352:
                      { 
                        Fail435:
                        { 
                          term = debug_0_0.instance.invoke(context, random_test.const233);
                          if(term == null)
                            break Fail435;
                          if(true)
                            break Success352;
                        }
                        term = term375;
                        IStrategoTerm p_256 = null;
                        IStrategoTerm q_256 = null;
                        IStrategoTerm u_256 = null;
                        p_256 = term;
                        term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                        if(term == null)
                          break Fail434;
                        q_256 = term;
                        u_256 = p_256;
                        term = report_with_failure_0_2.instance.invoke(context, u_256, random_test.const226, q_256);
                        if(term == null)
                          break Fail434;
                      }
                      term = o_256;
                      if(true)
                        break Success351;
                    }
                    term = term354;
                  }
                  Success353:
                  { 
                    if(cons49 == random_test._conslit_1)
                    { 
                      Fail436:
                      { 
                        IStrategoTerm q_255 = null;
                        IStrategoTerm r_255 = null;
                        IStrategoTerm e_256 = null;
                        IStrategoTerm y_255 = null;
                        IStrategoTerm b_256 = null;
                        IStrategoTerm c_256 = null;
                        q_255 = term.getSubterm(0);
                        e_256 = term;
                        IStrategoTerm term377 = term;
                        Success354:
                        { 
                          Fail437:
                          { 
                            term = escape_lit_string_0_0.instance.invoke(context, q_255);
                            if(term == null)
                              break Fail437;
                            r_255 = term;
                            if(true)
                              break Success354;
                          }
                          term = term377;
                          IStrategoTerm s_255 = null;
                          IStrategoTerm t_255 = null;
                          IStrategoTerm g_256 = null;
                          s_255 = term;
                          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                          if(term == null)
                            break Fail436;
                          t_255 = term;
                          g_256 = s_255;
                          term = report_with_failure_0_2.instance.invoke(context, g_256, random_test.const226, t_255);
                          if(term == null)
                            break Fail436;
                        }
                        term = e_256;
                        if(r_255 == null)
                          break Fail436;
                        term = r_255;
                        IStrategoTerm term378 = term;
                        Success355:
                        { 
                          Fail438:
                          { 
                            term = concat_strings_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail438;
                            if(true)
                              break Success355;
                          }
                          term = term378;
                          IStrategoTerm term379 = term;
                          Success356:
                          { 
                            Fail439:
                            { 
                              term = is_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail439;
                              if(true)
                                break Success356;
                            }
                            term = term379;
                            IStrategoTerm term380 = term;
                            Success357:
                            { 
                              Fail440:
                              { 
                                term = int_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail440;
                                if(true)
                                  break Success357;
                              }
                              term = term380;
                              IStrategoTerm term381 = term;
                              Success358:
                              { 
                                Fail441:
                                { 
                                  term = real_to_string_0_0.instance.invoke(context, term);
                                  if(term == null)
                                    break Fail441;
                                  if(true)
                                    break Success358;
                                }
                                term = term381;
                                IStrategoTerm u_255 = null;
                                IStrategoTerm v_255 = null;
                                IStrategoTerm x_255 = null;
                                u_255 = term;
                                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                if(term == null)
                                  break Fail436;
                                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                  break Fail436;
                                v_255 = ((IStrategoList)term).tail();
                                x_255 = v_255;
                                term = report_failure_0_2.instance.invoke(context, x_255, random_test.const227, u_255);
                                if(term == null)
                                  break Fail436;
                              }
                            }
                          }
                        }
                        b_256 = term;
                        y_255 = random_test.const8;
                        c_256 = b_256;
                        term = string_replace_0_2.instance.invoke(context, c_256, y_255, random_test.const8);
                        if(term == null)
                          break Fail436;
                        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constNil0);
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail436;
                        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                        if(true)
                          break Success353;
                      }
                      term = term354;
                    }
                    IStrategoTerm term382 = term;
                    Success359:
                    { 
                      Fail442:
                      { 
                        IStrategoTerm e_255 = null;
                        IStrategoTerm g_255 = null;
                        IStrategoTerm k_255 = null;
                        IStrategoTerm term383 = term;
                        IStrategoConstructor cons50 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
                        Success360:
                        { 
                          if(cons50 == random_test._consparameterized_sort_2)
                          { 
                            Fail443:
                            { 
                              e_255 = term;
                              if(true)
                                break Success360;
                            }
                            term = term383;
                          }
                          if(cons50 == random_test._conssort_1)
                          { 
                            e_255 = term;
                          }
                          else
                          { 
                            break Fail442;
                          }
                        }
                        k_255 = term;
                        IStrategoTerm term384 = term;
                        Success361:
                        { 
                          Fail444:
                          { 
                            term = recognize_sort_0_0.instance.invoke(context, e_255);
                            if(term == null)
                              break Fail444;
                            term = build_xeger_sort_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail444;
                            g_255 = term;
                            if(true)
                              break Success361;
                          }
                          term = term384;
                          IStrategoTerm h_255 = null;
                          IStrategoTerm i_255 = null;
                          IStrategoTerm n_255 = null;
                          h_255 = term;
                          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                          if(term == null)
                            break Fail442;
                          i_255 = term;
                          n_255 = h_255;
                          term = report_with_failure_0_2.instance.invoke(context, n_255, random_test.const226, i_255);
                          if(term == null)
                            break Fail442;
                        }
                        term = k_255;
                        if(g_255 == null)
                          break Fail442;
                        term = g_255;
                        if(true)
                          break Success359;
                      }
                      term = term382;
                      IStrategoTerm term385 = term;
                      IStrategoConstructor cons51 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
                      Success362:
                      { 
                        if(cons51 == random_test._conscomp_1)
                        { 
                          Fail445:
                          { 
                            IStrategoTerm s_254 = null;
                            IStrategoTerm u_254 = null;
                            IStrategoTerm y_254 = null;
                            s_254 = term.getSubterm(0);
                            y_254 = term;
                            IStrategoTerm term386 = term;
                            Success363:
                            { 
                              Fail446:
                              { 
                                term = build_xeger_0_0.instance.invoke(context, s_254);
                                if(term == null)
                                  break Fail446;
                                term = (IStrategoTerm)termFactory.makeListCons(random_test.const235, termFactory.makeListCons(term, (IStrategoList)random_test.constCons49));
                                term = concat_strings_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail446;
                                u_254 = term;
                                if(true)
                                  break Success363;
                              }
                              term = term386;
                              IStrategoTerm v_254 = null;
                              IStrategoTerm x_254 = null;
                              IStrategoTerm b_255 = null;
                              v_254 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail445;
                              x_254 = term;
                              b_255 = v_254;
                              term = report_with_failure_0_2.instance.invoke(context, b_255, random_test.const226, x_254);
                              if(term == null)
                                break Fail445;
                            }
                            term = y_254;
                            if(u_254 == null)
                              break Fail445;
                            term = u_254;
                            if(true)
                              break Success362;
                          }
                          term = term385;
                        }
                        Success364:
                        { 
                          if(cons51 == random_test._consalt_2)
                          { 
                            Fail447:
                            { 
                              IStrategoTerm d_253 = null;
                              IStrategoTerm e_253 = null;
                              IStrategoTerm f_253 = null;
                              IStrategoTerm g_253 = null;
                              IStrategoTerm h_253 = null;
                              IStrategoTerm g_254 = null;
                              d_253 = term.getSubterm(0);
                              e_253 = term.getSubterm(1);
                              g_254 = term;
                              IStrategoTerm term388 = term;
                              Success365:
                              { 
                                Fail448:
                                { 
                                  term = build_xeger_0_0.instance.invoke(context, d_253);
                                  if(term == null)
                                    break Fail448;
                                  f_253 = term;
                                  term = build_xeger_0_0.instance.invoke(context, e_253);
                                  if(term == null)
                                    break Fail448;
                                  g_253 = term;
                                  IStrategoTerm term389 = term;
                                  Success366:
                                  { 
                                    Fail449:
                                    { 
                                      IStrategoTerm i_253 = null;
                                      i_253 = term;
                                      term = f_253;
                                      if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
                                        break Fail449;
                                      term = i_253;
                                      { 
                                        Success367:
                                        { 
                                          Fail450:
                                          { 
                                            IStrategoTerm j_253 = null;
                                            j_253 = term;
                                            term = g_253;
                                            if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
                                              break Fail450;
                                            term = j_253;
                                            { 
                                              term = random_test.const110;
                                              h_253 = random_test.const110;
                                              if(true)
                                                break Success367;
                                            }
                                          }
                                          term = g_253;
                                          h_253 = g_253;
                                        }
                                        if(true)
                                          break Success366;
                                      }
                                    }
                                    term = term389;
                                    Success368:
                                    { 
                                      Fail451:
                                      { 
                                        IStrategoTerm k_253 = null;
                                        k_253 = term;
                                        term = g_253;
                                        if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
                                          break Fail451;
                                        term = k_253;
                                        { 
                                          term = f_253;
                                          h_253 = f_253;
                                          if(true)
                                            break Success368;
                                        }
                                      }
                                      IStrategoTerm k_254 = null;
                                      IStrategoTerm r_253 = null;
                                      IStrategoTerm t_253 = null;
                                      IStrategoTerm u_253 = null;
                                      IStrategoTerm z_253 = null;
                                      IStrategoTerm b_254 = null;
                                      IStrategoTerm d_254 = null;
                                      term = f_253;
                                      IStrategoTerm term392 = term;
                                      Success369:
                                      { 
                                        Fail452:
                                        { 
                                          term = concat_strings_0_0.instance.invoke(context, term);
                                          if(term == null)
                                            break Fail452;
                                          if(true)
                                            break Success369;
                                        }
                                        term = term392;
                                        IStrategoTerm term393 = term;
                                        Success370:
                                        { 
                                          Fail453:
                                          { 
                                            term = is_string_0_0.instance.invoke(context, term);
                                            if(term == null)
                                              break Fail453;
                                            if(true)
                                              break Success370;
                                          }
                                          term = term393;
                                          IStrategoTerm term394 = term;
                                          Success371:
                                          { 
                                            Fail454:
                                            { 
                                              term = int_to_string_0_0.instance.invoke(context, term);
                                              if(term == null)
                                                break Fail454;
                                              if(true)
                                                break Success371;
                                            }
                                            term = term394;
                                            IStrategoTerm term395 = term;
                                            Success372:
                                            { 
                                              Fail455:
                                              { 
                                                term = real_to_string_0_0.instance.invoke(context, term);
                                                if(term == null)
                                                  break Fail455;
                                                if(true)
                                                  break Success372;
                                              }
                                              term = term395;
                                              IStrategoTerm n_253 = null;
                                              IStrategoTerm o_253 = null;
                                              IStrategoTerm q_253 = null;
                                              n_253 = term;
                                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                              if(term == null)
                                                break Fail448;
                                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                                break Fail448;
                                              o_253 = ((IStrategoList)term).tail();
                                              q_253 = o_253;
                                              term = report_failure_0_2.instance.invoke(context, q_253, random_test.const227, n_253);
                                              if(term == null)
                                                break Fail448;
                                            }
                                          }
                                        }
                                      }
                                      t_253 = term;
                                      r_253 = random_test.const8;
                                      u_253 = t_253;
                                      term = string_replace_0_2.instance.invoke(context, u_253, r_253, random_test.const8);
                                      if(term == null)
                                        break Fail448;
                                      k_254 = term;
                                      term = g_253;
                                      IStrategoTerm term396 = term;
                                      Success373:
                                      { 
                                        Fail456:
                                        { 
                                          term = concat_strings_0_0.instance.invoke(context, term);
                                          if(term == null)
                                            break Fail456;
                                          if(true)
                                            break Success373;
                                        }
                                        term = term396;
                                        IStrategoTerm term397 = term;
                                        Success374:
                                        { 
                                          Fail457:
                                          { 
                                            term = is_string_0_0.instance.invoke(context, term);
                                            if(term == null)
                                              break Fail457;
                                            if(true)
                                              break Success374;
                                          }
                                          term = term397;
                                          IStrategoTerm term398 = term;
                                          Success375:
                                          { 
                                            Fail458:
                                            { 
                                              term = int_to_string_0_0.instance.invoke(context, term);
                                              if(term == null)
                                                break Fail458;
                                              if(true)
                                                break Success375;
                                            }
                                            term = term398;
                                            IStrategoTerm term399 = term;
                                            Success376:
                                            { 
                                              Fail459:
                                              { 
                                                term = real_to_string_0_0.instance.invoke(context, term);
                                                if(term == null)
                                                  break Fail459;
                                                if(true)
                                                  break Success376;
                                              }
                                              term = term399;
                                              IStrategoTerm v_253 = null;
                                              IStrategoTerm w_253 = null;
                                              IStrategoTerm y_253 = null;
                                              v_253 = term;
                                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                              if(term == null)
                                                break Fail448;
                                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                                break Fail448;
                                              w_253 = ((IStrategoList)term).tail();
                                              y_253 = w_253;
                                              term = report_failure_0_2.instance.invoke(context, y_253, random_test.const227, v_253);
                                              if(term == null)
                                                break Fail448;
                                            }
                                          }
                                        }
                                      }
                                      b_254 = term;
                                      z_253 = random_test.const8;
                                      d_254 = b_254;
                                      term = string_replace_0_2.instance.invoke(context, d_254, z_253, random_test.const236);
                                      if(term == null)
                                        break Fail448;
                                      term = (IStrategoTerm)termFactory.makeListCons(k_254, termFactory.makeListCons(random_test.const237, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0)));
                                      term = concat_strings_0_0.instance.invoke(context, term);
                                      if(term == null)
                                        break Fail448;
                                      term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                                      h_253 = term;
                                    }
                                  }
                                  if(true)
                                    break Success365;
                                }
                                term = term388;
                                IStrategoTerm e_254 = null;
                                IStrategoTerm f_254 = null;
                                IStrategoTerm p_254 = null;
                                e_254 = term;
                                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                if(term == null)
                                  break Fail447;
                                f_254 = term;
                                p_254 = e_254;
                                term = report_with_failure_0_2.instance.invoke(context, p_254, random_test.const226, f_254);
                                if(term == null)
                                  break Fail447;
                              }
                              term = g_254;
                              if(h_253 == null)
                                break Fail447;
                              term = h_253;
                              if(true)
                                break Success364;
                            }
                            term = term385;
                          }
                          Success377:
                          { 
                            if(cons51 == random_test._conslabel_2)
                            { 
                              Fail460:
                              { 
                                IStrategoTerm t_252 = null;
                                IStrategoTerm u_252 = null;
                                IStrategoTerm x_252 = null;
                                t_252 = term.getSubterm(1);
                                x_252 = term;
                                IStrategoTerm term401 = term;
                                Success378:
                                { 
                                  Fail461:
                                  { 
                                    term = build_xeger_0_0.instance.invoke(context, t_252);
                                    if(term == null)
                                      break Fail461;
                                    u_252 = term;
                                    if(true)
                                      break Success378;
                                  }
                                  term = term401;
                                  IStrategoTerm v_252 = null;
                                  IStrategoTerm w_252 = null;
                                  IStrategoTerm z_252 = null;
                                  v_252 = term;
                                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                  if(term == null)
                                    break Fail460;
                                  w_252 = term;
                                  z_252 = v_252;
                                  term = report_with_failure_0_2.instance.invoke(context, z_252, random_test.const226, w_252);
                                  if(term == null)
                                    break Fail460;
                                }
                                term = x_252;
                                if(u_252 == null)
                                  break Fail460;
                                term = u_252;
                                if(true)
                                  break Success377;
                              }
                              term = term385;
                            }
                            IStrategoTerm i_252 = null;
                            i_252 = term;
                            IStrategoTerm term402 = term;
                            Success379:
                            { 
                              Fail462:
                              { 
                                term = write_to_string_0_0.instance.invoke(context, i_252);
                                if(term == null)
                                  break Fail462;
                                term = (IStrategoTerm)termFactory.makeListCons(random_test.const238, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                                term = concat_strings_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail462;
                                term = debug_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail462;
                                if(true)
                                  break Success379;
                              }
                              term = term402;
                              IStrategoTerm k_252 = null;
                              IStrategoTerm l_252 = null;
                              IStrategoTerm q_252 = null;
                              k_252 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail413;
                              l_252 = term;
                              q_252 = k_252;
                              term = report_with_failure_0_2.instance.invoke(context, q_252, random_test.const226, l_252);
                              if(term == null)
                                break Fail413;
                            }
                            term = i_252;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class build_xeger_0_0 extends Strategy 
  { 
    public static build_xeger_0_0 instance = new build_xeger_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("build_xeger_0_0");
      Fail463:
      { 
        IStrategoTerm term403 = term;
        IStrategoConstructor cons52 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success380:
        { 
          if(cons52 == random_test._consiter_star_1)
          { 
            Fail464:
            { 
              IStrategoTerm u_265 = null;
              IStrategoTerm w_265 = null;
              IStrategoTerm z_265 = null;
              u_265 = term.getSubterm(0);
              z_265 = term;
              IStrategoTerm term404 = term;
              Success381:
              { 
                Fail465:
                { 
                  term = this.invoke(context, u_265);
                  if(term == null)
                    break Fail465;
                  term = termFactory.makeAppl(random_test._consiter_star_1, new IStrategoTerm[]{term});
                  term = help_xeger_iter_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail465;
                  w_265 = term;
                  if(true)
                    break Success381;
                }
                term = term404;
                IStrategoTerm x_265 = null;
                IStrategoTerm y_265 = null;
                IStrategoTerm c_266 = null;
                x_265 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail464;
                y_265 = term;
                c_266 = x_265;
                term = report_with_failure_0_2.instance.invoke(context, c_266, random_test.const226, y_265);
                if(term == null)
                  break Fail464;
              }
              term = z_265;
              if(w_265 == null)
                break Fail464;
              term = w_265;
              if(true)
                break Success380;
            }
            term = term403;
          }
          Success382:
          { 
            if(cons52 == random_test._consiter_1)
            { 
              Fail466:
              { 
                IStrategoTerm k_265 = null;
                IStrategoTerm m_265 = null;
                IStrategoTerm p_265 = null;
                k_265 = term.getSubterm(0);
                p_265 = term;
                IStrategoTerm term406 = term;
                Success383:
                { 
                  Fail467:
                  { 
                    term = this.invoke(context, k_265);
                    if(term == null)
                      break Fail467;
                    term = termFactory.makeAppl(random_test._consiter_1, new IStrategoTerm[]{term});
                    term = help_xeger_iter_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail467;
                    m_265 = term;
                    if(true)
                      break Success383;
                  }
                  term = term406;
                  IStrategoTerm n_265 = null;
                  IStrategoTerm o_265 = null;
                  IStrategoTerm r_265 = null;
                  n_265 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail466;
                  o_265 = term;
                  r_265 = n_265;
                  term = report_with_failure_0_2.instance.invoke(context, r_265, random_test.const226, o_265);
                  if(term == null)
                    break Fail466;
                }
                term = p_265;
                if(m_265 == null)
                  break Fail466;
                term = m_265;
                if(true)
                  break Success382;
              }
              term = term403;
            }
            Success384:
            { 
              if(cons52 == random_test._consiter_sep_2)
              { 
                Fail468:
                { 
                  IStrategoTerm s_264 = null;
                  IStrategoTerm t_264 = null;
                  IStrategoTerm u_264 = null;
                  IStrategoTerm x_264 = null;
                  s_264 = term.getSubterm(0);
                  t_264 = term.getSubterm(1);
                  x_264 = term;
                  IStrategoTerm term408 = term;
                  Success385:
                  { 
                    Fail469:
                    { 
                      IStrategoTerm b_265 = null;
                      term = this.invoke(context, s_264);
                      if(term == null)
                        break Fail469;
                      b_265 = term;
                      term = this.invoke(context, t_264);
                      if(term == null)
                        break Fail469;
                      term = termFactory.makeAppl(random_test._consiter_sep_2, new IStrategoTerm[]{b_265, term});
                      term = help_xeger_iter_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail469;
                      u_264 = term;
                      if(true)
                        break Success385;
                    }
                    term = term408;
                    IStrategoTerm v_264 = null;
                    IStrategoTerm w_264 = null;
                    IStrategoTerm h_265 = null;
                    v_264 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail468;
                    w_264 = term;
                    h_265 = v_264;
                    term = report_with_failure_0_2.instance.invoke(context, h_265, random_test.const226, w_264);
                    if(term == null)
                      break Fail468;
                  }
                  term = x_264;
                  if(u_264 == null)
                    break Fail468;
                  term = u_264;
                  if(true)
                    break Success384;
                }
                term = term403;
              }
              Success386:
              { 
                if(cons52 == random_test._consiter_star_sep_2)
                { 
                  Fail470:
                  { 
                    IStrategoTerm z_263 = null;
                    IStrategoTerm a_264 = null;
                    IStrategoTerm b_264 = null;
                    IStrategoTerm h_264 = null;
                    z_263 = term.getSubterm(0);
                    a_264 = term.getSubterm(1);
                    h_264 = term;
                    IStrategoTerm term410 = term;
                    Success387:
                    { 
                      Fail471:
                      { 
                        IStrategoTerm i_264 = null;
                        term = this.invoke(context, z_263);
                        if(term == null)
                          break Fail471;
                        i_264 = term;
                        term = this.invoke(context, a_264);
                        if(term == null)
                          break Fail471;
                        term = termFactory.makeAppl(random_test._consiter_star_sep_2, new IStrategoTerm[]{i_264, term});
                        term = help_xeger_iter_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail471;
                        b_264 = term;
                        if(true)
                          break Success387;
                      }
                      term = term410;
                      IStrategoTerm f_264 = null;
                      IStrategoTerm g_264 = null;
                      IStrategoTerm o_264 = null;
                      f_264 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail470;
                      g_264 = term;
                      o_264 = f_264;
                      term = report_with_failure_0_2.instance.invoke(context, o_264, random_test.const226, g_264);
                      if(term == null)
                        break Fail470;
                    }
                    term = h_264;
                    if(b_264 == null)
                      break Fail470;
                    term = b_264;
                    if(true)
                      break Success386;
                  }
                  term = term403;
                }
                Success388:
                { 
                  if(cons52 == random_test._consconc_2)
                  { 
                    Fail472:
                    { 
                      IStrategoTerm f_262 = null;
                      IStrategoTerm h_262 = null;
                      IStrategoTerm i_262 = null;
                      IStrategoTerm j_262 = null;
                      IStrategoTerm f_263 = null;
                      IStrategoTerm m_263 = null;
                      IStrategoTerm r_263 = null;
                      IStrategoTerm q_262 = null;
                      IStrategoTerm t_262 = null;
                      IStrategoTerm u_262 = null;
                      IStrategoTerm b_263 = null;
                      IStrategoTerm d_263 = null;
                      IStrategoTerm e_263 = null;
                      f_262 = term.getSubterm(0);
                      i_262 = term.getSubterm(1);
                      f_263 = term;
                      IStrategoTerm term412 = term;
                      Success389:
                      { 
                        Fail473:
                        { 
                          term = f_262;
                          IStrategoTerm term413 = term;
                          Success390:
                          { 
                            Fail474:
                            { 
                              term = map_1_0.instance.invoke(context, term, build_xeger_0_0.instance);
                              if(term == null)
                                break Fail474;
                              term = concat_strings_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail474;
                              if(true)
                                break Success390;
                            }
                            term = this.invoke(context, term413);
                            if(term == null)
                              break Fail473;
                          }
                          h_262 = term;
                          term = i_262;
                          IStrategoTerm term414 = term;
                          Success391:
                          { 
                            Fail475:
                            { 
                              term = map_1_0.instance.invoke(context, term, build_xeger_0_0.instance);
                              if(term == null)
                                break Fail475;
                              term = concat_strings_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail475;
                              if(true)
                                break Success391;
                            }
                            term = this.invoke(context, term414);
                            if(term == null)
                              break Fail473;
                          }
                          j_262 = term;
                          if(true)
                            break Success389;
                        }
                        term = term412;
                        IStrategoTerm k_262 = null;
                        IStrategoTerm l_262 = null;
                        IStrategoTerm j_263 = null;
                        k_262 = term;
                        term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                        if(term == null)
                          break Fail472;
                        l_262 = term;
                        j_263 = k_262;
                        term = report_with_failure_0_2.instance.invoke(context, j_263, random_test.const226, l_262);
                        if(term == null)
                          break Fail472;
                      }
                      term = f_263;
                      r_263 = term;
                      if(h_262 == null)
                        break Fail472;
                      term = h_262;
                      IStrategoTerm term415 = term;
                      Success392:
                      { 
                        Fail476:
                        { 
                          term = concat_strings_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail476;
                          if(true)
                            break Success392;
                        }
                        term = term415;
                        IStrategoTerm term416 = term;
                        Success393:
                        { 
                          Fail477:
                          { 
                            term = is_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail477;
                            if(true)
                              break Success393;
                          }
                          term = term416;
                          IStrategoTerm term417 = term;
                          Success394:
                          { 
                            Fail478:
                            { 
                              term = int_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail478;
                              if(true)
                                break Success394;
                            }
                            term = term417;
                            IStrategoTerm term418 = term;
                            Success395:
                            { 
                              Fail479:
                              { 
                                term = real_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail479;
                                if(true)
                                  break Success395;
                              }
                              term = term418;
                              IStrategoTerm m_262 = null;
                              IStrategoTerm n_262 = null;
                              IStrategoTerm p_262 = null;
                              m_262 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail472;
                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                break Fail472;
                              n_262 = ((IStrategoList)term).tail();
                              p_262 = n_262;
                              term = report_failure_0_2.instance.invoke(context, p_262, random_test.const227, m_262);
                              if(term == null)
                                break Fail472;
                            }
                          }
                        }
                      }
                      t_262 = term;
                      q_262 = random_test.const8;
                      u_262 = t_262;
                      term = string_replace_0_2.instance.invoke(context, u_262, q_262, random_test.const8);
                      if(term == null)
                        break Fail472;
                      m_263 = term;
                      term = r_263;
                      if(j_262 == null)
                        break Fail472;
                      term = j_262;
                      IStrategoTerm term419 = term;
                      Success396:
                      { 
                        Fail480:
                        { 
                          term = concat_strings_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail480;
                          if(true)
                            break Success396;
                        }
                        term = term419;
                        IStrategoTerm term420 = term;
                        Success397:
                        { 
                          Fail481:
                          { 
                            term = is_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail481;
                            if(true)
                              break Success397;
                          }
                          term = term420;
                          IStrategoTerm term421 = term;
                          Success398:
                          { 
                            Fail482:
                            { 
                              term = int_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail482;
                              if(true)
                                break Success398;
                            }
                            term = term421;
                            IStrategoTerm term422 = term;
                            Success399:
                            { 
                              Fail483:
                              { 
                                term = real_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail483;
                                if(true)
                                  break Success399;
                              }
                              term = term422;
                              IStrategoTerm x_262 = null;
                              IStrategoTerm y_262 = null;
                              IStrategoTerm a_263 = null;
                              x_262 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail472;
                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                break Fail472;
                              y_262 = ((IStrategoList)term).tail();
                              a_263 = y_262;
                              term = report_failure_0_2.instance.invoke(context, a_263, random_test.const227, x_262);
                              if(term == null)
                                break Fail472;
                            }
                          }
                        }
                      }
                      d_263 = term;
                      b_263 = random_test.const8;
                      e_263 = d_263;
                      term = string_replace_0_2.instance.invoke(context, e_263, b_263, random_test.const239);
                      if(term == null)
                        break Fail472;
                      term = (IStrategoTerm)termFactory.makeListCons(m_263, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                      term = concat_strings_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail472;
                      term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                      if(true)
                        break Success388;
                    }
                    term = term403;
                  }
                  Success400:
                  { 
                    if(cons52 == random_test._consrange_2)
                    { 
                      Fail484:
                      { 
                        IStrategoTerm w_260 = null;
                        IStrategoTerm x_260 = null;
                        IStrategoTerm y_260 = null;
                        IStrategoTerm z_260 = null;
                        IStrategoTerm u_261 = null;
                        IStrategoTerm z_261 = null;
                        IStrategoTerm b_262 = null;
                        IStrategoTerm g_261 = null;
                        IStrategoTerm i_261 = null;
                        IStrategoTerm j_261 = null;
                        IStrategoTerm q_261 = null;
                        IStrategoTerm s_261 = null;
                        IStrategoTerm t_261 = null;
                        w_260 = term.getSubterm(0);
                        y_260 = term.getSubterm(1);
                        u_261 = term;
                        IStrategoTerm term424 = term;
                        Success401:
                        { 
                          Fail485:
                          { 
                            term = this.invoke(context, w_260);
                            if(term == null)
                              break Fail485;
                            x_260 = term;
                            term = this.invoke(context, y_260);
                            if(term == null)
                              break Fail485;
                            z_260 = term;
                            if(true)
                              break Success401;
                          }
                          term = term424;
                          IStrategoTerm a_261 = null;
                          IStrategoTerm b_261 = null;
                          IStrategoTerm w_261 = null;
                          a_261 = term;
                          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                          if(term == null)
                            break Fail484;
                          b_261 = term;
                          w_261 = a_261;
                          term = report_with_failure_0_2.instance.invoke(context, w_261, random_test.const226, b_261);
                          if(term == null)
                            break Fail484;
                        }
                        term = u_261;
                        b_262 = term;
                        if(x_260 == null)
                          break Fail484;
                        term = x_260;
                        IStrategoTerm term425 = term;
                        Success402:
                        { 
                          Fail486:
                          { 
                            term = concat_strings_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail486;
                            if(true)
                              break Success402;
                          }
                          term = term425;
                          IStrategoTerm term426 = term;
                          Success403:
                          { 
                            Fail487:
                            { 
                              term = is_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail487;
                              if(true)
                                break Success403;
                            }
                            term = term426;
                            IStrategoTerm term427 = term;
                            Success404:
                            { 
                              Fail488:
                              { 
                                term = int_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail488;
                                if(true)
                                  break Success404;
                              }
                              term = term427;
                              IStrategoTerm term428 = term;
                              Success405:
                              { 
                                Fail489:
                                { 
                                  term = real_to_string_0_0.instance.invoke(context, term);
                                  if(term == null)
                                    break Fail489;
                                  if(true)
                                    break Success405;
                                }
                                term = term428;
                                IStrategoTerm c_261 = null;
                                IStrategoTerm d_261 = null;
                                IStrategoTerm f_261 = null;
                                c_261 = term;
                                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                if(term == null)
                                  break Fail484;
                                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                  break Fail484;
                                d_261 = ((IStrategoList)term).tail();
                                f_261 = d_261;
                                term = report_failure_0_2.instance.invoke(context, f_261, random_test.const227, c_261);
                                if(term == null)
                                  break Fail484;
                              }
                            }
                          }
                        }
                        i_261 = term;
                        g_261 = random_test.const8;
                        j_261 = i_261;
                        term = string_replace_0_2.instance.invoke(context, j_261, g_261, random_test.const8);
                        if(term == null)
                          break Fail484;
                        z_261 = term;
                        term = b_262;
                        if(z_260 == null)
                          break Fail484;
                        term = z_260;
                        IStrategoTerm term429 = term;
                        Success406:
                        { 
                          Fail490:
                          { 
                            term = concat_strings_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail490;
                            if(true)
                              break Success406;
                          }
                          term = term429;
                          IStrategoTerm term430 = term;
                          Success407:
                          { 
                            Fail491:
                            { 
                              term = is_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail491;
                              if(true)
                                break Success407;
                            }
                            term = term430;
                            IStrategoTerm term431 = term;
                            Success408:
                            { 
                              Fail492:
                              { 
                                term = int_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail492;
                                if(true)
                                  break Success408;
                              }
                              term = term431;
                              IStrategoTerm term432 = term;
                              Success409:
                              { 
                                Fail493:
                                { 
                                  term = real_to_string_0_0.instance.invoke(context, term);
                                  if(term == null)
                                    break Fail493;
                                  if(true)
                                    break Success409;
                                }
                                term = term432;
                                IStrategoTerm k_261 = null;
                                IStrategoTerm l_261 = null;
                                IStrategoTerm o_261 = null;
                                k_261 = term;
                                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                if(term == null)
                                  break Fail484;
                                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                  break Fail484;
                                l_261 = ((IStrategoList)term).tail();
                                o_261 = l_261;
                                term = report_failure_0_2.instance.invoke(context, o_261, random_test.const227, k_261);
                                if(term == null)
                                  break Fail484;
                              }
                            }
                          }
                        }
                        s_261 = term;
                        q_261 = random_test.const8;
                        t_261 = s_261;
                        term = string_replace_0_2.instance.invoke(context, t_261, q_261, random_test.const14);
                        if(term == null)
                          break Fail484;
                        term = (IStrategoTerm)termFactory.makeListCons(z_261, termFactory.makeListCons(random_test.const240, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0)));
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail484;
                        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                        if(true)
                          break Success400;
                      }
                      term = term403;
                    }
                    Success410:
                    { 
                      if(cons52 == random_test._consnumeric_1)
                      { 
                        Fail494:
                        { 
                          IStrategoTerm n_260 = null;
                          IStrategoTerm o_260 = null;
                          IStrategoTerm r_260 = null;
                          n_260 = term.getSubterm(0);
                          r_260 = term;
                          IStrategoTerm term434 = term;
                          Success411:
                          { 
                            Fail495:
                            { 
                              term = n_260;
                              o_260 = n_260;
                              if(true)
                                break Success411;
                            }
                            term = term434;
                            IStrategoTerm p_260 = null;
                            IStrategoTerm q_260 = null;
                            IStrategoTerm t_260 = null;
                            p_260 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail494;
                            q_260 = term;
                            t_260 = p_260;
                            term = report_with_failure_0_2.instance.invoke(context, t_260, random_test.const226, q_260);
                            if(term == null)
                              break Fail494;
                          }
                          term = r_260;
                          if(o_260 == null)
                            break Fail494;
                          term = o_260;
                          if(true)
                            break Success410;
                        }
                        term = term403;
                      }
                      Success412:
                      { 
                        if(cons52 == random_test._consshort_1)
                        { 
                          Fail496:
                          { 
                            IStrategoTerm d_260 = null;
                            IStrategoTerm e_260 = null;
                            IStrategoTerm i_260 = null;
                            d_260 = term.getSubterm(0);
                            i_260 = term;
                            IStrategoTerm term436 = term;
                            Success413:
                            { 
                              Fail497:
                              { 
                                term = d_260;
                                e_260 = d_260;
                                if(true)
                                  break Success413;
                              }
                              term = term436;
                              IStrategoTerm g_260 = null;
                              IStrategoTerm h_260 = null;
                              IStrategoTerm k_260 = null;
                              g_260 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail496;
                              h_260 = term;
                              k_260 = g_260;
                              term = report_with_failure_0_2.instance.invoke(context, k_260, random_test.const226, h_260);
                              if(term == null)
                                break Fail496;
                            }
                            term = i_260;
                            if(e_260 == null)
                              break Fail496;
                            term = e_260;
                            if(true)
                              break Success412;
                          }
                          term = term403;
                        }
                        term = build_xeger_0_0_fragment_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail463;
                      }
                    }
                  }
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class help_xeger_iter_0_0_fragment_0 extends Strategy 
  { 
    public static help_xeger_iter_0_0_fragment_0 instance = new help_xeger_iter_0_0_fragment_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("help_xeger_iter_0_0_fragment_0");
      Fail498:
      { 
        IStrategoTerm term437 = term;
        Success414:
        { 
          Fail499:
          { 
            TermReference c_272 = new TermReference();
            TermReference d_272 = new TermReference();
            TermReference e_272 = new TermReference();
            IStrategoTerm f_272 = null;
            IStrategoTerm w_272 = null;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consiter_star_1 != ((IStrategoAppl)term).getConstructor())
              break Fail499;
            if(e_272.value == null)
              e_272.value = term.getSubterm(0);
            else
              if(e_272.value != term.getSubterm(0) && !e_272.value.match(term.getSubterm(0)))
                break Fail499;
            w_272 = term;
            IStrategoTerm term438 = term;
            Success415:
            { 
              Fail500:
              { 
                IStrategoTerm term439 = term;
                Success416:
                { 
                  Fail501:
                  { 
                    IStrategoTerm g_272 = null;
                    g_272 = term;
                    lifted432 lifted4320 = new lifted432();
                    lifted431 lifted4310 = new lifted431();
                    lifted4320.c_272 = c_272;
                    lifted4310.e_272 = e_272;
                    lifted4310.c_272 = c_272;
                    lifted4310.d_272 = d_272;
                    term = and_2_0.instance.invoke(context, term, lifted4310, lifted4320);
                    if(term == null)
                      break Fail501;
                    term = g_272;
                    { 
                      IStrategoTerm x_272 = null;
                      IStrategoTerm y_272 = null;
                      y_272 = term;
                      if(d_272.value == null)
                        break Fail500;
                      term = termFactory.makeAppl(random_test._consiter_star_1, new IStrategoTerm[]{d_272.value});
                      term = help_xeger_iter_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail500;
                      x_272 = term;
                      term = y_272;
                      if(c_272.value == null)
                        break Fail500;
                      IStrategoTerm mkterm15;
                      mkterm15 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{c_272.value, (IStrategoTerm)termFactory.makeListCons(x_272, (IStrategoList)random_test.constNil0)});
                      if(mkterm15 == null)
                        break Fail500;
                      term = mkterm15;
                      f_272 = mkterm15;
                      if(true)
                        break Success416;
                    }
                  }
                  term = term439;
                  IStrategoTerm m_272 = null;
                  IStrategoTerm p_272 = null;
                  IStrategoTerm r_272 = null;
                  if(e_272.value == null)
                    break Fail500;
                  term = e_272.value;
                  IStrategoTerm term441 = term;
                  Success417:
                  { 
                    Fail502:
                    { 
                      term = concat_strings_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail502;
                      if(true)
                        break Success417;
                    }
                    term = term441;
                    IStrategoTerm term442 = term;
                    Success418:
                    { 
                      Fail503:
                      { 
                        term = is_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail503;
                        if(true)
                          break Success418;
                      }
                      term = term442;
                      IStrategoTerm term443 = term;
                      Success419:
                      { 
                        Fail504:
                        { 
                          term = int_to_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail504;
                          if(true)
                            break Success419;
                        }
                        term = term443;
                        IStrategoTerm term444 = term;
                        Success420:
                        { 
                          Fail505:
                          { 
                            term = real_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail505;
                            if(true)
                              break Success420;
                          }
                          term = term444;
                          IStrategoTerm i_272 = null;
                          IStrategoTerm j_272 = null;
                          IStrategoTerm l_272 = null;
                          i_272 = term;
                          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                          if(term == null)
                            break Fail500;
                          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                            break Fail500;
                          j_272 = ((IStrategoList)term).tail();
                          l_272 = j_272;
                          term = report_failure_0_2.instance.invoke(context, l_272, random_test.const241, i_272);
                          if(term == null)
                            break Fail500;
                        }
                      }
                    }
                  }
                  p_272 = term;
                  m_272 = random_test.const8;
                  r_272 = p_272;
                  term = string_replace_0_2.instance.invoke(context, r_272, m_272, random_test.const228);
                  if(term == null)
                    break Fail500;
                  term = (IStrategoTerm)termFactory.makeListCons(random_test.const232, termFactory.makeListCons(term, (IStrategoList)random_test.constCons50));
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail500;
                  term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                  f_272 = term;
                }
                if(true)
                  break Success415;
              }
              term = term438;
              IStrategoTerm t_272 = null;
              IStrategoTerm u_272 = null;
              IStrategoTerm h_273 = null;
              t_272 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail499;
              u_272 = term;
              h_273 = t_272;
              term = report_with_failure_0_2.instance.invoke(context, h_273, random_test.const243, u_272);
              if(term == null)
                break Fail499;
            }
            term = w_272;
            if(f_272 == null)
              break Fail499;
            term = f_272;
            if(true)
              break Success414;
          }
          term = term437;
          IStrategoTerm term445 = term;
          Success421:
          { 
            Fail506:
            { 
              TermReference b_271 = new TermReference();
              TermReference c_271 = new TermReference();
              TermReference d_271 = new TermReference();
              IStrategoTerm e_271 = null;
              IStrategoTerm q_271 = null;
              if(term.getTermType() != IStrategoTerm.APPL || random_test._consiter_1 != ((IStrategoAppl)term).getConstructor())
                break Fail506;
              if(d_271.value == null)
                d_271.value = term.getSubterm(0);
              else
                if(d_271.value != term.getSubterm(0) && !d_271.value.match(term.getSubterm(0)))
                  break Fail506;
              q_271 = term;
              IStrategoTerm term446 = term;
              Success422:
              { 
                Fail507:
                { 
                  IStrategoTerm term447 = term;
                  Success423:
                  { 
                    Fail508:
                    { 
                      IStrategoTerm f_271 = null;
                      f_271 = term;
                      lifted434 lifted4340 = new lifted434();
                      lifted433 lifted4330 = new lifted433();
                      lifted4340.b_271 = b_271;
                      lifted4330.d_271 = d_271;
                      lifted4330.b_271 = b_271;
                      lifted4330.c_271 = c_271;
                      term = and_2_0.instance.invoke(context, term, lifted4330, lifted4340);
                      if(term == null)
                        break Fail508;
                      term = f_271;
                      { 
                        IStrategoTerm r_271 = null;
                        IStrategoTerm s_271 = null;
                        s_271 = term;
                        if(c_271.value == null)
                          break Fail507;
                        term = termFactory.makeAppl(random_test._consiter_1, new IStrategoTerm[]{c_271.value});
                        term = help_xeger_iter_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail507;
                        r_271 = term;
                        term = s_271;
                        if(b_271.value == null)
                          break Fail507;
                        IStrategoTerm mkterm16;
                        mkterm16 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{b_271.value, (IStrategoTerm)termFactory.makeListCons(r_271, (IStrategoList)random_test.constNil0)});
                        if(mkterm16 == null)
                          break Fail507;
                        term = mkterm16;
                        e_271 = mkterm16;
                        if(true)
                          break Success423;
                      }
                    }
                    term = term447;
                    IStrategoTerm k_271 = null;
                    IStrategoTerm m_271 = null;
                    IStrategoTerm n_271 = null;
                    if(d_271.value == null)
                      break Fail507;
                    term = d_271.value;
                    IStrategoTerm term449 = term;
                    Success424:
                    { 
                      Fail509:
                      { 
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail509;
                        if(true)
                          break Success424;
                      }
                      term = term449;
                      IStrategoTerm term450 = term;
                      Success425:
                      { 
                        Fail510:
                        { 
                          term = is_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail510;
                          if(true)
                            break Success425;
                        }
                        term = term450;
                        IStrategoTerm term451 = term;
                        Success426:
                        { 
                          Fail511:
                          { 
                            term = int_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail511;
                            if(true)
                              break Success426;
                          }
                          term = term451;
                          IStrategoTerm term452 = term;
                          Success427:
                          { 
                            Fail512:
                            { 
                              term = real_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail512;
                              if(true)
                                break Success427;
                            }
                            term = term452;
                            IStrategoTerm g_271 = null;
                            IStrategoTerm h_271 = null;
                            IStrategoTerm j_271 = null;
                            g_271 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail507;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail507;
                            h_271 = ((IStrategoList)term).tail();
                            j_271 = h_271;
                            term = report_failure_0_2.instance.invoke(context, j_271, random_test.const241, g_271);
                            if(term == null)
                              break Fail507;
                          }
                        }
                      }
                    }
                    m_271 = term;
                    k_271 = random_test.const8;
                    n_271 = m_271;
                    term = string_replace_0_2.instance.invoke(context, n_271, k_271, random_test.const228);
                    if(term == null)
                      break Fail507;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const232, termFactory.makeListCons(term, (IStrategoList)random_test.constCons51));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail507;
                    term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                    e_271 = term;
                  }
                  if(true)
                    break Success422;
                }
                term = term446;
                IStrategoTerm o_271 = null;
                IStrategoTerm p_271 = null;
                IStrategoTerm y_271 = null;
                o_271 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail506;
                p_271 = term;
                y_271 = o_271;
                term = report_with_failure_0_2.instance.invoke(context, y_271, random_test.const243, p_271);
                if(term == null)
                  break Fail506;
              }
              term = q_271;
              if(e_271 == null)
                break Fail506;
              term = e_271;
              if(true)
                break Success421;
            }
            term = term445;
            IStrategoTerm term453 = term;
            Success428:
            { 
              Fail513:
              { 
                TermReference w_268 = new TermReference();
                TermReference x_268 = new TermReference();
                IStrategoTerm y_268 = null;
                TermReference a_269 = new TermReference();
                IStrategoTerm b_269 = null;
                IStrategoTerm j_270 = null;
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consiter_sep_2 != ((IStrategoAppl)term).getConstructor())
                  break Fail513;
                if(a_269.value == null)
                  a_269.value = term.getSubterm(0);
                else
                  if(a_269.value != term.getSubterm(0) && !a_269.value.match(term.getSubterm(0)))
                    break Fail513;
                y_268 = term.getSubterm(1);
                j_270 = term;
                IStrategoTerm term454 = term;
                Success429:
                { 
                  Fail514:
                  { 
                    IStrategoTerm term455 = term;
                    Success430:
                    { 
                      Fail515:
                      { 
                        IStrategoTerm c_269 = null;
                        c_269 = term;
                        lifted436 lifted4360 = new lifted436();
                        lifted435 lifted4350 = new lifted435();
                        lifted4360.w_268 = w_268;
                        lifted4350.a_269 = a_269;
                        lifted4350.w_268 = w_268;
                        lifted4350.x_268 = x_268;
                        term = and_2_0.instance.invoke(context, term, lifted4350, lifted4360);
                        if(term == null)
                          break Fail515;
                        term = c_269;
                        { 
                          IStrategoTerm k_270 = null;
                          IStrategoTerm l_270 = null;
                          l_270 = term;
                          if(x_268.value == null)
                            break Fail514;
                          term = termFactory.makeAppl(random_test._consiter_sep_2, new IStrategoTerm[]{x_268.value, y_268});
                          term = help_xeger_iter_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail514;
                          k_270 = term;
                          term = l_270;
                          if(w_268.value == null)
                            break Fail514;
                          IStrategoTerm mkterm17;
                          mkterm17 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{w_268.value, (IStrategoTerm)termFactory.makeListCons(k_270, (IStrategoList)random_test.constNil0)});
                          if(mkterm17 == null)
                            break Fail514;
                          term = mkterm17;
                          b_269 = mkterm17;
                          if(true)
                            break Success430;
                        }
                      }
                      term = term455;
                      IStrategoTerm q_270 = null;
                      IStrategoTerm t_270 = null;
                      IStrategoTerm i_269 = null;
                      IStrategoTerm k_269 = null;
                      IStrategoTerm n_269 = null;
                      IStrategoTerm r_270 = null;
                      IStrategoTerm u_270 = null;
                      IStrategoTerm s_269 = null;
                      IStrategoTerm u_269 = null;
                      IStrategoTerm v_269 = null;
                      IStrategoTerm c_270 = null;
                      IStrategoTerm e_270 = null;
                      IStrategoTerm f_270 = null;
                      t_270 = term;
                      if(a_269.value == null)
                        break Fail514;
                      term = a_269.value;
                      IStrategoTerm term457 = term;
                      Success431:
                      { 
                        Fail516:
                        { 
                          term = concat_strings_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail516;
                          if(true)
                            break Success431;
                        }
                        term = term457;
                        IStrategoTerm term458 = term;
                        Success432:
                        { 
                          Fail517:
                          { 
                            term = is_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail517;
                            if(true)
                              break Success432;
                          }
                          term = term458;
                          IStrategoTerm term459 = term;
                          Success433:
                          { 
                            Fail518:
                            { 
                              term = int_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail518;
                              if(true)
                                break Success433;
                            }
                            term = term459;
                            IStrategoTerm term460 = term;
                            Success434:
                            { 
                              Fail519:
                              { 
                                term = real_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail519;
                                if(true)
                                  break Success434;
                              }
                              term = term460;
                              IStrategoTerm d_269 = null;
                              IStrategoTerm e_269 = null;
                              IStrategoTerm h_269 = null;
                              d_269 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail514;
                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                break Fail514;
                              e_269 = ((IStrategoList)term).tail();
                              h_269 = e_269;
                              term = report_failure_0_2.instance.invoke(context, h_269, random_test.const241, d_269);
                              if(term == null)
                                break Fail514;
                            }
                          }
                        }
                      }
                      k_269 = term;
                      i_269 = random_test.const8;
                      n_269 = k_269;
                      term = string_replace_0_2.instance.invoke(context, n_269, i_269, random_test.const228);
                      if(term == null)
                        break Fail514;
                      q_270 = term;
                      u_270 = t_270;
                      term = y_268;
                      IStrategoTerm term461 = term;
                      Success435:
                      { 
                        Fail520:
                        { 
                          term = concat_strings_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail520;
                          if(true)
                            break Success435;
                        }
                        term = term461;
                        IStrategoTerm term462 = term;
                        Success436:
                        { 
                          Fail521:
                          { 
                            term = is_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail521;
                            if(true)
                              break Success436;
                          }
                          term = term462;
                          IStrategoTerm term463 = term;
                          Success437:
                          { 
                            Fail522:
                            { 
                              term = int_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail522;
                              if(true)
                                break Success437;
                            }
                            term = term463;
                            IStrategoTerm term464 = term;
                            Success438:
                            { 
                              Fail523:
                              { 
                                term = real_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail523;
                                if(true)
                                  break Success438;
                              }
                              term = term464;
                              IStrategoTerm o_269 = null;
                              IStrategoTerm p_269 = null;
                              IStrategoTerm r_269 = null;
                              o_269 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail514;
                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                break Fail514;
                              p_269 = ((IStrategoList)term).tail();
                              r_269 = p_269;
                              term = report_failure_0_2.instance.invoke(context, r_269, random_test.const241, o_269);
                              if(term == null)
                                break Fail514;
                            }
                          }
                        }
                      }
                      u_269 = term;
                      s_269 = random_test.const8;
                      v_269 = u_269;
                      term = string_replace_0_2.instance.invoke(context, v_269, s_269, random_test.const239);
                      if(term == null)
                        break Fail514;
                      r_270 = term;
                      term = u_270;
                      if(a_269.value == null)
                        break Fail514;
                      term = a_269.value;
                      IStrategoTerm term465 = term;
                      Success439:
                      { 
                        Fail524:
                        { 
                          term = concat_strings_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail524;
                          if(true)
                            break Success439;
                        }
                        term = term465;
                        IStrategoTerm term466 = term;
                        Success440:
                        { 
                          Fail525:
                          { 
                            term = is_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail525;
                            if(true)
                              break Success440;
                          }
                          term = term466;
                          IStrategoTerm term467 = term;
                          Success441:
                          { 
                            Fail526:
                            { 
                              term = int_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail526;
                              if(true)
                                break Success441;
                            }
                            term = term467;
                            IStrategoTerm term468 = term;
                            Success442:
                            { 
                              Fail527:
                              { 
                                term = real_to_string_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail527;
                                if(true)
                                  break Success442;
                              }
                              term = term468;
                              IStrategoTerm w_269 = null;
                              IStrategoTerm z_269 = null;
                              IStrategoTerm b_270 = null;
                              w_269 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail514;
                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                break Fail514;
                              z_269 = ((IStrategoList)term).tail();
                              b_270 = z_269;
                              term = report_failure_0_2.instance.invoke(context, b_270, random_test.const241, w_269);
                              if(term == null)
                                break Fail514;
                            }
                          }
                        }
                      }
                      e_270 = term;
                      c_270 = random_test.const8;
                      f_270 = e_270;
                      term = string_replace_0_2.instance.invoke(context, f_270, c_270, random_test.const245);
                      if(term == null)
                        break Fail514;
                      term = (IStrategoTerm)termFactory.makeListCons(random_test.const232, termFactory.makeListCons(q_270, termFactory.makeListCons(r_270, termFactory.makeListCons(random_test.const246, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0)))));
                      term = concat_strings_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail514;
                      term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                      b_269 = term;
                    }
                    if(true)
                      break Success429;
                  }
                  term = term454;
                  IStrategoTerm g_270 = null;
                  IStrategoTerm h_270 = null;
                  IStrategoTerm x_270 = null;
                  g_270 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail513;
                  h_270 = term;
                  x_270 = g_270;
                  term = report_with_failure_0_2.instance.invoke(context, x_270, random_test.const243, h_270);
                  if(term == null)
                    break Fail513;
                }
                term = j_270;
                if(b_269 == null)
                  break Fail513;
                term = b_269;
                if(true)
                  break Success428;
              }
              term = term453;
              TermReference g_266 = new TermReference();
              TermReference h_266 = new TermReference();
              IStrategoTerm i_266 = null;
              TermReference j_266 = new TermReference();
              IStrategoTerm k_266 = null;
              IStrategoTerm b_268 = null;
              if(term.getTermType() != IStrategoTerm.APPL || random_test._consiter_star_sep_2 != ((IStrategoAppl)term).getConstructor())
                break Fail498;
              if(j_266.value == null)
                j_266.value = term.getSubterm(0);
              else
                if(j_266.value != term.getSubterm(0) && !j_266.value.match(term.getSubterm(0)))
                  break Fail498;
              i_266 = term.getSubterm(1);
              b_268 = term;
              IStrategoTerm term469 = term;
              Success443:
              { 
                Fail528:
                { 
                  IStrategoTerm term470 = term;
                  Success444:
                  { 
                    Fail529:
                    { 
                      IStrategoTerm l_266 = null;
                      l_266 = term;
                      lifted438 lifted4380 = new lifted438();
                      lifted437 lifted4370 = new lifted437();
                      lifted4380.g_266 = g_266;
                      lifted4370.j_266 = j_266;
                      lifted4370.g_266 = g_266;
                      lifted4370.h_266 = h_266;
                      term = and_2_0.instance.invoke(context, term, lifted4370, lifted4380);
                      if(term == null)
                        break Fail529;
                      term = l_266;
                      { 
                        IStrategoTerm c_268 = null;
                        IStrategoTerm d_268 = null;
                        d_268 = term;
                        if(h_266.value == null)
                          break Fail528;
                        term = termFactory.makeAppl(random_test._consiter_star_sep_2, new IStrategoTerm[]{h_266.value, i_266});
                        term = help_xeger_iter_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail528;
                        c_268 = term;
                        term = d_268;
                        if(g_266.value == null)
                          break Fail528;
                        IStrategoTerm mkterm18;
                        mkterm18 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{g_266.value, (IStrategoTerm)termFactory.makeListCons(c_268, (IStrategoList)random_test.constNil0)});
                        if(mkterm18 == null)
                          break Fail528;
                        term = mkterm18;
                        k_266 = mkterm18;
                        if(true)
                          break Success444;
                      }
                    }
                    term = term470;
                    IStrategoTerm g_268 = null;
                    IStrategoTerm k_268 = null;
                    IStrategoTerm q_266 = null;
                    IStrategoTerm t_266 = null;
                    IStrategoTerm u_266 = null;
                    IStrategoTerm h_268 = null;
                    IStrategoTerm l_268 = null;
                    IStrategoTerm z_266 = null;
                    IStrategoTerm b_267 = null;
                    IStrategoTerm c_267 = null;
                    IStrategoTerm i_268 = null;
                    IStrategoTerm m_268 = null;
                    IStrategoTerm i_267 = null;
                    IStrategoTerm m_267 = null;
                    IStrategoTerm n_267 = null;
                    IStrategoTerm t_267 = null;
                    IStrategoTerm v_267 = null;
                    IStrategoTerm w_267 = null;
                    k_268 = term;
                    if(j_266.value == null)
                      break Fail528;
                    term = j_266.value;
                    IStrategoTerm term472 = term;
                    Success445:
                    { 
                      Fail530:
                      { 
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail530;
                        if(true)
                          break Success445;
                      }
                      term = term472;
                      IStrategoTerm term473 = term;
                      Success446:
                      { 
                        Fail531:
                        { 
                          term = is_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail531;
                          if(true)
                            break Success446;
                        }
                        term = term473;
                        IStrategoTerm term474 = term;
                        Success447:
                        { 
                          Fail532:
                          { 
                            term = int_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail532;
                            if(true)
                              break Success447;
                          }
                          term = term474;
                          IStrategoTerm term475 = term;
                          Success448:
                          { 
                            Fail533:
                            { 
                              term = real_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail533;
                              if(true)
                                break Success448;
                            }
                            term = term475;
                            IStrategoTerm m_266 = null;
                            IStrategoTerm n_266 = null;
                            IStrategoTerm p_266 = null;
                            m_266 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail528;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail528;
                            n_266 = ((IStrategoList)term).tail();
                            p_266 = n_266;
                            term = report_failure_0_2.instance.invoke(context, p_266, random_test.const241, m_266);
                            if(term == null)
                              break Fail528;
                          }
                        }
                      }
                    }
                    t_266 = term;
                    q_266 = random_test.const8;
                    u_266 = t_266;
                    term = string_replace_0_2.instance.invoke(context, u_266, q_266, random_test.const247);
                    if(term == null)
                      break Fail528;
                    g_268 = term;
                    l_268 = k_268;
                    term = i_266;
                    IStrategoTerm term476 = term;
                    Success449:
                    { 
                      Fail534:
                      { 
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail534;
                        if(true)
                          break Success449;
                      }
                      term = term476;
                      IStrategoTerm term477 = term;
                      Success450:
                      { 
                        Fail535:
                        { 
                          term = is_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail535;
                          if(true)
                            break Success450;
                        }
                        term = term477;
                        IStrategoTerm term478 = term;
                        Success451:
                        { 
                          Fail536:
                          { 
                            term = int_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail536;
                            if(true)
                              break Success451;
                          }
                          term = term478;
                          IStrategoTerm term479 = term;
                          Success452:
                          { 
                            Fail537:
                            { 
                              term = real_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail537;
                              if(true)
                                break Success452;
                            }
                            term = term479;
                            IStrategoTerm v_266 = null;
                            IStrategoTerm w_266 = null;
                            IStrategoTerm y_266 = null;
                            v_266 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail528;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail528;
                            w_266 = ((IStrategoList)term).tail();
                            y_266 = w_266;
                            term = report_failure_0_2.instance.invoke(context, y_266, random_test.const241, v_266);
                            if(term == null)
                              break Fail528;
                          }
                        }
                      }
                    }
                    b_267 = term;
                    z_266 = random_test.const8;
                    c_267 = b_267;
                    term = string_replace_0_2.instance.invoke(context, c_267, z_266, random_test.const236);
                    if(term == null)
                      break Fail528;
                    h_268 = term;
                    term = l_268;
                    m_268 = l_268;
                    if(j_266.value == null)
                      break Fail528;
                    term = j_266.value;
                    IStrategoTerm term480 = term;
                    Success453:
                    { 
                      Fail538:
                      { 
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail538;
                        if(true)
                          break Success453;
                      }
                      term = term480;
                      IStrategoTerm term481 = term;
                      Success454:
                      { 
                        Fail539:
                        { 
                          term = is_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail539;
                          if(true)
                            break Success454;
                        }
                        term = term481;
                        IStrategoTerm term482 = term;
                        Success455:
                        { 
                          Fail540:
                          { 
                            term = int_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail540;
                            if(true)
                              break Success455;
                          }
                          term = term482;
                          IStrategoTerm term483 = term;
                          Success456:
                          { 
                            Fail541:
                            { 
                              term = real_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail541;
                              if(true)
                                break Success456;
                            }
                            term = term483;
                            IStrategoTerm d_267 = null;
                            IStrategoTerm f_267 = null;
                            IStrategoTerm h_267 = null;
                            d_267 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail528;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail528;
                            f_267 = ((IStrategoList)term).tail();
                            h_267 = f_267;
                            term = report_failure_0_2.instance.invoke(context, h_267, random_test.const241, d_267);
                            if(term == null)
                              break Fail528;
                          }
                        }
                      }
                    }
                    m_267 = term;
                    i_267 = random_test.const8;
                    n_267 = m_267;
                    term = string_replace_0_2.instance.invoke(context, n_267, i_267, random_test.const248);
                    if(term == null)
                      break Fail528;
                    i_268 = term;
                    term = m_268;
                    if(j_266.value == null)
                      break Fail528;
                    term = j_266.value;
                    IStrategoTerm term484 = term;
                    Success457:
                    { 
                      Fail542:
                      { 
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail542;
                        if(true)
                          break Success457;
                      }
                      term = term484;
                      IStrategoTerm term485 = term;
                      Success458:
                      { 
                        Fail543:
                        { 
                          term = is_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail543;
                          if(true)
                            break Success458;
                        }
                        term = term485;
                        IStrategoTerm term486 = term;
                        Success459:
                        { 
                          Fail544:
                          { 
                            term = int_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail544;
                            if(true)
                              break Success459;
                          }
                          term = term486;
                          IStrategoTerm term487 = term;
                          Success460:
                          { 
                            Fail545:
                            { 
                              term = real_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail545;
                              if(true)
                                break Success460;
                            }
                            term = term487;
                            IStrategoTerm o_267 = null;
                            IStrategoTerm p_267 = null;
                            IStrategoTerm s_267 = null;
                            o_267 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail528;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail528;
                            p_267 = ((IStrategoList)term).tail();
                            s_267 = p_267;
                            term = report_failure_0_2.instance.invoke(context, s_267, random_test.const241, o_267);
                            if(term == null)
                              break Fail528;
                          }
                        }
                      }
                    }
                    v_267 = term;
                    t_267 = random_test.const8;
                    w_267 = v_267;
                    term = string_replace_0_2.instance.invoke(context, w_267, t_267, random_test.const15);
                    if(term == null)
                      break Fail528;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const252, termFactory.makeListCons(g_268, termFactory.makeListCons(h_268, termFactory.makeListCons(random_test.const251, termFactory.makeListCons(i_268, termFactory.makeListCons(random_test.const250, termFactory.makeListCons(term, (IStrategoList)random_test.constCons52)))))));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail528;
                    term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                    k_266 = term;
                  }
                  if(true)
                    break Success443;
                }
                term = term469;
                IStrategoTerm x_267 = null;
                IStrategoTerm z_267 = null;
                IStrategoTerm q_268 = null;
                x_267 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail498;
                z_267 = term;
                q_268 = x_267;
                term = report_with_failure_0_2.instance.invoke(context, q_268, random_test.const243, z_267);
                if(term == null)
                  break Fail498;
              }
              term = b_268;
              if(k_266 == null)
                break Fail498;
              term = k_266;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class help_xeger_iter_0_0 extends Strategy 
  { 
    public static help_xeger_iter_0_0 instance = new help_xeger_iter_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("help_xeger_iter_0_0");
      Fail546:
      { 
        term = help_xeger_iter_0_0_fragment_0.instance.invoke(context, term);
        if(term == null)
          break Fail546;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class escape_lit_string_0_0 extends Strategy 
  { 
    public static escape_lit_string_0_0 instance = new escape_lit_string_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("escape_lit_string_0_0");
      Fail547:
      { 
        IStrategoTerm k_273 = null;
        IStrategoTerm l_273 = null;
        IStrategoTerm i_274 = null;
        k_273 = term;
        i_274 = term;
        IStrategoTerm term488 = term;
        Success461:
        { 
          Fail548:
          { 
            term = string_as_chars_1_0.instance.invoke(context, k_273, lifted439.instance);
            if(term == null)
              break Fail548;
            l_273 = term;
            if(true)
              break Success461;
          }
          term = term488;
          IStrategoTerm f_274 = null;
          IStrategoTerm g_274 = null;
          IStrategoTerm k_274 = null;
          f_274 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail547;
          g_274 = term;
          k_274 = f_274;
          term = report_with_failure_0_2.instance.invoke(context, k_274, random_test.const253, g_274);
          if(term == null)
            break Fail547;
        }
        term = i_274;
        if(l_273 == null)
          break Fail547;
        term = l_273;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class escape_regex_operators_0_0 extends Strategy 
  { 
    public static escape_regex_operators_0_0 instance = new escape_regex_operators_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail549:
      { 
        IStrategoTerm term491 = term;
        Success462:
        { 
          Fail550:
          { 
            IStrategoTerm i_275 = null;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail550;
            IStrategoTerm arg186 = ((IStrategoList)term).head();
            if(arg186.getTermType() != IStrategoTerm.INT || 124 != ((IStrategoInt)arg186).intValue())
              break Fail550;
            i_275 = ((IStrategoList)term).tail();
            IStrategoList list7;
            list7 = checkListTail(i_275);
            if(list7 == null)
              break Fail550;
            term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const254, list7));
            if(true)
              break Success462;
          }
          term = term491;
          IStrategoTerm term492 = term;
          Success463:
          { 
            Fail551:
            { 
              IStrategoTerm h_275 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail551;
              IStrategoTerm arg187 = ((IStrategoList)term).head();
              if(arg187.getTermType() != IStrategoTerm.INT || 38 != ((IStrategoInt)arg187).intValue())
                break Fail551;
              h_275 = ((IStrategoList)term).tail();
              IStrategoList list8;
              list8 = checkListTail(h_275);
              if(list8 == null)
                break Fail551;
              term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const256, list8));
              if(true)
                break Success463;
            }
            term = term492;
            IStrategoTerm term493 = term;
            Success464:
            { 
              Fail552:
              { 
                IStrategoTerm g_275 = null;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail552;
                IStrategoTerm arg188 = ((IStrategoList)term).head();
                if(arg188.getTermType() != IStrategoTerm.INT || 63 != ((IStrategoInt)arg188).intValue())
                  break Fail552;
                g_275 = ((IStrategoList)term).tail();
                IStrategoList list9;
                list9 = checkListTail(g_275);
                if(list9 == null)
                  break Fail552;
                term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const257, list9));
                if(true)
                  break Success464;
              }
              term = term493;
              IStrategoTerm term494 = term;
              Success465:
              { 
                Fail553:
                { 
                  IStrategoTerm f_275 = null;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail553;
                  IStrategoTerm arg189 = ((IStrategoList)term).head();
                  if(arg189.getTermType() != IStrategoTerm.INT || 42 != ((IStrategoInt)arg189).intValue())
                    break Fail553;
                  f_275 = ((IStrategoList)term).tail();
                  IStrategoList list10;
                  list10 = checkListTail(f_275);
                  if(list10 == null)
                    break Fail553;
                  term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const258, list10));
                  if(true)
                    break Success465;
                }
                term = term494;
                IStrategoTerm term495 = term;
                Success466:
                { 
                  Fail554:
                  { 
                    IStrategoTerm e_275 = null;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail554;
                    IStrategoTerm arg190 = ((IStrategoList)term).head();
                    if(arg190.getTermType() != IStrategoTerm.INT || 43 != ((IStrategoInt)arg190).intValue())
                      break Fail554;
                    e_275 = ((IStrategoList)term).tail();
                    IStrategoList list11;
                    list11 = checkListTail(e_275);
                    if(list11 == null)
                      break Fail554;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const259, list11));
                    if(true)
                      break Success466;
                  }
                  term = term495;
                  IStrategoTerm term496 = term;
                  Success467:
                  { 
                    Fail555:
                    { 
                      IStrategoTerm d_275 = null;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail555;
                      IStrategoTerm arg191 = ((IStrategoList)term).head();
                      if(arg191.getTermType() != IStrategoTerm.INT || 123 != ((IStrategoInt)arg191).intValue())
                        break Fail555;
                      d_275 = ((IStrategoList)term).tail();
                      IStrategoList list12;
                      list12 = checkListTail(d_275);
                      if(list12 == null)
                        break Fail555;
                      term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const260, list12));
                      if(true)
                        break Success467;
                    }
                    term = term496;
                    IStrategoTerm term497 = term;
                    Success468:
                    { 
                      Fail556:
                      { 
                        IStrategoTerm y_274 = null;
                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                          break Fail556;
                        IStrategoTerm arg192 = ((IStrategoList)term).head();
                        if(arg192.getTermType() != IStrategoTerm.INT || 125 != ((IStrategoInt)arg192).intValue())
                          break Fail556;
                        y_274 = ((IStrategoList)term).tail();
                        IStrategoList list13;
                        list13 = checkListTail(y_274);
                        if(list13 == null)
                          break Fail556;
                        term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const261, list13));
                        if(true)
                          break Success468;
                      }
                      term = term497;
                      IStrategoTerm term498 = term;
                      Success469:
                      { 
                        Fail557:
                        { 
                          IStrategoTerm x_274 = null;
                          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                            break Fail557;
                          IStrategoTerm arg193 = ((IStrategoList)term).head();
                          if(arg193.getTermType() != IStrategoTerm.INT || 126 != ((IStrategoInt)arg193).intValue())
                            break Fail557;
                          x_274 = ((IStrategoList)term).tail();
                          IStrategoList list14;
                          list14 = checkListTail(x_274);
                          if(list14 == null)
                            break Fail557;
                          term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const262, list14));
                          if(true)
                            break Success469;
                        }
                        term = term498;
                        IStrategoTerm term499 = term;
                        Success470:
                        { 
                          Fail558:
                          { 
                            IStrategoTerm w_274 = null;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail558;
                            IStrategoTerm arg194 = ((IStrategoList)term).head();
                            if(arg194.getTermType() != IStrategoTerm.INT || 60 != ((IStrategoInt)arg194).intValue())
                              break Fail558;
                            w_274 = ((IStrategoList)term).tail();
                            IStrategoList list15;
                            list15 = checkListTail(w_274);
                            if(list15 == null)
                              break Fail558;
                            term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const263, list15));
                            if(true)
                              break Success470;
                          }
                          term = term499;
                          IStrategoTerm term500 = term;
                          Success471:
                          { 
                            Fail559:
                            { 
                              IStrategoTerm v_274 = null;
                              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                break Fail559;
                              IStrategoTerm arg195 = ((IStrategoList)term).head();
                              if(arg195.getTermType() != IStrategoTerm.INT || 62 != ((IStrategoInt)arg195).intValue())
                                break Fail559;
                              v_274 = ((IStrategoList)term).tail();
                              IStrategoList list16;
                              list16 = checkListTail(v_274);
                              if(list16 == null)
                                break Fail559;
                              term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const264, list16));
                              if(true)
                                break Success471;
                            }
                            term = term500;
                            IStrategoTerm term501 = term;
                            Success472:
                            { 
                              Fail560:
                              { 
                                IStrategoTerm u_274 = null;
                                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                  break Fail560;
                                IStrategoTerm arg196 = ((IStrategoList)term).head();
                                if(arg196.getTermType() != IStrategoTerm.INT || 45 != ((IStrategoInt)arg196).intValue())
                                  break Fail560;
                                u_274 = ((IStrategoList)term).tail();
                                IStrategoList list17;
                                list17 = checkListTail(u_274);
                                if(list17 == null)
                                  break Fail560;
                                term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const265, list17));
                                if(true)
                                  break Success472;
                              }
                              term = term501;
                              IStrategoTerm term502 = term;
                              Success473:
                              { 
                                Fail561:
                                { 
                                  IStrategoTerm s_274 = null;
                                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                    break Fail561;
                                  IStrategoTerm arg197 = ((IStrategoList)term).head();
                                  if(arg197.getTermType() != IStrategoTerm.INT || 64 != ((IStrategoInt)arg197).intValue())
                                    break Fail561;
                                  s_274 = ((IStrategoList)term).tail();
                                  IStrategoList list18;
                                  list18 = checkListTail(s_274);
                                  if(list18 == null)
                                    break Fail561;
                                  term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const266, list18));
                                  if(true)
                                    break Success473;
                                }
                                term = term502;
                                IStrategoTerm term503 = term;
                                Success474:
                                { 
                                  Fail562:
                                  { 
                                    IStrategoTerm r_274 = null;
                                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                      break Fail562;
                                    IStrategoTerm arg198 = ((IStrategoList)term).head();
                                    if(arg198.getTermType() != IStrategoTerm.INT || 35 != ((IStrategoInt)arg198).intValue())
                                      break Fail562;
                                    r_274 = ((IStrategoList)term).tail();
                                    IStrategoList list19;
                                    list19 = checkListTail(r_274);
                                    if(list19 == null)
                                      break Fail562;
                                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const267, list19));
                                    if(true)
                                      break Success474;
                                  }
                                  term = term503;
                                  IStrategoTerm term504 = term;
                                  Success475:
                                  { 
                                    Fail563:
                                    { 
                                      IStrategoTerm q_274 = null;
                                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                        break Fail563;
                                      IStrategoTerm arg199 = ((IStrategoList)term).head();
                                      if(arg199.getTermType() != IStrategoTerm.INT || 40 != ((IStrategoInt)arg199).intValue())
                                        break Fail563;
                                      q_274 = ((IStrategoList)term).tail();
                                      IStrategoList list20;
                                      list20 = checkListTail(q_274);
                                      if(list20 == null)
                                        break Fail563;
                                      term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const268, list20));
                                      if(true)
                                        break Success475;
                                    }
                                    term = term504;
                                    IStrategoTerm term505 = term;
                                    Success476:
                                    { 
                                      Fail564:
                                      { 
                                        IStrategoTerm p_274 = null;
                                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                          break Fail564;
                                        IStrategoTerm arg200 = ((IStrategoList)term).head();
                                        if(arg200.getTermType() != IStrategoTerm.INT || 41 != ((IStrategoInt)arg200).intValue())
                                          break Fail564;
                                        p_274 = ((IStrategoList)term).tail();
                                        IStrategoList list21;
                                        list21 = checkListTail(p_274);
                                        if(list21 == null)
                                          break Fail564;
                                        term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const269, list21));
                                        if(true)
                                          break Success476;
                                      }
                                      term = term505;
                                      IStrategoTerm term506 = term;
                                      Success477:
                                      { 
                                        Fail565:
                                        { 
                                          IStrategoTerm o_274 = null;
                                          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                            break Fail565;
                                          IStrategoTerm arg201 = ((IStrategoList)term).head();
                                          if(arg201.getTermType() != IStrategoTerm.INT || 46 != ((IStrategoInt)arg201).intValue())
                                            break Fail565;
                                          o_274 = ((IStrategoList)term).tail();
                                          IStrategoList list22;
                                          list22 = checkListTail(o_274);
                                          if(list22 == null)
                                            break Fail565;
                                          term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const270, list22));
                                          if(true)
                                            break Success477;
                                        }
                                        term = term506;
                                        IStrategoTerm term507 = term;
                                        Success478:
                                        { 
                                          Fail566:
                                          { 
                                            IStrategoTerm n_274 = null;
                                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                              break Fail566;
                                            IStrategoTerm arg202 = ((IStrategoList)term).head();
                                            if(arg202.getTermType() != IStrategoTerm.INT || 91 != ((IStrategoInt)arg202).intValue())
                                              break Fail566;
                                            n_274 = ((IStrategoList)term).tail();
                                            IStrategoList list23;
                                            list23 = checkListTail(n_274);
                                            if(list23 == null)
                                              break Fail566;
                                            term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const271, list23));
                                            if(true)
                                              break Success478;
                                          }
                                          term = term507;
                                          IStrategoTerm m_274 = null;
                                          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                                            break Fail549;
                                          IStrategoTerm arg203 = ((IStrategoList)term).head();
                                          if(arg203.getTermType() != IStrategoTerm.INT || 93 != ((IStrategoInt)arg203).intValue())
                                            break Fail549;
                                          m_274 = ((IStrategoList)term).tail();
                                          IStrategoList list24;
                                          list24 = checkListTail(m_274);
                                          if(list24 == null)
                                            break Fail549;
                                          term = (IStrategoTerm)termFactory.makeListCons(random_test.const255, termFactory.makeListCons(random_test.const272, list24));
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if(true)
          return term;
      }
      context.push("escape_regex_operators_0_0");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class build_xeger_sort_0_0 extends Strategy 
  { 
    public static build_xeger_sort_0_0 instance = new build_xeger_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("build_xeger_sort_0_0");
      Fail567:
      { 
        IStrategoTerm r_277 = null;
        IStrategoTerm s_277 = null;
        IStrategoTerm u_277 = null;
        TermReference v_277 = new TermReference();
        IStrategoTerm y_277 = null;
        IStrategoTerm z_277 = null;
        IStrategoTerm a_278 = null;
        IStrategoTerm c_278 = null;
        IStrategoTerm e_278 = null;
        IStrategoTerm f_278 = null;
        IStrategoTerm t_278 = null;
        z_277 = term;
        t_278 = term;
        IStrategoTerm term508 = term;
        Success479:
        { 
          Fail568:
          { 
            term = bagof_$Lex$Sorts_0_0.instance.invoke(context, z_277);
            if(term == null)
              break Fail568;
            term = number$Xeger_1_0.instance.invoke(context, term, _Id.instance);
            if(term == null)
              break Fail568;
            s_277 = term;
            term = $Xeger$Count_0_0.instance.invoke(context, random_test.const273);
            if(term == null)
              break Fail568;
            r_277 = term;
            IStrategoTerm term509 = term;
            Success480:
            { 
              Fail569:
              { 
                IStrategoTerm g_278 = null;
                g_278 = term;
                term = r_277;
                if(term.getTermType() != IStrategoTerm.INT || 0 != ((IStrategoInt)term).intValue())
                  break Fail569;
                term = g_278;
                { 
                  term = write_to_string_0_0.instance.invoke(context, z_277);
                  if(term == null)
                    break Fail568;
                  term = (IStrategoTerm)termFactory.makeListCons(random_test.const274, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail568;
                  term = debug_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail568;
                  if(true)
                    break Fail568;
                  if(true)
                    break Success480;
                }
              }
              term = term509;
            }
            term = next_random_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail568;
            term = abs_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail568;
            term = termFactory.makeTuple(term, r_277);
            term = mod_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail568;
            if(v_277.value == null)
              v_277.value = term;
            else
              if(v_277.value != term && !v_277.value.match(term))
                break Fail568;
            term = s_277;
            lifted441 lifted4410 = new lifted441();
            lifted4410.v_277 = v_277;
            term = filter_1_0.instance.invoke(context, term, lifted4410);
            if(term == null)
              break Fail568;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail568;
            u_277 = ((IStrategoList)term).head();
            term = u_277;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail568;
            y_277 = term.getSubterm(0);
            if(v_277.value == null)
              v_277.value = term.getSubterm(1);
            else
              if(v_277.value != term.getSubterm(1) && !v_277.value.match(term.getSubterm(1)))
                break Fail568;
            Success481:
            { 
              Fail570:
              { 
                IStrategoTerm h_278 = null;
                h_278 = term;
                IStrategoTerm term511 = term;
                Success482:
                { 
                  Fail571:
                  { 
                    term = y_277;
                    if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                      break Fail571;
                    { 
                      if(true)
                        break Fail570;
                      if(true)
                        break Success482;
                    }
                  }
                  term = term511;
                }
                term = h_278;
                { 
                  term = map_1_0.instance.invoke(context, y_277, build_xeger_0_0.instance);
                  if(term == null)
                    break Fail568;
                  term = special_string_concat_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail568;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail568;
                  e_278 = ((IStrategoList)term).head();
                  IStrategoTerm arg205 = ((IStrategoList)term).tail();
                  if(arg205.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg205).isEmpty())
                    break Fail568;
                  if(true)
                    break Success481;
                }
              }
              term = random_test.constNil0;
              e_278 = random_test.constNil0;
            }
            term = bagof_$Lex$Reject_0_0.instance.invoke(context, z_277);
            if(term == null)
              break Fail568;
            a_278 = term;
            Success483:
            { 
              Fail572:
              { 
                IStrategoTerm i_278 = null;
                i_278 = term;
                IStrategoTerm term513 = term;
                Success484:
                { 
                  Fail573:
                  { 
                    term = a_278;
                    if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                      break Fail573;
                    { 
                      if(true)
                        break Fail572;
                      if(true)
                        break Success484;
                    }
                  }
                  term = term513;
                }
                term = i_278;
                { 
                  term = map_1_0.instance.invoke(context, a_278, lifted443.instance);
                  if(term == null)
                    break Fail568;
                  c_278 = term;
                  term = concat_strings_0_0.instance.invoke(context, c_278);
                  if(term == null)
                    break Fail568;
                  term = (IStrategoTerm)termFactory.makeListCons(random_test.const252, termFactory.makeListCons(e_278, termFactory.makeListCons(random_test.const277, termFactory.makeListCons(term, (IStrategoList)random_test.constCons54))));
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail568;
                  f_278 = term;
                  if(true)
                    break Success483;
                }
              }
              term = e_278;
              f_278 = e_278;
            }
            if(true)
              break Success479;
          }
          term = term508;
          IStrategoTerm o_278 = null;
          IStrategoTerm r_278 = null;
          IStrategoTerm c_279 = null;
          o_278 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail567;
          r_278 = term;
          c_279 = o_278;
          term = report_with_failure_0_2.instance.invoke(context, c_279, random_test.const278, r_278);
          if(term == null)
            break Fail567;
        }
        term = t_278;
        if(f_278 == null)
          break Fail567;
        term = f_278;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class special_string_concat_0_0 extends Strategy 
  { 
    public static special_string_concat_0_0 instance = new special_string_concat_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("special_string_concat_0_0");
      Fail574:
      { 
        IStrategoTerm term514 = term;
        Success485:
        { 
          Fail575:
          { 
            IStrategoTerm h_279 = null;
            IStrategoTerm i_279 = null;
            IStrategoTerm j_279 = null;
            IStrategoTerm k_279 = null;
            IStrategoTerm m_279 = null;
            IStrategoTerm n_279 = null;
            IStrategoTerm o_279 = null;
            IStrategoTerm s_279 = null;
            IStrategoTerm w_279 = null;
            IStrategoTerm x_279 = null;
            h_279 = term;
            s_279 = term;
            w_279 = h_279;
            term = take_0_1.instance.invoke(context, w_279, random_test.const94);
            if(term == null)
              break Fail575;
            term = s_279;
            x_279 = s_279;
            IStrategoTerm term515 = term;
            Success486:
            { 
              Fail576:
              { 
                term = h_279;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail576;
                m_279 = ((IStrategoList)term).head();
                n_279 = ((IStrategoList)term).tail();
                term = n_279;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail576;
                i_279 = ((IStrategoList)term).head();
                k_279 = ((IStrategoList)term).tail();
                Success487:
                { 
                  Fail577:
                  { 
                    IStrategoTerm p_279 = null;
                    p_279 = term;
                    term = termFactory.makeTuple(m_279, i_279);
                    term = conc_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail577;
                    j_279 = term;
                    term = p_279;
                    { 
                      term = termFactory.makeTuple((IStrategoTerm)termFactory.makeListCons(j_279, (IStrategoList)random_test.constNil0), k_279);
                      term = conc_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail576;
                      term = this.invoke(context, term);
                      if(term == null)
                        break Fail576;
                      o_279 = term;
                      if(true)
                        break Success487;
                    }
                  }
                  term = this.invoke(context, n_279);
                  if(term == null)
                    break Fail576;
                  term = termFactory.makeTuple((IStrategoTerm)termFactory.makeListCons(m_279, (IStrategoList)random_test.constNil0), term);
                  term = conc_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail576;
                  o_279 = term;
                }
                if(true)
                  break Success486;
              }
              term = term515;
              IStrategoTerm q_279 = null;
              IStrategoTerm r_279 = null;
              IStrategoTerm d_280 = null;
              q_279 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail575;
              r_279 = term;
              d_280 = q_279;
              term = report_with_failure_0_2.instance.invoke(context, d_280, random_test.const279, r_279);
              if(term == null)
                break Fail575;
            }
            term = x_279;
            if(o_279 == null)
              break Fail575;
            term = o_279;
            if(true)
              break Success485;
          }
          term = term514;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class generate_terminal_0_0 extends Strategy 
  { 
    public static generate_terminal_0_0 instance = new generate_terminal_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("generate_terminal_0_0");
      Fail578:
      { 
        IStrategoTerm i_280 = null;
        IStrategoTerm k_280 = null;
        IStrategoTerm o_280 = null;
        i_280 = term;
        o_280 = term;
        IStrategoTerm term517 = term;
        Success488:
        { 
          Fail579:
          { 
            term = build_xeger_sort_0_0.instance.invoke(context, i_280);
            if(term == null)
              break Fail579;
            term = use_xeger_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail579;
            k_280 = term;
            if(true)
              break Success488;
          }
          term = term517;
          IStrategoTerm m_280 = null;
          IStrategoTerm n_280 = null;
          IStrategoTerm s_280 = null;
          m_280 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail578;
          n_280 = term;
          s_280 = m_280;
          term = report_with_failure_0_2.instance.invoke(context, s_280, random_test.const280, n_280);
          if(term == null)
            break Fail578;
        }
        term = o_280;
        if(k_280 == null)
          break Fail578;
        term = k_280;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class use_xeger_0_0 extends Strategy 
  { 
    public static use_xeger_0_0 instance = new use_xeger_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("use_xeger_0_0");
      Fail580:
      { 
        IStrategoTerm term518 = term;
        Success489:
        { 
          Fail581:
          { 
            IStrategoTerm l_281 = null;
            IStrategoTerm m_281 = null;
            IStrategoTerm n_281 = null;
            IStrategoTerm q_281 = null;
            IStrategoTerm r_281 = null;
            IStrategoTerm cons30 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            l_281 = cons30;
            IStrategoTerm args29 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            m_281 = args29;
            q_281 = term;
            IStrategoTerm term519 = term;
            Success490:
            { 
              Fail582:
              { 
                term = is_double_quoted_0_0.instance.invoke(context, l_281);
                if(term == null)
                  break Fail582;
                { 
                  if(true)
                    break Fail581;
                  if(true)
                    break Success490;
                }
              }
              term = term519;
            }
            term = q_281;
            r_281 = q_281;
            IStrategoTerm term520 = term;
            Success491:
            { 
              Fail583:
              { 
                term = map_1_0.instance.invoke(context, m_281, use_xeger_0_0.instance);
                if(term == null)
                  break Fail583;
                n_281 = term;
                if(true)
                  break Success491;
              }
              term = term520;
              IStrategoTerm o_281 = null;
              IStrategoTerm p_281 = null;
              IStrategoTerm t_281 = null;
              o_281 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail581;
              p_281 = term;
              t_281 = o_281;
              term = report_with_failure_0_2.instance.invoke(context, t_281, random_test.const281, p_281);
              if(term == null)
                break Fail581;
            }
            term = r_281;
            if(n_281 == null)
              break Fail581;
            term = n_281;
            if(true)
              break Success489;
          }
          term = term518;
          IStrategoTerm term521 = term;
          Success492:
          { 
            Fail584:
            { 
              if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
                break Fail584;
              term = random_test.const110;
              if(true)
                break Success492;
            }
            term = term521;
            TermReference v_280 = new TermReference();
            IStrategoTerm w_280 = null;
            IStrategoTerm c_281 = null;
            if(v_280.value == null)
              v_280.value = term;
            else
              if(v_280.value != term && !v_280.value.match(term))
                break Fail580;
            c_281 = term;
            IStrategoTerm term522 = term;
            Success493:
            { 
              Fail585:
              { 
                b_281 b_2810 = new b_281();
                b_2810.v_280 = v_280;
                term = b_2810.invoke(context, term);
                if(term == null)
                  break Fail585;
                w_280 = term;
                if(true)
                  break Success493;
              }
              term = term522;
              IStrategoTerm z_280 = null;
              IStrategoTerm a_281 = null;
              IStrategoTerm i_281 = null;
              z_280 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail580;
              a_281 = term;
              i_281 = z_280;
              term = report_with_failure_0_2.instance.invoke(context, i_281, random_test.const281, a_281);
              if(term == null)
                break Fail580;
            }
            term = c_281;
            if(w_280 == null)
              break Fail580;
            term = w_280;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class number$Xeger_1_0 extends Strategy 
  { 
    public static number$Xeger_1_0 instance = new number$Xeger_1_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, Strategy x_281)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("numberXeger_1_0");
      Fail586:
      { 
        IStrategoTerm v_281 = null;
        IStrategoTerm e_283 = null;
        IStrategoTerm w_281 = null;
        IStrategoTerm f_283 = null;
        IStrategoTerm i_283 = null;
        IStrategoTerm k_283 = null;
        IStrategoTerm m_283 = null;
        IStrategoTerm n_283 = null;
        term = termFactory.makeTuple(term, random_test.const58);
        lifted446 lifted4460 = new lifted446();
        lifted4460.x_281 = x_281;
        term = thread_map_1_0.instance.invoke(context, term, lifted4460);
        if(term == null)
          break Fail586;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail586;
        e_283 = term.getSubterm(0);
        v_281 = term.getSubterm(1);
        term = e_283;
        w_281 = e_283;
        k_283 = term;
        f_283 = random_test.const282;
        m_283 = k_283;
        i_283 = random_test.constCons0;
        n_283 = m_283;
        term = termFactory.makeTuple(random_test.const283, v_281);
        term = dr_set_rule_0_3.instance.invoke(context, n_283, f_283, i_283, term);
        if(term == null)
          break Fail586;
        term = w_281;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class pick_a_random_terminal_0_0 extends Strategy 
  { 
    public static pick_a_random_terminal_0_0 instance = new pick_a_random_terminal_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("pick_a_random_terminal_0_0");
      Fail587:
      { 
        IStrategoTerm r_283 = null;
        IStrategoTerm s_283 = null;
        IStrategoTerm w_283 = null;
        r_283 = term;
        w_283 = term;
        IStrategoTerm term524 = term;
        Success494:
        { 
          Fail588:
          { 
            term = bagof_$Terminals_0_0.instance.invoke(context, r_283);
            if(term == null)
              break Fail588;
            term = randomly_pick_from_list_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail588;
            s_283 = term;
            if(true)
              break Success494;
          }
          term = term524;
          IStrategoTerm t_283 = null;
          IStrategoTerm u_283 = null;
          IStrategoTerm a_284 = null;
          t_283 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail587;
          u_283 = term;
          a_284 = t_283;
          term = report_with_failure_0_2.instance.invoke(context, a_284, random_test.const284, u_283);
          if(term == null)
            break Fail587;
        }
        term = w_283;
        if(s_283 == null)
          break Fail587;
        term = s_283;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class pre_generate_terminals_0_1 extends Strategy 
  { 
    public static pre_generate_terminals_0_1 instance = new pre_generate_terminals_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_b_284)
    { 
      TermReference b_284 = new TermReference(ref_b_284);
      context.push("pre_generate_terminals_0_1");
      Fail589:
      { 
        IStrategoTerm e_284 = null;
        term = all_keys_$Lex$Sorts_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail589;
        e_284 = term;
        term = nub_0_0.instance.invoke(context, e_284);
        if(term == null)
          break Fail589;
        lifted447 lifted4470 = new lifted447();
        lifted4470.b_284 = b_284;
        term = map_1_0.instance.invoke(context, term, lifted4470);
        if(term == null)
          break Fail589;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class lex_to_dr_0_1 extends Strategy 
  { 
    public static lex_to_dr_0_1 instance = new lex_to_dr_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_h_284)
    { 
      TermReference h_284 = new TermReference(ref_h_284);
      context.push("lex_to_dr_0_1");
      Fail590:
      { 
        TermReference i_284 = new TermReference();
        if(i_284.value == null)
          i_284.value = term;
        else
          if(i_284.value != term && !i_284.value.match(term))
            break Fail590;
        term = write_lex_to_dr_0_0.instance.invoke(context, random_test.const58);
        if(term == null)
          break Fail590;
        lifted449 lifted4490 = new lifted449();
        lifted448 lifted4480 = new lifted448();
        lifted4490.i_284 = i_284;
        lifted4480.h_284 = h_284;
        term = while_2_0.instance.invoke(context, term, lifted4480, lifted4490);
        if(term == null)
          break Fail590;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_lex_to_dr_0_0 extends Strategy 
  { 
    public static write_lex_to_dr_0_0 instance = new write_lex_to_dr_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_lex_to_dr_0_0");
      Fail591:
      { 
        IStrategoTerm y_284 = null;
        IStrategoTerm z_284 = null;
        IStrategoTerm a_285 = null;
        IStrategoTerm c_285 = null;
        IStrategoTerm d_285 = null;
        IStrategoTerm f_285 = null;
        IStrategoTerm g_285 = null;
        IStrategoTerm h_285 = null;
        y_284 = term;
        z_284 = term;
        term = y_284;
        a_285 = y_284;
        f_285 = term;
        c_285 = random_test.const287;
        g_285 = f_285;
        d_285 = random_test.constCons0;
        h_285 = g_285;
        term = termFactory.makeTuple(random_test.const288, a_285);
        term = dr_set_rule_0_3.instance.invoke(context, h_285, c_285, d_285, term);
        if(term == null)
          break Fail591;
        term = z_284;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class pick_prod_lower_level_0_0 extends Strategy 
  { 
    public static pick_prod_lower_level_0_0 instance = new pick_prod_lower_level_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("pick_prod_lower_level_0_0");
      Fail592:
      { 
        IStrategoTerm term526 = term;
        Success495:
        { 
          Fail593:
          { 
            TermReference r_285 = new TermReference();
            IStrategoTerm s_285 = null;
            IStrategoTerm t_285 = null;
            IStrategoTerm y_285 = null;
            IStrategoTerm z_285 = null;
            s_285 = term;
            y_285 = term;
            IStrategoTerm term527 = term;
            Success496:
            { 
              Fail594:
              { 
                term = s_285;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail594;
                { 
                  if(true)
                    break Fail593;
                  if(true)
                    break Success496;
                }
              }
              term = term527;
            }
            term = y_285;
            z_285 = y_285;
            IStrategoTerm term528 = term;
            Success497:
            { 
              Fail595:
              { 
                term = map_1_0.instance.invoke(context, s_285, lifted450.instance);
                if(term == null)
                  break Fail595;
                term = list_min_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail595;
                if(r_285.value == null)
                  r_285.value = term;
                else
                  if(r_285.value != term && !r_285.value.match(term))
                    break Fail595;
                term = s_285;
                lifted451 lifted4510 = new lifted451();
                lifted4510.r_285 = r_285;
                term = filter_1_0.instance.invoke(context, term, lifted4510);
                if(term == null)
                  break Fail595;
                term = map_1_0.instance.invoke(context, term, lifted452.instance);
                if(term == null)
                  break Fail595;
                t_285 = term;
                if(true)
                  break Success497;
              }
              term = term528;
              IStrategoTerm w_285 = null;
              IStrategoTerm x_285 = null;
              IStrategoTerm b_286 = null;
              w_285 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail593;
              x_285 = term;
              b_286 = w_285;
              term = report_with_failure_0_2.instance.invoke(context, b_286, random_test.const289, x_285);
              if(term == null)
                break Fail593;
            }
            term = z_285;
            if(t_285 == null)
              break Fail593;
            term = t_285;
            if(true)
              break Success495;
          }
          term = term526;
          if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
            break Fail592;
          IStrategoTerm term529 = term;
          Success498:
          { 
            Fail596:
            { 
              term = debug_0_0.instance.invoke(context, random_test.const290);
              if(term == null)
                break Fail596;
              if(true)
                break Success498;
            }
            term = term529;
            IStrategoTerm k_285 = null;
            IStrategoTerm l_285 = null;
            IStrategoTerm o_285 = null;
            k_285 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail592;
            l_285 = term;
            o_285 = k_285;
            term = report_with_failure_0_2.instance.invoke(context, o_285, random_test.const289, l_285);
            if(term == null)
              break Fail592;
          }
          term = random_test.constNil0;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_prohibited_0_2 extends Strategy 
  { 
    public static is_prohibited_0_2 instance = new is_prohibited_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm y_704, IStrategoTerm ref_z_704)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference z_704 = new TermReference(ref_z_704);
      context.push("is_prohibited_0_2");
      Fail597:
      { 
        IStrategoTerm term530 = term;
        Success499:
        { 
          Fail598:
          { 
            IStrategoTerm t_286 = null;
            IStrategoTerm u_286 = null;
            t_286 = term;
            if(z_704.value == null)
              break Fail598;
            term = termFactory.makeTuple(z_704.value, t_286);
            term = get_$N$B$L_referrals_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail598;
            u_286 = term;
            IStrategoTerm term531 = term;
            Success500:
            { 
              Fail599:
              { 
                term = nbl_current_definitions_0_0.instance.invoke(context, u_286);
                if(term == null)
                  break Fail599;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail599;
                { 
                  if(true)
                    break Fail598;
                  if(true)
                    break Success500;
                }
              }
              term = term531;
            }
            term = u_286;
            IStrategoTerm term532 = term;
            Success501:
            { 
              Fail600:
              { 
                term = randomly_pick_a_scope_for_$N$B$L_injection_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail600;
                { 
                  if(true)
                    break Fail598;
                  if(true)
                    break Success501;
                }
              }
              term = term532;
            }
            term = t_286;
            if(true)
              break Success499;
          }
          term = term530;
          IStrategoTerm term533 = term;
          Success502:
          { 
            Fail601:
            { 
              IStrategoTerm o_286 = null;
              o_286 = term;
              IStrategoTerm term534 = term;
              Success503:
              { 
                Fail602:
                { 
                  term = filter_1_0.instance.invoke(context, o_286, lifted453.instance);
                  if(term == null)
                    break Fail602;
                  if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                    break Fail602;
                  { 
                    if(true)
                      break Fail601;
                    if(true)
                      break Success503;
                  }
                }
                term = term534;
              }
              term = o_286;
              if(true)
                break Success502;
            }
            term = term533;
            IStrategoTerm term535 = term;
            Success504:
            { 
              Fail603:
              { 
                IStrategoTerm k_286 = null;
                k_286 = term;
                if(z_704.value == null)
                  break Fail603;
                term = termFactory.makeTuple(z_704.value, k_286);
                IStrategoTerm term536 = term;
                Success505:
                { 
                  Fail604:
                  { 
                    term = $C$F$Cons_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail604;
                    term = $Ignore$Sorts_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail604;
                    if(true)
                      break Success505;
                  }
                  term = $Lex$Cons_0_0.instance.invoke(context, term536);
                  if(term == null)
                    break Fail603;
                  term = $Ignore$Sorts_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail603;
                }
                term = k_286;
                if(true)
                  break Success504;
              }
              term = term535;
              TermReference f_286 = new TermReference();
              IStrategoTerm h_286 = null;
              if(f_286.value == null)
                f_286.value = term;
              else
                if(f_286.value != term && !f_286.value.match(term))
                  break Fail597;
              h_286 = term;
              IStrategoTerm term537 = term;
              Success506:
              { 
                Fail605:
                { 
                  term = y_704;
                  lifted455 lifted4550 = new lifted455();
                  lifted4550.f_286 = f_286;
                  lifted4550.z_704 = z_704;
                  term = filter_1_0.instance.invoke(context, term, lifted4550);
                  if(term == null)
                    break Fail605;
                  if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                    break Fail605;
                  { 
                    if(true)
                      break Fail597;
                    if(true)
                      break Success506;
                  }
                }
                term = term537;
              }
              term = h_286;
              if(f_286.value == null)
                break Fail597;
              term = f_286.value;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class check_priorities_0_0 extends Strategy 
  { 
    public static check_priorities_0_0 instance = new check_priorities_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("check_priorities_0_0");
      Fail606:
      { 
        IStrategoTerm y_286 = null;
        IStrategoTerm z_286 = null;
        IStrategoTerm a_287 = null;
        IStrategoTerm b_287 = null;
        IStrategoTerm d_287 = null;
        IStrategoTerm g_287 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail606;
        y_286 = term.getSubterm(0);
        z_286 = term.getSubterm(1);
        g_287 = term;
        IStrategoTerm term538 = term;
        Success507:
        { 
          Fail607:
          { 
            IStrategoTerm h_287 = null;
            IStrategoTerm l_287 = null;
            term = termFactory.makeTuple(y_286, z_286, random_test.constleft0);
            term = bagof_$Priority_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail607;
            h_287 = term;
            term = termFactory.makeTuple(y_286, z_286, random_test.constassoc0);
            term = bagof_$Priority_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail607;
            term = termFactory.makeTuple(h_287, term);
            term = conc_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail607;
            a_287 = term;
            term = termFactory.makeTuple(y_286, z_286, random_test.constnon_assoc0);
            term = bagof_$Priority_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail607;
            l_287 = term;
            term = termFactory.makeTuple(y_286, z_286, random_test.const291);
            term = bagof_$Priority_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail607;
            term = termFactory.makeTuple(l_287, term);
            term = conc_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail607;
            b_287 = term;
            term = termFactory.makeTuple(y_286, z_286, random_test.constright0);
            term = bagof_$Priority_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail607;
            term = termFactory.makeTuple(a_287, b_287, term);
            d_287 = term;
            if(true)
              break Success507;
          }
          term = term538;
          IStrategoTerm e_287 = null;
          IStrategoTerm f_287 = null;
          IStrategoTerm q_287 = null;
          e_287 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail606;
          f_287 = term;
          q_287 = e_287;
          term = report_with_failure_0_2.instance.invoke(context, q_287, random_test.const292, f_287);
          if(term == null)
            break Fail606;
        }
        term = g_287;
        if(d_287 == null)
          break Fail606;
        term = d_287;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class distribute_rejections_0_3 extends Strategy 
  { 
    public static distribute_rejections_0_3 instance = new distribute_rejections_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm a_705, IStrategoTerm b_705, IStrategoTerm c_705)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("distribute_rejections_0_3");
      Fail608:
      { 
        IStrategoTerm term539 = term;
        Success508:
        { 
          Fail609:
          { 
            IStrategoTerm p_298 = null;
            IStrategoTerm s_298 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail609;
            IStrategoTerm arg209 = term.getSubterm(0);
            if(arg209.getTermType() != IStrategoTerm.INT || 0 != ((IStrategoInt)arg209).intValue())
              break Fail609;
            IStrategoTerm arg210 = term.getSubterm(1);
            if(arg210.getTermType() != IStrategoTerm.INT || 1 != ((IStrategoInt)arg210).intValue())
              break Fail609;
            s_298 = term;
            IStrategoTerm term540 = term;
            Success509:
            { 
              Fail610:
              { 
                term = (IStrategoTerm)termFactory.makeListCons(a_705, termFactory.makeListCons(b_705, termFactory.makeListCons(c_705, (IStrategoList)random_test.constNil0)));
                term = concat_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail610;
                term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constNil0);
                p_298 = term;
                if(true)
                  break Success509;
              }
              term = term540;
              IStrategoTerm q_298 = null;
              IStrategoTerm r_298 = null;
              IStrategoTerm w_298 = null;
              q_298 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail609;
              r_298 = term;
              w_298 = q_298;
              term = report_with_failure_0_2.instance.invoke(context, w_298, random_test.const293, r_298);
              if(term == null)
                break Fail609;
            }
            term = s_298;
            if(p_298 == null)
              break Fail609;
            term = p_298;
            if(true)
              break Success508;
          }
          term = term539;
          IStrategoTerm term541 = term;
          Success510:
          { 
            Fail611:
            { 
              IStrategoTerm j_298 = null;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail611;
              j_298 = term.getSubterm(0);
              if(term.getSubterm(1) != j_298 && !j_298.match(term.getSubterm(1)))
                break Fail611;
              term = random_test.constNil0;
              if(true)
                break Success510;
            }
            term = term541;
            IStrategoTerm term542 = term;
            Success511:
            { 
              Fail612:
              { 
                IStrategoTerm w_297 = null;
                IStrategoTerm x_297 = null;
                IStrategoTerm y_297 = null;
                IStrategoTerm b_298 = null;
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail612;
                IStrategoTerm arg211 = term.getSubterm(0);
                if(arg211.getTermType() != IStrategoTerm.INT || 0 != ((IStrategoInt)arg211).intValue())
                  break Fail612;
                x_297 = term.getSubterm(1);
                b_298 = term;
                IStrategoTerm term543 = term;
                Success512:
                { 
                  Fail613:
                  { 
                    term = termFactory.makeTuple(b_705, c_705);
                    term = conc_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail613;
                    w_297 = term;
                    term = termFactory.makeTuple(random_test.const186, x_297);
                    term = this.invoke(context, term, a_705, b_705, c_705);
                    if(term == null)
                      break Fail613;
                    term = termFactory.makeTuple((IStrategoTerm)termFactory.makeListCons(w_297, (IStrategoList)random_test.constNil0), term);
                    term = conc_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail613;
                    y_297 = term;
                    if(true)
                      break Success512;
                  }
                  term = term543;
                  IStrategoTerm z_297 = null;
                  IStrategoTerm a_298 = null;
                  IStrategoTerm f_298 = null;
                  z_297 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail612;
                  a_298 = term;
                  f_298 = z_297;
                  term = report_with_failure_0_2.instance.invoke(context, f_298, random_test.const293, a_298);
                  if(term == null)
                    break Fail612;
                }
                term = b_298;
                if(y_297 == null)
                  break Fail612;
                term = y_297;
                if(true)
                  break Success511;
              }
              term = term542;
              IStrategoTerm w_287 = null;
              IStrategoTerm x_287 = null;
              IStrategoTerm y_287 = null;
              IStrategoTerm z_287 = null;
              IStrategoTerm a_288 = null;
              IStrategoTerm e_288 = null;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail608;
              w_287 = term.getSubterm(0);
              z_287 = term.getSubterm(1);
              e_288 = term;
              IStrategoTerm term544 = term;
              Success513:
              { 
                Fail614:
                { 
                  term = termFactory.makeTuple(w_287, random_test.const186);
                  term = addi_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail614;
                  y_287 = term;
                  Success514:
                  { 
                    Fail615:
                    { 
                      IStrategoTerm b_288 = null;
                      b_288 = term;
                      term = y_287;
                      if(term != z_287 && !z_287.match(term))
                        break Fail615;
                      term = b_288;
                      { 
                        term = termFactory.makeTuple(a_705, b_705);
                        term = conc_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail614;
                        x_287 = term;
                        if(true)
                          break Success514;
                      }
                    }
                    term = b_705;
                    x_287 = b_705;
                  }
                  term = termFactory.makeTuple(y_287, z_287);
                  term = this.invoke(context, term, a_705, b_705, c_705);
                  if(term == null)
                    break Fail614;
                  term = termFactory.makeTuple((IStrategoTerm)termFactory.makeListCons(x_287, (IStrategoList)random_test.constNil0), term);
                  term = conc_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail614;
                  a_288 = term;
                  if(true)
                    break Success513;
                }
                term = term544;
                IStrategoTerm c_288 = null;
                IStrategoTerm d_288 = null;
                IStrategoTerm i_288 = null;
                c_288 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail608;
                d_288 = term;
                i_288 = c_288;
                term = report_with_failure_0_2.instance.invoke(context, i_288, random_test.const293, d_288);
                if(term == null)
                  break Fail608;
              }
              term = e_288;
              if(a_288 == null)
                break Fail608;
              term = a_288;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class generate_random_maxima_0_1 extends Strategy 
  { 
    public static generate_random_maxima_0_1 instance = new generate_random_maxima_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_x_298)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference x_298 = new TermReference(ref_x_298);
      context.push("generate_random_maxima_0_1");
      Fail616:
      { 
        TermReference z_298 = new TermReference();
        IStrategoTerm d_299 = null;
        term = generate_random_percentages_rec_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail616;
        d_299 = term;
        term = sum_0_0.instance.invoke(context, d_299);
        if(term == null)
          break Fail616;
        term = termFactory.makeTuple(term, random_test.const186);
        term = addi_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail616;
        if(z_298.value == null)
          z_298.value = term;
        else
          if(z_298.value != term && !z_298.value.match(term))
            break Fail616;
        term = d_299;
        lifted456 lifted4560 = new lifted456();
        lifted4560.x_298 = x_298;
        lifted4560.z_298 = z_298;
        term = map_1_0.instance.invoke(context, term, lifted4560);
        if(term == null)
          break Fail616;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class generate_random_percentages_rec_0_0 extends Strategy 
  { 
    public static generate_random_percentages_rec_0_0 instance = new generate_random_percentages_rec_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("generate_random_percentages_rec_0_0");
      Fail617:
      { 
        IStrategoTerm l_299 = null;
        l_299 = term;
        Success515:
        { 
          Fail618:
          { 
            IStrategoTerm n_299 = null;
            n_299 = term;
            term = termFactory.makeTuple(l_299, random_test.const58);
            term = gt_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail618;
            term = n_299;
            { 
              IStrategoTerm o_299 = null;
              IStrategoTerm q_299 = null;
              IStrategoTerm p_299 = null;
              IStrategoTerm t_299 = null;
              q_299 = term;
              term = next_random_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail617;
              term = abs_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail617;
              term = termFactory.makeTuple(term, random_test.const108);
              term = mod_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail617;
              o_299 = term;
              t_299 = q_299;
              term = termFactory.makeTuple(l_299, random_test.const109);
              term = addi_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail617;
              term = this.invoke(context, term);
              if(term == null)
                break Fail617;
              p_299 = term;
              term = t_299;
              IStrategoList list25;
              list25 = checkListTail(p_299);
              if(list25 == null)
                break Fail617;
              term = (IStrategoTerm)termFactory.makeListCons(o_299, list25);
              if(true)
                break Success515;
            }
          }
          term = random_test.constNil0;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class generate_program_0_6 extends Strategy 
  { 
    public static generate_program_0_6 instance = new generate_program_0_6();

    public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_z_299, IStrategoTerm ref_a_300, IStrategoTerm ref_b_300, IStrategoTerm ref_c_300, IStrategoTerm ref_d_300, IStrategoTerm ref_e_300)
    { 
      TermReference z_299 = new TermReference(ref_z_299);
      TermReference a_300 = new TermReference(ref_a_300);
      TermReference b_300 = new TermReference(ref_b_300);
      TermReference c_300 = new TermReference(ref_c_300);
      TermReference d_300 = new TermReference(ref_d_300);
      TermReference e_300 = new TermReference(ref_e_300);
      context.push("generate_program_0_6");
      Fail619:
      { 
        TermReference f_300 = new TermReference();
        TermReference g_300 = new TermReference();
        TermReference h_300 = new TermReference();
        TermReference i_300 = new TermReference();
        TermReference k_300 = new TermReference();
        TermReference l_300 = new TermReference();
        TermReference m_300 = new TermReference();
        TermReference n_300 = new TermReference();
        TermReference o_300 = new TermReference();
        TermReference p_300 = new TermReference();
        TermReference q_300 = new TermReference();
        TermReference r_300 = new TermReference();
        TermReference s_300 = new TermReference();
        TermReference t_300 = new TermReference();
        TermReference u_300 = new TermReference();
        TermReference v_300 = new TermReference();
        TermReference w_300 = new TermReference();
        TermReference x_300 = new TermReference();
        TermReference y_300 = new TermReference();
        TermReference z_300 = new TermReference();
        IStrategoTerm o_301 = null;
        o_301 = term;
        IStrategoTerm term547 = term;
        Success516:
        { 
          Fail620:
          { 
            IStrategoTerm p_301 = null;
            IStrategoTerm q_301 = null;
            term = debug_1_0.instance.invoke(context, term, lifted457.instance);
            if(term == null)
              break Fail620;
            q_301 = term;
            p_301 = random_test.const121;
            term = q_301;
            lifted458 lifted4580 = new lifted458();
            lifted4580.f_300 = f_300;
            lifted4580.b_300 = b_300;
            lifted4580.c_300 = c_300;
            lifted4580.g_300 = g_300;
            lifted4580.e_300 = e_300;
            lifted4580.h_300 = h_300;
            lifted4580.i_300 = i_300;
            lifted4580.a_300 = a_300;
            lifted4580.k_300 = k_300;
            lifted4580.m_300 = m_300;
            lifted4580.l_300 = l_300;
            lifted4580.z_299 = z_299;
            lifted4580.n_300 = n_300;
            lifted4580.o_300 = o_300;
            lifted4580.d_300 = d_300;
            lifted4580.p_300 = p_300;
            lifted4580.q_300 = q_300;
            lifted4580.r_300 = r_300;
            lifted4580.s_300 = s_300;
            lifted4580.t_300 = t_300;
            lifted4580.u_300 = u_300;
            lifted4580.v_300 = v_300;
            lifted4580.w_300 = w_300;
            lifted4580.x_300 = x_300;
            lifted4580.y_300 = y_300;
            lifted4580.z_300 = z_300;
            term = dr_scope_1_1.instance.invoke(context, term, lifted4580, p_301);
            if(term == null)
              break Fail620;
            if(true)
              break Success516;
          }
          term = term547;
          IStrategoTerm m_301 = null;
          IStrategoTerm n_301 = null;
          IStrategoTerm z_302 = null;
          m_301 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail619;
          n_301 = term;
          z_302 = m_301;
          term = report_with_failure_0_2.instance.invoke(context, z_302, random_test.const314, n_301);
          if(term == null)
            break Fail619;
        }
        term = o_301;
        if(z_300.value == null)
          break Fail619;
        term = z_300.value;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }

    @Override public IStrategoTerm invokeDynamic(Context context, IStrategoTerm term, Strategy[] sargs, IStrategoTerm[] targs)
    { 
      if(sargs == null || targs == null || sargs.length != 0 || targs.length != 6)
        throw new IllegalArgumentException("Illegal arguments for " + getName());
      return invoke(context, term, targs[0], targs[1], targs[2], targs[3], targs[4], targs[5]);
    }
  }

  @SuppressWarnings("all") public static class help_strategy_0_6 extends Strategy 
  { 
    public static help_strategy_0_6 instance = new help_strategy_0_6();

    public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_b_303, IStrategoTerm ref_c_303, IStrategoTerm g_303, IStrategoTerm h_303, IStrategoTerm j_303, IStrategoTerm k_303)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference b_303 = new TermReference(ref_b_303);
      TermReference c_303 = new TermReference(ref_c_303);
      context.push("help_strategy_0_6");
      Fail621:
      { 
        TermReference l_303 = new TermReference();
        TermReference m_303 = new TermReference();
        IStrategoTerm n_303 = null;
        IStrategoTerm term557 = term;
        Success517:
        { 
          Fail622:
          { 
            IStrategoTerm o_303 = null;
            o_303 = term;
            lifted476 lifted4760 = new lifted476();
            lifted4760.b_303 = b_303;
            lifted4760.c_303 = c_303;
            lifted4760.m_303 = m_303;
            term = and_2_0.instance.invoke(context, term, lifted475.instance, lifted4760);
            if(term == null)
              break Fail622;
            term = o_303;
            { 
              if(m_303.value == null)
                break Fail621;
              term = nbl_current_definitions_0_0.instance.invoke(context, m_303.value);
              if(term == null)
                break Fail621;
              if(l_303.value == null)
                l_303.value = term;
              else
                if(l_303.value != term && !l_303.value.match(term))
                  break Fail621;
              IStrategoTerm term559 = term;
              Success518:
              { 
                Fail623:
                { 
                  IStrategoTerm q_303 = null;
                  q_303 = term;
                  lifted477 lifted4770 = new lifted477();
                  lifted4770.l_303 = l_303;
                  term = and_2_0.instance.invoke(context, term, lifted4770, lifted478.instance);
                  if(term == null)
                    break Fail623;
                  term = q_303;
                  { 
                    if(l_303.value == null)
                      break Fail621;
                    term = use_nbl_referral_0_4.instance.invoke(context, l_303.value, j_303, k_303, g_303, h_303);
                    if(term == null)
                      break Fail621;
                    n_303 = term;
                    if(true)
                      break Success518;
                  }
                }
                term = term559;
                if(m_303.value == null)
                  break Fail621;
                term = inject_$N$B$L_definition_creation_0_4.instance.invoke(context, m_303.value, j_303, k_303, g_303, h_303);
                if(term == null)
                  break Fail621;
                n_303 = term;
              }
              if(true)
                break Success517;
            }
          }
          term = term557;
          if(b_303.value == null || c_303.value == null)
            break Fail621;
          term = termFactory.makeTuple(b_303.value, c_303.value, g_303, h_303, j_303, k_303);
          term = generate_term_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail621;
          n_303 = term;
        }
        term = n_303;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }

    @Override public IStrategoTerm invokeDynamic(Context context, IStrategoTerm term, Strategy[] sargs, IStrategoTerm[] targs)
    { 
      if(sargs == null || targs == null || sargs.length != 0 || targs.length != 6)
        throw new IllegalArgumentException("Illegal arguments for " + getName());
      return invoke(context, term, targs[0], targs[1], targs[2], targs[3], targs[4], targs[5]);
    }
  }

  @SuppressWarnings("all") public static class generate_term_0_0 extends Strategy 
  { 
    public static generate_term_0_0 instance = new generate_term_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("generate_term_0_0");
      Fail624:
      { 
        IStrategoTerm e_304 = null;
        IStrategoTerm f_304 = null;
        IStrategoTerm g_304 = null;
        IStrategoTerm i_304 = null;
        IStrategoTerm j_304 = null;
        IStrategoTerm k_304 = null;
        TermReference l_304 = new TermReference();
        TermReference m_304 = new TermReference();
        IStrategoTerm n_304 = null;
        IStrategoTerm o_304 = null;
        IStrategoTerm p_304 = null;
        IStrategoTerm q_304 = null;
        IStrategoTerm r_304 = null;
        IStrategoTerm t_304 = null;
        IStrategoTerm c_305 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 6)
          break Fail624;
        j_304 = term.getSubterm(0);
        k_304 = term.getSubterm(1);
        n_304 = term.getSubterm(2);
        o_304 = term.getSubterm(3);
        if(l_304.value == null)
          l_304.value = term.getSubterm(4);
        else
          if(l_304.value != term.getSubterm(4) && !l_304.value.match(term.getSubterm(4)))
            break Fail624;
        if(m_304.value == null)
          m_304.value = term.getSubterm(5);
        else
          if(m_304.value != term.getSubterm(5) && !m_304.value.match(term.getSubterm(5)))
            break Fail624;
        c_305 = term;
        IStrategoTerm term561 = term;
        Success519:
        { 
          Fail625:
          { 
            IStrategoTerm g_305 = null;
            term = filter_prods_0_0.instance.invoke(context, k_304);
            if(term == null)
              break Fail625;
            e_304 = term;
            term = number$Items_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail625;
            term = $Item$Count_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail625;
            g_305 = term;
            term = termFactory.makeTuple(o_304, n_304);
            term = subti_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail625;
            term = generate_random_maxima_0_1.instance.invoke(context, g_305, term);
            if(term == null)
              break Fail625;
            f_304 = term;
            term = $Item$Count_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail625;
            term = termFactory.makeTuple(k_304, j_304, term);
            term = get_and_distribute_rejections_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail625;
            g_304 = term;
            term = termFactory.makeTuple(e_304, f_304);
            term = zip_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail625;
            term = termFactory.makeTuple(term, g_304);
            term = zip_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail625;
            lifted479 lifted4790 = new lifted479();
            lifted4790.l_304 = l_304;
            lifted4790.m_304 = m_304;
            term = map_1_0.instance.invoke(context, term, lifted4790);
            if(term == null)
              break Fail625;
            p_304 = term;
            IStrategoTerm term562 = term;
            Success520:
            { 
              Fail626:
              { 
                IStrategoTerm x_304 = null;
                x_304 = term;
                term = termFactory.makeTuple(j_304, k_304);
                term = $C$F$Cons_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail626;
                i_304 = term;
                term = x_304;
                { 
                  IStrategoTerm mkterm19;
                  mkterm19 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{i_304, p_304});
                  if(mkterm19 == null)
                    break Fail625;
                  term = mkterm19;
                  t_304 = mkterm19;
                  if(true)
                    break Success520;
                }
              }
              term = term562;
              Success521:
              { 
                Fail627:
                { 
                  IStrategoTerm y_304 = null;
                  y_304 = term;
                  term = termFactory.makeTuple(j_304, k_304);
                  term = is_special$A$S$T$Term_0_5.instance.invoke(context, term, k_304, l_304.value, m_304.value, n_304, o_304);
                  if(term == null)
                    break Fail627;
                  q_304 = term;
                  term = y_304;
                  { 
                    term = q_304;
                    t_304 = q_304;
                    if(true)
                      break Success521;
                  }
                }
                term = p_304;
                r_304 = p_304;
                Success522:
                { 
                  Fail628:
                  { 
                    IStrategoTerm z_304 = null;
                    z_304 = term;
                    term = r_304;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail628;
                    q_304 = ((IStrategoList)term).head();
                    IStrategoTerm arg213 = ((IStrategoList)term).tail();
                    if(arg213.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg213).isEmpty())
                      break Fail628;
                    term = z_304;
                    { 
                      term = q_304;
                      t_304 = q_304;
                      if(true)
                        break Success522;
                    }
                  }
                  term = r_304;
                  t_304 = r_304;
                }
              }
            }
            term = random_test.constNone0;
            if(true)
              break Success519;
          }
          term = term561;
          IStrategoTerm a_305 = null;
          IStrategoTerm b_305 = null;
          IStrategoTerm o_305 = null;
          a_305 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail624;
          b_305 = term;
          o_305 = a_305;
          term = report_with_failure_0_2.instance.invoke(context, o_305, random_test.const315, b_305);
          if(term == null)
            break Fail624;
        }
        term = c_305;
        if(t_304 == null)
          break Fail624;
        term = t_304;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_special$A$S$T$Term_0_5 extends Strategy 
  { 
    public static is_special$A$S$T$Term_0_5 instance = new is_special$A$S$T$Term_0_5();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm p_305, IStrategoTerm q_305, IStrategoTerm r_305, IStrategoTerm s_305, IStrategoTerm t_305)
    { 
      context.push("is_specialASTTerm_0_5");
      Fail629:
      { 
        IStrategoTerm u_305 = null;
        term = $Special$A$S$T$Term_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail629;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTStart_1 != ((IStrategoAppl)term).getConstructor())
          break Fail629;
        u_305 = term.getSubterm(0);
        term = process_$A$S$T$Term_0_5.instance.invoke(context, u_305, p_305, q_305, r_305, s_305, t_305);
        if(term == null)
          break Fail629;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class update_cons_coverage_0_0 extends Strategy 
  { 
    public static update_cons_coverage_0_0 instance = new update_cons_coverage_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("update_cons_coverage_0_0");
      Fail630:
      { 
        term = create_key_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail630;
        term = $Cons$Key_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail630;
        term = write_$Covered$Cons_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail630;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_$Covered$Cons_0_0 extends Strategy 
  { 
    public static write_$Covered$Cons_0_0 instance = new write_$Covered$Cons_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_CoveredCons_0_0");
      Fail631:
      { 
        IStrategoTerm w_305 = null;
        IStrategoTerm x_305 = null;
        IStrategoTerm y_305 = null;
        IStrategoTerm a_306 = null;
        IStrategoTerm b_306 = null;
        w_305 = term;
        x_305 = term;
        a_306 = term;
        y_305 = random_test.const0;
        b_306 = a_306;
        term = termFactory.makeTuple(random_test.const1, w_305);
        term = dr_set_rule_0_3.instance.invoke(context, b_306, y_305, w_305, term);
        if(term == null)
          break Fail631;
        term = x_305;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_and_distribute_rejections_0_0 extends Strategy 
  { 
    public static get_and_distribute_rejections_0_0 instance = new get_and_distribute_rejections_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("get_and_distribute_rejections_0_0");
      Fail632:
      { 
        IStrategoTerm c_306 = null;
        IStrategoTerm d_306 = null;
        IStrategoTerm e_306 = null;
        IStrategoTerm f_306 = null;
        IStrategoTerm g_306 = null;
        IStrategoTerm h_306 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail632;
        c_306 = term.getSubterm(0);
        d_306 = term.getSubterm(1);
        e_306 = term.getSubterm(2);
        term = termFactory.makeTuple(c_306, d_306);
        term = check_priorities_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail632;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail632;
        f_306 = term.getSubterm(0);
        g_306 = term.getSubterm(1);
        h_306 = term.getSubterm(2);
        term = termFactory.makeTuple(random_test.const58, e_306);
        term = distribute_rejections_0_3.instance.invoke(context, term, f_306, g_306, h_306);
        if(term == null)
          break Fail632;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class build_weight_list_0_0 extends Strategy 
  { 
    public static build_weight_list_0_0 instance = new build_weight_list_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("build_weight_list_0_0");
      Fail633:
      { 
        term = map_1_0.instance.invoke(context, term, lifted480.instance);
        if(term == null)
          break Fail633;
        term = termFactory.makeTuple(term, random_test.const58);
        term = thread_map_1_0.instance.invoke(context, term, lifted481.instance);
        if(term == null)
          break Fail633;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class choose_alternative_0_1 extends Strategy 
  { 
    public static choose_alternative_0_1 instance = new choose_alternative_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm d_705)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("choose_alternative_0_1");
      Fail634:
      { 
        IStrategoTerm term566 = term;
        Success523:
        { 
          Fail635:
          { 
            IStrategoTerm f_307 = null;
            IStrategoTerm h_307 = null;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail635;
            IStrategoTerm arg215 = ((IStrategoList)term).head();
            if(arg215.getTermType() != IStrategoTerm.TUPLE || arg215.getSubtermCount() != 2)
              break Fail635;
            f_307 = arg215.getSubterm(0);
            h_307 = arg215.getSubterm(1);
            term = termFactory.makeTuple(d_705, h_307);
            term = leq_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail635;
            term = f_307;
            if(true)
              break Success523;
          }
          term = term566;
          IStrategoTerm t_306 = null;
          IStrategoTerm u_306 = null;
          IStrategoTerm v_306 = null;
          IStrategoTerm y_306 = null;
          IStrategoTerm z_306 = null;
          IStrategoTerm a_307 = null;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail634;
          IStrategoTerm arg216 = ((IStrategoList)term).head();
          if(arg216.getTermType() != IStrategoTerm.TUPLE || arg216.getSubtermCount() != 2)
            break Fail634;
          t_306 = arg216.getSubterm(1);
          u_306 = ((IStrategoList)term).tail();
          y_306 = term;
          IStrategoTerm term567 = term;
          Success524:
          { 
            Fail636:
            { 
              term = u_306;
              if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                break Fail636;
              { 
                if(true)
                  break Fail634;
                if(true)
                  break Success524;
              }
            }
            term = term567;
          }
          z_306 = y_306;
          term = termFactory.makeTuple(d_705, t_306);
          term = gt_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail634;
          term = z_306;
          a_307 = z_306;
          IStrategoTerm term568 = term;
          Success525:
          { 
            Fail637:
            { 
              term = this.invoke(context, u_306, d_705);
              if(term == null)
                break Fail637;
              v_306 = term;
              if(true)
                break Success525;
            }
            term = term568;
            IStrategoTerm w_306 = null;
            IStrategoTerm x_306 = null;
            IStrategoTerm c_307 = null;
            w_306 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail634;
            x_306 = term;
            c_307 = w_306;
            term = report_with_failure_0_2.instance.invoke(context, c_307, random_test.const316, x_306);
            if(term == null)
              break Fail634;
          }
          term = a_307;
          if(v_306 == null)
            break Fail634;
          term = v_306;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_$S$D$F_constructor_0_0 extends Strategy 
  { 
    public static get_$S$D$F_constructor_0_0 instance = new get_$S$D$F_constructor_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("get_SDF_constructor_0_0");
      Fail638:
      { 
        IStrategoTerm term569 = term;
        Success526:
        { 
          Fail639:
          { 
            IStrategoTerm n_307 = null;
            IStrategoTerm o_307 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail639;
            n_307 = term.getSubterm(0);
            o_307 = term.getSubterm(1);
            term = termFactory.makeTuple(n_307, o_307);
            term = $C$F$Cons_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail639;
            if(true)
              break Success526;
          }
          term = term569;
          IStrategoTerm j_307 = null;
          IStrategoTerm k_307 = null;
          IStrategoTerm m_307 = null;
          j_307 = term;
          term = $Special$A$S$T$Term_0_0.instance.invoke(context, j_307);
          if(term == null)
            break Fail638;
          if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTStart_1 != ((IStrategoAppl)term).getConstructor())
            break Fail638;
          m_307 = term.getSubterm(0);
          term = m_307;
          if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTcons_2 != ((IStrategoAppl)term).getConstructor())
            break Fail638;
          k_307 = term.getSubterm(0);
          term = k_307;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class process_$A$S$T$Term_0_5 extends Strategy 
  { 
    public static process_$A$S$T$Term_0_5 instance = new process_$A$S$T$Term_0_5();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_e_705, IStrategoTerm ref_f_705, IStrategoTerm ref_g_705, IStrategoTerm ref_h_705, IStrategoTerm ref_i_705)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference e_705 = new TermReference(ref_e_705);
      TermReference f_705 = new TermReference(ref_f_705);
      TermReference g_705 = new TermReference(ref_g_705);
      TermReference h_705 = new TermReference(ref_h_705);
      TermReference i_705 = new TermReference(ref_i_705);
      context.push("process_ASTTerm_0_5");
      Fail640:
      { 
        IStrategoTerm term570 = term;
        IStrategoConstructor cons53 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success527:
        { 
          if(cons53 == random_test._consASTcons_2)
          { 
            Fail641:
            { 
              IStrategoTerm m_311 = null;
              IStrategoTerm n_311 = null;
              IStrategoTerm o_311 = null;
              IStrategoTerm r_311 = null;
              m_311 = term.getSubterm(0);
              n_311 = term.getSubterm(1);
              r_311 = term;
              IStrategoTerm term571 = term;
              Success528:
              { 
                Fail642:
                { 
                  term = n_311;
                  lifted482 lifted4820 = new lifted482();
                  lifted4820.e_705 = e_705;
                  lifted4820.f_705 = f_705;
                  lifted4820.g_705 = g_705;
                  lifted4820.h_705 = h_705;
                  lifted4820.i_705 = i_705;
                  term = map_1_0.instance.invoke(context, term, lifted4820);
                  if(term == null)
                    break Fail642;
                  o_311 = term;
                  if(true)
                    break Success528;
                }
                term = term571;
                IStrategoTerm p_311 = null;
                IStrategoTerm q_311 = null;
                IStrategoTerm t_311 = null;
                p_311 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail641;
                q_311 = term;
                t_311 = p_311;
                term = report_with_failure_0_2.instance.invoke(context, t_311, random_test.const317, q_311);
                if(term == null)
                  break Fail641;
              }
              term = r_311;
              if(o_311 == null)
                break Fail641;
              IStrategoTerm mkterm20;
              mkterm20 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{m_311, o_311});
              if(mkterm20 == null)
                break Fail641;
              term = mkterm20;
              if(true)
                break Success527;
            }
            term = term570;
          }
          Success529:
          { 
            if(cons53 == random_test._consASTid_1)
            { 
              Fail643:
              { 
                IStrategoTerm x_310 = null;
                x_310 = term.getSubterm(0);
                IStrategoTerm term573 = term;
                Success530:
                { 
                  Fail644:
                  { 
                    term = write_to_string_0_0.instance.invoke(context, x_310);
                    if(term == null)
                      break Fail644;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const318, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail644;
                    term = debug_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail644;
                    if(true)
                      break Success530;
                  }
                  term = term573;
                  IStrategoTerm y_310 = null;
                  IStrategoTerm z_310 = null;
                  IStrategoTerm e_311 = null;
                  y_310 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail643;
                  z_310 = term;
                  e_311 = y_310;
                  term = report_with_failure_0_2.instance.invoke(context, e_311, random_test.const317, z_310);
                  if(term == null)
                    break Fail643;
                }
                term = x_310;
                if(true)
                  break Success529;
              }
              term = term570;
            }
            Success531:
            { 
              if(cons53 == random_test._consASTstring_1)
              { 
                Fail645:
                { 
                  IStrategoTerm j_310 = null;
                  IStrategoTerm k_310 = null;
                  IStrategoTerm n_310 = null;
                  j_310 = term.getSubterm(0);
                  n_310 = term;
                  IStrategoTerm term575 = term;
                  Success532:
                  { 
                    Fail646:
                    { 
                      term = un_double_quote_0_0.instance.invoke(context, j_310);
                      if(term == null)
                        break Fail646;
                      k_310 = term;
                      if(true)
                        break Success532;
                    }
                    term = term575;
                    IStrategoTerm l_310 = null;
                    IStrategoTerm m_310 = null;
                    IStrategoTerm p_310 = null;
                    l_310 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail645;
                    m_310 = term;
                    p_310 = l_310;
                    term = report_with_failure_0_2.instance.invoke(context, p_310, random_test.const317, m_310);
                    if(term == null)
                      break Fail645;
                  }
                  term = n_310;
                  if(k_310 == null)
                    break Fail645;
                  term = k_310;
                  if(true)
                    break Success531;
                }
                term = term570;
              }
              Success533:
              { 
                if(cons53 == random_test._consASTint_1)
                { 
                  Fail647:
                  { 
                    IStrategoTerm u_309 = null;
                    IStrategoTerm v_309 = null;
                    IStrategoTerm y_309 = null;
                    u_309 = term.getSubterm(0);
                    y_309 = term;
                    IStrategoTerm term577 = term;
                    Success534:
                    { 
                      Fail648:
                      { 
                        term = string_to_int_0_0.instance.invoke(context, u_309);
                        if(term == null)
                          break Fail648;
                        v_309 = term;
                        if(true)
                          break Success534;
                      }
                      term = term577;
                      IStrategoTerm w_309 = null;
                      IStrategoTerm x_309 = null;
                      IStrategoTerm b_310 = null;
                      w_309 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail647;
                      x_309 = term;
                      b_310 = w_309;
                      term = report_with_failure_0_2.instance.invoke(context, b_310, random_test.const317, x_309);
                      if(term == null)
                        break Fail647;
                    }
                    term = y_309;
                    if(v_309 == null)
                      break Fail647;
                    term = v_309;
                    if(true)
                      break Success533;
                  }
                  term = term570;
                }
                IStrategoTerm term578 = term;
                Success535:
                { 
                  Fail649:
                  { 
                    IStrategoTerm v_308 = null;
                    IStrategoTerm w_308 = null;
                    IStrategoTerm z_308 = null;
                    TermReference a_309 = new TermReference();
                    IStrategoTerm b_309 = null;
                    IStrategoTerm c_309 = null;
                    IStrategoTerm f_309 = null;
                    if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTparam_1 != ((IStrategoAppl)term).getConstructor())
                      break Fail649;
                    v_308 = term.getSubterm(0);
                    f_309 = term;
                    IStrategoTerm term579 = term;
                    Success536:
                    { 
                      Fail650:
                      { 
                        IStrategoTerm j_309 = null;
                        if(e_705.value == null)
                          break Fail650;
                        term = filter_1_0.instance.invoke(context, e_705.value, lifted483.instance);
                        if(term == null)
                          break Fail650;
                        term = number$Items_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail650;
                        w_308 = term;
                        term = string_to_int_0_0.instance.invoke(context, v_308);
                        if(term == null)
                          break Fail650;
                        term = termFactory.makeTuple(term, random_test.const109);
                        term = addi_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail650;
                        if(a_309.value == null)
                          a_309.value = term;
                        else
                          if(a_309.value != term && !a_309.value.match(term))
                            break Fail650;
                        term = w_308;
                        lifted485 lifted4850 = new lifted485();
                        lifted4850.a_309 = a_309;
                        term = filter_1_0.instance.invoke(context, term, lifted4850);
                        if(term == null)
                          break Fail650;
                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                          break Fail650;
                        z_308 = ((IStrategoList)term).head();
                        term = z_308;
                        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                          break Fail650;
                        b_309 = term.getSubterm(0);
                        if(a_309.value == null)
                          a_309.value = term.getSubterm(1);
                        else
                          if(a_309.value != term.getSubterm(1) && !a_309.value.match(term.getSubterm(1)))
                            break Fail650;
                        j_309 = b_309;
                        term = write_rule_0_5.instance.invoke(context, j_309, f_705.value, g_705.value, h_705.value, i_705.value, random_test.constNil0);
                        if(term == null)
                          break Fail650;
                        c_309 = term;
                        if(true)
                          break Success536;
                      }
                      term = term579;
                      IStrategoTerm d_309 = null;
                      IStrategoTerm e_309 = null;
                      IStrategoTerm m_309 = null;
                      d_309 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail649;
                      e_309 = term;
                      m_309 = d_309;
                      term = report_with_failure_0_2.instance.invoke(context, m_309, random_test.const317, e_309);
                      if(term == null)
                        break Fail649;
                    }
                    term = f_309;
                    if(c_309 == null)
                      break Fail649;
                    term = c_309;
                    if(true)
                      break Success535;
                  }
                  term = term578;
                  IStrategoTerm y_307 = null;
                  IStrategoTerm z_307 = null;
                  IStrategoTerm c_308 = null;
                  if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTlist_1 != ((IStrategoAppl)term).getConstructor())
                    break Fail640;
                  y_307 = term.getSubterm(0);
                  c_308 = term;
                  IStrategoTerm term580 = term;
                  Success537:
                  { 
                    Fail651:
                    { 
                      term = y_307;
                      lifted486 lifted4860 = new lifted486();
                      lifted4860.e_705 = e_705;
                      lifted4860.f_705 = f_705;
                      lifted4860.g_705 = g_705;
                      lifted4860.h_705 = h_705;
                      lifted4860.i_705 = i_705;
                      term = map_1_0.instance.invoke(context, term, lifted4860);
                      if(term == null)
                        break Fail651;
                      z_307 = term;
                      if(true)
                        break Success537;
                    }
                    term = term580;
                    IStrategoTerm a_308 = null;
                    IStrategoTerm b_308 = null;
                    IStrategoTerm h_308 = null;
                    a_308 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail640;
                    b_308 = term;
                    h_308 = a_308;
                    term = report_with_failure_0_2.instance.invoke(context, h_308, random_test.const317, b_308);
                    if(term == null)
                      break Fail640;
                  }
                  term = c_308;
                  if(z_307 == null)
                    break Fail640;
                  term = z_307;
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_rule_0_5 extends Strategy 
  { 
    public static write_rule_0_5 instance = new write_rule_0_5();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_j_705, IStrategoTerm ref_k_705, IStrategoTerm ref_l_705, IStrategoTerm ref_m_705, IStrategoTerm ref_n_705)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference j_705 = new TermReference(ref_j_705);
      TermReference k_705 = new TermReference(ref_k_705);
      TermReference l_705 = new TermReference(ref_l_705);
      TermReference m_705 = new TermReference(ref_m_705);
      TermReference n_705 = new TermReference(ref_n_705);
      context.push("write_rule_0_5");
      Fail652:
      { 
        IStrategoTerm term581 = term;
        Success538:
        { 
          Fail653:
          { 
            IStrategoTerm s_320 = null;
            IStrategoTerm t_320 = null;
            IStrategoTerm u_320 = null;
            IStrategoTerm w_320 = null;
            IStrategoTerm z_320 = null;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consseq_2 != ((IStrategoAppl)term).getConstructor())
              break Fail653;
            s_320 = term.getSubterm(0);
            t_320 = term.getSubterm(1);
            z_320 = term;
            IStrategoTerm term582 = term;
            Success539:
            { 
              Fail654:
              { 
                term = this.invoke(context, s_320, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value);
                if(term == null)
                  break Fail654;
                u_320 = term;
                term = t_320;
                lifted487 lifted4870 = new lifted487();
                lifted4870.j_705 = j_705;
                lifted4870.k_705 = k_705;
                lifted4870.l_705 = l_705;
                lifted4870.m_705 = m_705;
                lifted4870.n_705 = n_705;
                term = map_1_0.instance.invoke(context, term, lifted4870);
                if(term == null)
                  break Fail654;
                term = termFactory.makeTuple((IStrategoTerm)termFactory.makeListCons(u_320, (IStrategoList)random_test.constNil0), term);
                term = conc_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail654;
                w_320 = term;
                if(true)
                  break Success539;
              }
              term = term582;
              IStrategoTerm x_320 = null;
              IStrategoTerm y_320 = null;
              IStrategoTerm b_321 = null;
              x_320 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail653;
              y_320 = term;
              b_321 = x_320;
              term = report_with_failure_0_2.instance.invoke(context, b_321, random_test.const319, y_320);
              if(term == null)
                break Fail653;
            }
            term = z_320;
            if(w_320 == null)
              break Fail653;
            term = w_320;
            if(true)
              break Success538;
          }
          term = term581;
          IStrategoTerm term583 = term;
          Success540:
          { 
            Fail655:
            { 
              IStrategoTerm a_319 = null;
              IStrategoTerm e_319 = null;
              IStrategoTerm f_319 = null;
              IStrategoTerm h_319 = null;
              IStrategoTerm j_319 = null;
              IStrategoTerm p_319 = null;
              IStrategoTerm term584 = term;
              IStrategoConstructor cons55 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
              Success541:
              { 
                if(cons55 == random_test._consiter_1)
                { 
                  Fail656:
                  { 
                    a_319 = term.getSubterm(0);
                    if(true)
                      break Success541;
                  }
                  term = term584;
                }
                if(cons55 == random_test._consiter_sep_2)
                { 
                  a_319 = term.getSubterm(0);
                }
                else
                { 
                  break Fail655;
                }
              }
              p_319 = term;
              IStrategoTerm term585 = term;
              Success542:
              { 
                Fail657:
                { 
                  term = filter_prods_0_0.instance.invoke(context, a_319);
                  if(term == null)
                    break Fail657;
                  e_319 = term;
                  IStrategoTerm term586 = term;
                  Success543:
                  { 
                    Fail658:
                    { 
                      IStrategoTerm k_319 = null;
                      k_319 = term;
                      lifted489 lifted4890 = new lifted489();
                      lifted488 lifted4880 = new lifted488();
                      lifted4890.k_705 = k_705;
                      lifted4880.l_705 = l_705;
                      lifted4880.m_705 = m_705;
                      term = or_2_0.instance.invoke(context, term, lifted4880, lifted4890);
                      if(term == null)
                        break Fail658;
                      term = k_319;
                      { 
                        IStrategoTerm u_319 = null;
                        IStrategoTerm w_319 = null;
                        IStrategoTerm x_319 = null;
                        w_319 = e_319;
                        u_319 = random_test.const186;
                        x_319 = w_319;
                        term = this.invoke(context, x_319, j_705.value, k_705.value, u_319, random_test.const58, n_705.value);
                        if(term == null)
                          break Fail657;
                        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constNil0);
                        j_319 = term;
                        if(true)
                          break Success543;
                      }
                    }
                    term = term586;
                    IStrategoTerm b_320 = null;
                    IStrategoTerm d_320 = null;
                    IStrategoTerm g_320 = null;
                    d_320 = term;
                    term = next_random_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail657;
                    term = abs_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail657;
                    b_320 = term;
                    term = d_320;
                    term = $Max$Iter_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail657;
                    term = termFactory.makeTuple(b_320, term);
                    term = mod_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail657;
                    term = termFactory.makeTuple(term, random_test.const186);
                    term = addi_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail657;
                    h_319 = term;
                    if(k_705.value == null)
                      break Fail657;
                    f_319 = k_705.value;
                    term = h_319;
                    g_320 = h_319;
                    if(m_705.value == null || l_705.value == null)
                      break Fail657;
                    term = termFactory.makeTuple(m_705.value, l_705.value);
                    term = subti_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail657;
                    term = generate_random_maxima_0_1.instance.invoke(context, g_320, term);
                    if(term == null)
                      break Fail657;
                    term = termFactory.makeTuple(h_319, term);
                    term = write_n_rule_0_4.instance.invoke(context, term, e_319, j_705.value, f_319, n_705.value);
                    if(term == null)
                      break Fail657;
                    j_319 = term;
                  }
                  if(true)
                    break Success542;
                }
                term = term585;
                IStrategoTerm l_319 = null;
                IStrategoTerm m_319 = null;
                IStrategoTerm i_320 = null;
                l_319 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail655;
                m_319 = term;
                i_320 = l_319;
                term = report_with_failure_0_2.instance.invoke(context, i_320, random_test.const319, m_319);
                if(term == null)
                  break Fail655;
              }
              term = p_319;
              if(j_319 == null)
                break Fail655;
              term = j_319;
              if(true)
                break Success540;
            }
            term = term583;
            IStrategoTerm term587 = term;
            Success544:
            { 
              Fail659:
              { 
                IStrategoTerm r_317 = null;
                IStrategoTerm s_317 = null;
                IStrategoTerm t_317 = null;
                IStrategoTerm u_317 = null;
                IStrategoTerm v_317 = null;
                IStrategoTerm c_318 = null;
                IStrategoTerm term588 = term;
                IStrategoConstructor cons56 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
                Success545:
                { 
                  if(cons56 == random_test._consiter_star_1)
                  { 
                    Fail660:
                    { 
                      r_317 = term.getSubterm(0);
                      if(true)
                        break Success545;
                    }
                    term = term588;
                  }
                  if(cons56 == random_test._consiter_star_sep_2)
                  { 
                    r_317 = term.getSubterm(0);
                  }
                  else
                  { 
                    break Fail659;
                  }
                }
                c_318 = term;
                IStrategoTerm term589 = term;
                Success546:
                { 
                  Fail661:
                  { 
                    IStrategoTerm term590 = term;
                    Success547:
                    { 
                      Fail662:
                      { 
                        IStrategoTerm x_317 = null;
                        x_317 = term;
                        lifted491 lifted4910 = new lifted491();
                        lifted490 lifted4900 = new lifted490();
                        lifted4910.k_705 = k_705;
                        lifted4900.l_705 = l_705;
                        lifted4900.m_705 = m_705;
                        term = or_2_0.instance.invoke(context, term, lifted4900, lifted4910);
                        if(term == null)
                          break Fail662;
                        term = x_317;
                        { 
                          term = random_test.constNil0;
                          v_317 = random_test.constNil0;
                          if(true)
                            break Success547;
                        }
                      }
                      term = term590;
                      IStrategoTerm f_318 = null;
                      IStrategoTerm h_318 = null;
                      IStrategoTerm m_318 = null;
                      h_318 = term;
                      term = next_random_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail661;
                      term = abs_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail661;
                      f_318 = term;
                      term = h_318;
                      term = $Max$Iter_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail661;
                      term = termFactory.makeTuple(term, random_test.const186);
                      term = addi_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail661;
                      term = termFactory.makeTuple(f_318, term);
                      term = mod_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail661;
                      t_317 = term;
                      if(k_705.value == null)
                        break Fail661;
                      term = filter_prods_0_0.instance.invoke(context, r_317);
                      if(term == null)
                        break Fail661;
                      s_317 = term;
                      term = t_317;
                      m_318 = t_317;
                      if(m_705.value == null || l_705.value == null)
                        break Fail661;
                      term = termFactory.makeTuple(m_705.value, l_705.value);
                      term = subti_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail661;
                      term = generate_random_maxima_0_1.instance.invoke(context, m_318, term);
                      if(term == null)
                        break Fail661;
                      u_317 = term;
                      Success548:
                      { 
                        Fail663:
                        { 
                          IStrategoTerm y_317 = null;
                          y_317 = term;
                          term = termFactory.makeTuple(t_317, random_test.const58);
                          term = gt_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail663;
                          term = y_317;
                          { 
                            term = termFactory.makeTuple(t_317, u_317);
                            term = write_n_rule_0_4.instance.invoke(context, term, s_317, j_705.value, k_705.value, n_705.value);
                            if(term == null)
                              break Fail661;
                            v_317 = term;
                            if(true)
                              break Success548;
                          }
                        }
                        term = random_test.constNil0;
                        v_317 = random_test.constNil0;
                      }
                    }
                    if(true)
                      break Success546;
                  }
                  term = term589;
                  IStrategoTerm z_317 = null;
                  IStrategoTerm a_318 = null;
                  IStrategoTerm o_318 = null;
                  z_317 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail659;
                  a_318 = term;
                  o_318 = z_317;
                  term = report_with_failure_0_2.instance.invoke(context, o_318, random_test.const319, a_318);
                  if(term == null)
                    break Fail659;
                }
                term = c_318;
                if(v_317 == null)
                  break Fail659;
                term = v_317;
                if(true)
                  break Success544;
              }
              term = term587;
              IStrategoTerm term592 = term;
              IStrategoConstructor cons57 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
              Success549:
              { 
                if(cons57 == random_test._conssort_1)
                { 
                  Fail664:
                  { 
                    IStrategoTerm b_317 = null;
                    IStrategoTerm c_317 = null;
                    IStrategoTerm g_317 = null;
                    b_317 = term.getSubterm(0);
                    g_317 = term;
                    IStrategoTerm term593 = term;
                    Success550:
                    { 
                      Fail665:
                      { 
                        Success551:
                        { 
                          Fail666:
                          { 
                            IStrategoTerm d_317 = null;
                            d_317 = term;
                            IStrategoTerm term595 = term;
                            Success552:
                            { 
                              Fail667:
                              { 
                                term = $Lex$Sorts_0_0.instance.invoke(context, b_317);
                                if(term == null)
                                  break Fail667;
                                { 
                                  if(true)
                                    break Fail666;
                                  if(true)
                                    break Success552;
                                }
                              }
                              term = term595;
                            }
                            term = d_317;
                            { 
                              term = generate_program_0_6.instance.invokeDynamic(context, random_test.const273, NO_STRATEGIES, new IStrategoTerm[]{b_317, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value});
                              if(term == null)
                                break Fail665;
                              c_317 = term;
                              if(true)
                                break Success551;
                            }
                          }
                          term = pick_a_random_terminal_0_0.instance.invoke(context, b_317);
                          if(term == null)
                            break Fail665;
                          c_317 = term;
                        }
                        if(true)
                          break Success550;
                      }
                      term = term593;
                      IStrategoTerm e_317 = null;
                      IStrategoTerm f_317 = null;
                      IStrategoTerm i_317 = null;
                      e_317 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail664;
                      f_317 = term;
                      i_317 = e_317;
                      term = report_with_failure_0_2.instance.invoke(context, i_317, random_test.const319, f_317);
                      if(term == null)
                        break Fail664;
                    }
                    term = g_317;
                    if(c_317 == null)
                      break Fail664;
                    term = c_317;
                    if(true)
                      break Success549;
                  }
                  term = term592;
                }
                Success553:
                { 
                  if(cons57 == random_test._consparameterized_sort_2)
                  { 
                    Fail668:
                    { 
                      IStrategoTerm l_316 = null;
                      IStrategoTerm m_316 = null;
                      IStrategoTerm n_316 = null;
                      IStrategoTerm r_316 = null;
                      l_316 = term;
                      r_316 = term;
                      IStrategoTerm term597 = term;
                      Success554:
                      { 
                        Fail669:
                        { 
                          term = recognize_sort_0_0.instance.invoke(context, l_316);
                          if(term == null)
                            break Fail669;
                          m_316 = term;
                          Success555:
                          { 
                            Fail670:
                            { 
                              IStrategoTerm o_316 = null;
                              o_316 = term;
                              IStrategoTerm term599 = term;
                              Success556:
                              { 
                                Fail671:
                                { 
                                  term = $Lex$Sorts_0_0.instance.invoke(context, m_316);
                                  if(term == null)
                                    break Fail671;
                                  { 
                                    if(true)
                                      break Fail670;
                                    if(true)
                                      break Success556;
                                  }
                                }
                                term = term599;
                              }
                              term = o_316;
                              { 
                                term = generate_program_0_6.instance.invokeDynamic(context, random_test.const273, NO_STRATEGIES, new IStrategoTerm[]{m_316, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value});
                                if(term == null)
                                  break Fail669;
                                n_316 = term;
                                if(true)
                                  break Success555;
                              }
                            }
                            term = pick_a_random_terminal_0_0.instance.invoke(context, m_316);
                            if(term == null)
                              break Fail669;
                            n_316 = term;
                            term = debug_1_0.instance.invoke(context, term, lifted492.instance);
                            if(term == null)
                              break Fail669;
                          }
                          if(true)
                            break Success554;
                        }
                        term = term597;
                        IStrategoTerm p_316 = null;
                        IStrategoTerm q_316 = null;
                        IStrategoTerm t_316 = null;
                        p_316 = term;
                        term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                        if(term == null)
                          break Fail668;
                        q_316 = term;
                        t_316 = p_316;
                        term = report_with_failure_0_2.instance.invoke(context, t_316, random_test.const319, q_316);
                        if(term == null)
                          break Fail668;
                      }
                      term = r_316;
                      if(n_316 == null)
                        break Fail668;
                      term = n_316;
                      if(true)
                        break Success553;
                    }
                    term = term592;
                  }
                  Success557:
                  { 
                    if(cons57 == random_test._conscf_1)
                    { 
                      Fail672:
                      { 
                        IStrategoTerm x_315 = null;
                        IStrategoTerm y_315 = null;
                        IStrategoTerm b_316 = null;
                        x_315 = term.getSubterm(0);
                        b_316 = term;
                        IStrategoTerm term601 = term;
                        Success558:
                        { 
                          Fail673:
                          { 
                            term = this.invoke(context, x_315, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value);
                            if(term == null)
                              break Fail673;
                            y_315 = term;
                            if(true)
                              break Success558;
                          }
                          term = term601;
                          IStrategoTerm z_315 = null;
                          IStrategoTerm a_316 = null;
                          IStrategoTerm d_316 = null;
                          z_315 = term;
                          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                          if(term == null)
                            break Fail672;
                          a_316 = term;
                          d_316 = z_315;
                          term = report_with_failure_0_2.instance.invoke(context, d_316, random_test.const319, a_316);
                          if(term == null)
                            break Fail672;
                        }
                        term = b_316;
                        if(y_315 == null)
                          break Fail672;
                        term = y_315;
                        if(true)
                          break Success557;
                      }
                      term = term592;
                    }
                    Success559:
                    { 
                      if(cons57 == random_test._consalt_2)
                      { 
                        Fail674:
                        { 
                          IStrategoTerm d_315 = null;
                          IStrategoTerm e_315 = null;
                          IStrategoTerm f_315 = null;
                          IStrategoTerm g_315 = null;
                          IStrategoTerm l_315 = null;
                          e_315 = term.getSubterm(0);
                          f_315 = term.getSubterm(1);
                          l_315 = term;
                          IStrategoTerm term603 = term;
                          Success560:
                          { 
                            Fail675:
                            { 
                              term = next_random_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail675;
                              term = abs_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail675;
                              term = termFactory.makeTuple(term, random_test.const108);
                              term = mod_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail675;
                              d_315 = term;
                              Success561:
                              { 
                                Fail676:
                                { 
                                  IStrategoTerm h_315 = null;
                                  h_315 = term;
                                  term = termFactory.makeTuple(d_315, random_test.const164);
                                  term = gt_0_0.instance.invoke(context, term);
                                  if(term == null)
                                    break Fail676;
                                  term = h_315;
                                  { 
                                    term = this.invoke(context, e_315, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value);
                                    if(term == null)
                                      break Fail675;
                                    g_315 = term;
                                    if(true)
                                      break Success561;
                                  }
                                }
                                term = this.invoke(context, f_315, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value);
                                if(term == null)
                                  break Fail675;
                                g_315 = term;
                              }
                              if(true)
                                break Success560;
                            }
                            term = term603;
                            IStrategoTerm j_315 = null;
                            IStrategoTerm k_315 = null;
                            IStrategoTerm p_315 = null;
                            j_315 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail674;
                            k_315 = term;
                            p_315 = j_315;
                            term = report_with_failure_0_2.instance.invoke(context, p_315, random_test.const319, k_315);
                            if(term == null)
                              break Fail674;
                          }
                          term = l_315;
                          if(g_315 == null)
                            break Fail674;
                          term = g_315;
                          if(true)
                            break Success559;
                        }
                        term = term592;
                      }
                      Success562:
                      { 
                        if(cons57 == random_test._conslabel_2)
                        { 
                          Fail677:
                          { 
                            IStrategoTerm n_314 = null;
                            IStrategoTerm p_314 = null;
                            IStrategoTerm t_314 = null;
                            n_314 = term.getSubterm(1);
                            t_314 = term;
                            IStrategoTerm term606 = term;
                            Success563:
                            { 
                              Fail678:
                              { 
                                term = filter_prods_0_0.instance.invoke(context, n_314);
                                if(term == null)
                                  break Fail678;
                                term = this.invoke(context, term, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value);
                                if(term == null)
                                  break Fail678;
                                p_314 = term;
                                if(true)
                                  break Success563;
                              }
                              term = term606;
                              IStrategoTerm q_314 = null;
                              IStrategoTerm r_314 = null;
                              IStrategoTerm v_314 = null;
                              q_314 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail677;
                              r_314 = term;
                              v_314 = q_314;
                              term = report_with_failure_0_2.instance.invoke(context, v_314, random_test.const319, r_314);
                              if(term == null)
                                break Fail677;
                            }
                            term = t_314;
                            if(p_314 == null)
                              break Fail677;
                            term = p_314;
                            if(true)
                              break Success562;
                          }
                          term = term592;
                        }
                        Success564:
                        { 
                          if(cons57 == random_test._consopt_1)
                          { 
                            Fail679:
                            { 
                              IStrategoTerm f_313 = null;
                              IStrategoTerm g_313 = null;
                              IStrategoTerm h_313 = null;
                              IStrategoTerm p_313 = null;
                              g_313 = term.getSubterm(0);
                              p_313 = term;
                              IStrategoTerm term608 = term;
                              Success565:
                              { 
                                Fail680:
                                { 
                                  term = next_random_0_0.instance.invoke(context, term);
                                  if(term == null)
                                    break Fail680;
                                  term = abs_0_0.instance.invoke(context, term);
                                  if(term == null)
                                    break Fail680;
                                  term = termFactory.makeTuple(term, random_test.const108);
                                  term = mod_0_0.instance.invoke(context, term);
                                  if(term == null)
                                    break Fail680;
                                  f_313 = term;
                                  IStrategoTerm term609 = term;
                                  Success566:
                                  { 
                                    Fail681:
                                    { 
                                      IStrategoTerm i_313 = null;
                                      i_313 = term;
                                      lifted494 lifted4940 = new lifted494();
                                      lifted4940.k_705 = k_705;
                                      term = or_2_0.instance.invoke(context, term, lifted493.instance, lifted4940);
                                      if(term == null)
                                        break Fail681;
                                      term = i_313;
                                      { 
                                        term = random_test.constNil0;
                                        h_313 = random_test.constNil0;
                                        if(true)
                                          break Success566;
                                      }
                                    }
                                    term = term609;
                                    Success567:
                                    { 
                                      Fail682:
                                      { 
                                        IStrategoTerm j_313 = null;
                                        j_313 = term;
                                        term = termFactory.makeTuple(f_313, random_test.const164);
                                        term = gt_0_0.instance.invoke(context, term);
                                        if(term == null)
                                          break Fail682;
                                        term = j_313;
                                        { 
                                          term = this.invoke(context, g_313, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value);
                                          if(term == null)
                                            break Fail680;
                                          h_313 = term;
                                          if(true)
                                            break Success567;
                                        }
                                      }
                                      term = random_test.constNil0;
                                      h_313 = random_test.constNil0;
                                    }
                                  }
                                  if(true)
                                    break Success565;
                                }
                                term = term608;
                                IStrategoTerm k_313 = null;
                                IStrategoTerm l_313 = null;
                                IStrategoTerm e_314 = null;
                                k_313 = term;
                                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                if(term == null)
                                  break Fail679;
                                l_313 = term;
                                e_314 = k_313;
                                term = report_with_failure_0_2.instance.invoke(context, e_314, random_test.const319, l_313);
                                if(term == null)
                                  break Fail679;
                              }
                              term = p_313;
                              if(h_313 == null)
                                break Fail679;
                              term = h_313;
                              if(true)
                                break Success564;
                            }
                            term = term592;
                          }
                          Success568:
                          { 
                            if(cons57 == random_test._conslex_1)
                            { 
                              Fail683:
                              { 
                                IStrategoTerm r_312 = null;
                                IStrategoTerm s_312 = null;
                                IStrategoTerm v_312 = null;
                                r_312 = term;
                                v_312 = term;
                                IStrategoTerm term612 = term;
                                Success569:
                                { 
                                  Fail684:
                                  { 
                                    term = generate_terminal_0_0.instance.invoke(context, r_312);
                                    if(term == null)
                                      break Fail684;
                                    s_312 = term;
                                    if(true)
                                      break Success569;
                                  }
                                  term = term612;
                                  IStrategoTerm t_312 = null;
                                  IStrategoTerm u_312 = null;
                                  IStrategoTerm x_312 = null;
                                  t_312 = term;
                                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                                  if(term == null)
                                    break Fail683;
                                  u_312 = term;
                                  x_312 = t_312;
                                  term = report_with_failure_0_2.instance.invoke(context, x_312, random_test.const319, u_312);
                                  if(term == null)
                                    break Fail683;
                                }
                                term = v_312;
                                if(s_312 == null)
                                  break Fail683;
                                term = s_312;
                                if(true)
                                  break Success568;
                              }
                              term = term592;
                            }
                            IStrategoTerm b_312 = null;
                            b_312 = term;
                            IStrategoTerm term613 = term;
                            Success570:
                            { 
                              Fail685:
                              { 
                                term = write_to_string_0_0.instance.invoke(context, b_312);
                                if(term == null)
                                  break Fail685;
                                term = (IStrategoTerm)termFactory.makeListCons(random_test.const321, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                                term = concat_strings_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail685;
                                term = debug_0_0.instance.invoke(context, term);
                                if(term == null)
                                  break Fail685;
                                if(true)
                                  break Success570;
                              }
                              term = term613;
                              IStrategoTerm c_312 = null;
                              IStrategoTerm d_312 = null;
                              IStrategoTerm i_312 = null;
                              c_312 = term;
                              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                              if(term == null)
                                break Fail652;
                              d_312 = term;
                              i_312 = c_312;
                              term = report_with_failure_0_2.instance.invoke(context, i_312, random_test.const319, d_312);
                              if(term == null)
                                break Fail652;
                            }
                            term = b_312;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_n_rule_0_4 extends Strategy 
  { 
    public static write_n_rule_0_4 instance = new write_n_rule_0_4();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm o_705, IStrategoTerm p_705, IStrategoTerm q_705, IStrategoTerm r_705)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_n_rule_0_4");
      Fail686:
      { 
        IStrategoTerm term614 = term;
        Success571:
        { 
          Fail687:
          { 
            IStrategoTerm n_321 = null;
            IStrategoTerm o_321 = null;
            IStrategoTerm p_321 = null;
            IStrategoTerm q_321 = null;
            IStrategoTerm r_321 = null;
            IStrategoTerm s_321 = null;
            IStrategoTerm v_321 = null;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail687;
            o_321 = term.getSubterm(0);
            IStrategoTerm arg227 = term.getSubterm(1);
            if(arg227.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg227).isEmpty())
              break Fail687;
            n_321 = ((IStrategoList)arg227).head();
            p_321 = ((IStrategoList)arg227).tail();
            v_321 = term;
            IStrategoTerm term615 = term;
            Success572:
            { 
              Fail688:
              { 
                IStrategoTerm x_321 = null;
                x_321 = o_705;
                term = write_rule_0_5.instance.invoke(context, x_321, p_705, q_705, random_test.const58, n_321, r_705);
                if(term == null)
                  break Fail688;
                q_321 = term;
                term = termFactory.makeTuple(o_321, random_test.const109);
                term = addi_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail688;
                term = termFactory.makeTuple(term, p_321);
                term = this.invoke(context, term, o_705, p_705, q_705, r_705);
                if(term == null)
                  break Fail688;
                r_321 = term;
                IStrategoList list26;
                list26 = checkListTail(r_321);
                if(list26 == null)
                  break Fail688;
                term = (IStrategoTerm)termFactory.makeListCons(q_321, list26);
                s_321 = term;
                if(true)
                  break Success572;
              }
              term = term615;
              IStrategoTerm t_321 = null;
              IStrategoTerm u_321 = null;
              IStrategoTerm b_322 = null;
              t_321 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail687;
              u_321 = term;
              b_322 = t_321;
              term = report_with_failure_0_2.instance.invoke(context, b_322, random_test.const322, u_321);
              if(term == null)
                break Fail687;
            }
            term = v_321;
            if(s_321 == null)
              break Fail687;
            term = s_321;
            if(true)
              break Success571;
          }
          term = term614;
          if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
            break Fail686;
          IStrategoTerm arg228 = term.getSubterm(0);
          if(arg228.getTermType() != IStrategoTerm.INT || 0 != ((IStrategoInt)arg228).intValue())
            break Fail686;
          IStrategoTerm arg229 = term.getSubterm(1);
          if(arg229.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg229).isEmpty())
            break Fail686;
          term = random_test.constNil0;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class filter_prods_0_0 extends Strategy 
  { 
    public static filter_prods_0_0 instance = new filter_prods_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("filter_prods_0_0");
      Fail689:
      { 
        IStrategoTerm e_322 = null;
        IStrategoTerm f_322 = null;
        IStrategoTerm k_322 = null;
        e_322 = term;
        k_322 = term;
        IStrategoTerm term616 = term;
        Success573:
        { 
          Fail690:
          { 
            Success574:
            { 
              Fail691:
              { 
                IStrategoTerm g_322 = null;
                g_322 = term;
                term = e_322;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail691;
                term = g_322;
                { 
                  term = filter_1_0.instance.invoke(context, e_322, lifted495.instance);
                  if(term == null)
                    break Fail690;
                  f_322 = term;
                  if(true)
                    break Success574;
                }
              }
              term = e_322;
              f_322 = e_322;
            }
            if(true)
              break Success573;
          }
          term = term616;
          IStrategoTerm i_322 = null;
          IStrategoTerm j_322 = null;
          IStrategoTerm m_322 = null;
          i_322 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail689;
          j_322 = term;
          m_322 = i_322;
          term = report_with_failure_0_2.instance.invoke(context, m_322, random_test.const323, j_322);
          if(term == null)
            break Fail689;
        }
        term = k_322;
        if(f_322 == null)
          break Fail689;
        term = f_322;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class filter_prod_help_0_0 extends Strategy 
  { 
    public static filter_prod_help_0_0 instance = new filter_prod_help_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("filter_prod_help_0_0");
      Fail692:
      { 
        IStrategoTerm term619 = term;
        IStrategoConstructor cons58 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success575:
        { 
          if(cons58 == random_test._conslit_1)
          { 
            Fail693:
            { 
              if(true)
                break Success575;
            }
            term = term619;
          }
          Success576:
          { 
            if(cons58 == random_test._conslayout_0)
            { 
              Fail694:
              { 
                if(true)
                  break Success576;
              }
              term = term619;
            }
            Success577:
            { 
              if(cons58 == random_test._consopt_1)
              { 
                Fail695:
                { 
                  IStrategoTerm z_322 = null;
                  IStrategoTerm a_323 = null;
                  z_322 = term;
                  a_323 = term.getSubterm(0);
                  term = this.invoke(context, a_323);
                  if(term == null)
                    break Fail695;
                  term = z_322;
                  if(true)
                    break Success577;
                }
                term = term619;
              }
              Success578:
              { 
                if(cons58 == random_test._conscf_1)
                { 
                  Fail696:
                  { 
                    IStrategoTerm u_322 = null;
                    IStrategoTerm v_322 = null;
                    u_322 = term;
                    v_322 = term.getSubterm(0);
                    term = this.invoke(context, v_322);
                    if(term == null)
                      break Fail696;
                    term = u_322;
                    if(true)
                      break Success578;
                  }
                  term = term619;
                }
                Success579:
                { 
                  if(cons58 == random_test._conslabel_2)
                  { 
                    Fail697:
                    { 
                      IStrategoTerm r_322 = null;
                      IStrategoTerm s_322 = null;
                      r_322 = term;
                      s_322 = term.getSubterm(1);
                      term = this.invoke(context, s_322);
                      if(term == null)
                        break Fail697;
                      term = r_322;
                      if(true)
                        break Success579;
                    }
                    term = term619;
                  }
                  IStrategoTerm n_322 = null;
                  IStrategoTerm o_322 = null;
                  IStrategoTerm term624 = term;
                  IStrategoConstructor cons59 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
                  Success580:
                  { 
                    if(cons59 == random_test._consiter_star_1)
                    { 
                      Fail698:
                      { 
                        n_322 = term;
                        o_322 = term.getSubterm(0);
                        if(true)
                          break Success580;
                      }
                      term = term624;
                    }
                    Success581:
                    { 
                      if(cons59 == random_test._consiter_star_sep_2)
                      { 
                        Fail699:
                        { 
                          n_322 = term;
                          o_322 = term.getSubterm(0);
                          if(true)
                            break Success581;
                        }
                        term = term624;
                      }
                      Success582:
                      { 
                        if(cons59 == random_test._consiter_1)
                        { 
                          Fail700:
                          { 
                            n_322 = term;
                            o_322 = term.getSubterm(0);
                            if(true)
                              break Success582;
                          }
                          term = term624;
                        }
                        if(cons59 == random_test._consiter_sep_2)
                        { 
                          n_322 = term;
                          o_322 = term.getSubterm(0);
                        }
                        else
                        { 
                          break Fail692;
                        }
                      }
                    }
                  }
                  term = this.invoke(context, o_322);
                  if(term == null)
                    break Fail692;
                  term = n_322;
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class main_0_0 extends Strategy 
  { 
    public static main_0_0 instance = new main_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("main_0_0");
      Fail701:
      { 
        IStrategoTerm term627 = term;
        Success583:
        { 
          Fail702:
          { 
            term = switch_input_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail702;
            if(true)
              break Success583;
          }
          term = generate_random_tests_0_0.instance.invoke(context, term627);
          if(term == null)
            break Fail701;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class switch_input_0_0 extends Strategy 
  { 
    public static switch_input_0_0 instance = new switch_input_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("switch_input_0_0");
      Fail703:
      { 
        IStrategoTerm term628 = term;
        Success584:
        { 
          Fail704:
          { 
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail704;
            IStrategoTerm arg237 = ((IStrategoList)term).tail();
            if(arg237.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg237).isEmpty())
              break Fail704;
            IStrategoTerm arg238 = ((IStrategoList)arg237).head();
            if(arg238.getTermType() != IStrategoTerm.STRING || !"shrink".equals(((IStrategoString)arg238).stringValue()))
              break Fail704;
            IStrategoTerm arg239 = ((IStrategoList)arg237).tail();
            if(arg239.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg239).isEmpty())
              break Fail704;
            IStrategoTerm term629 = term;
            Success585:
            { 
              Fail705:
              { 
                term = shrink_test_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail705;
                if(true)
                  break Success585;
              }
              term = term629;
              IStrategoTerm t_323 = null;
              IStrategoTerm u_323 = null;
              IStrategoTerm x_323 = null;
              t_323 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail704;
              u_323 = term;
              x_323 = t_323;
              term = report_with_failure_0_2.instance.invoke(context, x_323, random_test.const324, u_323);
              if(term == null)
                break Fail704;
            }
            term = random_test.constNone0;
            if(true)
              break Success584;
          }
          term = term628;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail703;
          IStrategoTerm arg241 = ((IStrategoList)term).tail();
          if(arg241.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg241).isEmpty())
            break Fail703;
          IStrategoTerm arg242 = ((IStrategoList)arg241).head();
          if(arg242.getTermType() != IStrategoTerm.STRING || !"grammar-measure".equals(((IStrategoString)arg242).stringValue()))
            break Fail703;
          IStrategoTerm arg243 = ((IStrategoList)arg241).tail();
          if(arg243.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg243).isEmpty())
            break Fail703;
          IStrategoTerm term630 = term;
          Success586:
          { 
            Fail706:
            { 
              term = webdsl_check_grammar_measure_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail706;
              if(true)
                break Success586;
            }
            term = term630;
            IStrategoTerm l_323 = null;
            IStrategoTerm m_323 = null;
            IStrategoTerm p_323 = null;
            l_323 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail703;
            m_323 = term;
            p_323 = l_323;
            term = report_with_failure_0_2.instance.invoke(context, p_323, random_test.const324, m_323);
            if(term == null)
              break Fail703;
          }
          term = random_test.constNone0;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_shrink_sort_0_0 extends Strategy 
  { 
    public static write_shrink_sort_0_0 instance = new write_shrink_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_shrink_sort_0_0");
      Fail707:
      { 
        IStrategoTerm a_324 = null;
        IStrategoTerm b_324 = null;
        IStrategoTerm c_324 = null;
        IStrategoTerm d_324 = null;
        IStrategoTerm f_324 = null;
        IStrategoTerm g_324 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail707;
        a_324 = term.getSubterm(0);
        b_324 = term.getSubterm(1);
        c_324 = term;
        f_324 = term;
        d_324 = random_test.const325;
        g_324 = f_324;
        term = termFactory.makeTuple(random_test.const326, b_324);
        term = dr_add_rule_0_3.instance.invoke(context, g_324, d_324, a_324, term);
        if(term == null)
          break Fail707;
        term = c_324;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class parse_settings_0_0 extends Strategy 
  { 
    public static parse_settings_0_0 instance = new parse_settings_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("parse_settings_0_0");
      Fail708:
      { 
        IStrategoTerm h_324 = null;
        h_324 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons55);
        if(term == null)
          break Fail708;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = $Read$From$File_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail708;
        term = parse_string_0_1.instance.invoke(context, h_324, term);
        if(term == null)
          break Fail708;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class parse_pp_0_0 extends Strategy 
  { 
    public static parse_pp_0_0 instance = new parse_pp_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("parse_pp_0_0");
      Fail709:
      { 
        IStrategoTerm q_324 = null;
        IStrategoTerm o_325 = null;
        IStrategoTerm q_325 = null;
        IStrategoTerm y_324 = null;
        IStrategoTerm a_325 = null;
        IStrategoTerm b_325 = null;
        IStrategoTerm i_325 = null;
        IStrategoTerm k_325 = null;
        IStrategoTerm l_325 = null;
        q_324 = term;
        q_325 = term;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail709;
        IStrategoTerm term631 = term;
        Success587:
        { 
          Fail710:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail710;
            if(true)
              break Success587;
          }
          term = term631;
          IStrategoTerm term632 = term;
          Success588:
          { 
            Fail711:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail711;
              if(true)
                break Success588;
            }
            term = term632;
            IStrategoTerm term633 = term;
            Success589:
            { 
              Fail712:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail712;
                if(true)
                  break Success589;
              }
              term = term633;
              IStrategoTerm term634 = term;
              Success590:
              { 
                Fail713:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail713;
                  if(true)
                    break Success590;
                }
                term = term634;
                IStrategoTerm u_324 = null;
                IStrategoTerm v_324 = null;
                IStrategoTerm x_324 = null;
                u_324 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail709;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail709;
                v_324 = ((IStrategoList)term).tail();
                x_324 = v_324;
                term = report_failure_0_2.instance.invoke(context, x_324, random_test.const328, u_324);
                if(term == null)
                  break Fail709;
              }
            }
          }
        }
        a_325 = term;
        y_324 = random_test.const8;
        b_325 = a_325;
        term = string_replace_0_2.instance.invoke(context, b_325, y_324, random_test.const14);
        if(term == null)
          break Fail709;
        o_325 = term;
        term = q_325;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail709;
        IStrategoTerm term635 = term;
        Success591:
        { 
          Fail714:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail714;
            if(true)
              break Success591;
          }
          term = term635;
          IStrategoTerm term636 = term;
          Success592:
          { 
            Fail715:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail715;
              if(true)
                break Success592;
            }
            term = term636;
            IStrategoTerm term637 = term;
            Success593:
            { 
              Fail716:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail716;
                if(true)
                  break Success593;
              }
              term = term637;
              IStrategoTerm term638 = term;
              Success594:
              { 
                Fail717:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail717;
                  if(true)
                    break Success594;
                }
                term = term638;
                IStrategoTerm e_325 = null;
                IStrategoTerm f_325 = null;
                IStrategoTerm h_325 = null;
                e_325 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail709;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail709;
                f_325 = ((IStrategoList)term).tail();
                h_325 = f_325;
                term = report_failure_0_2.instance.invoke(context, h_325, random_test.const328, e_325);
                if(term == null)
                  break Fail709;
              }
            }
          }
        }
        k_325 = term;
        i_325 = random_test.const8;
        l_325 = k_325;
        term = string_replace_0_2.instance.invoke(context, l_325, i_325, random_test.const15);
        if(term == null)
          break Fail709;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const17, termFactory.makeListCons(o_325, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constCons2))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail709;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = $Read$From$File_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail709;
        term = parse_string_0_1.instance.invoke(context, q_324, term);
        if(term == null)
          break Fail709;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class generate_random_tests_0_0 extends Strategy 
  { 
    public static generate_random_tests_0_0 instance = new generate_random_tests_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("generate_random_tests_0_0");
      Fail718:
      { 
        IStrategoTerm x_325 = null;
        IStrategoTerm h_326 = null;
        IStrategoTerm z_325 = null;
        IStrategoTerm i_326 = null;
        IStrategoTerm j_326 = null;
        IStrategoTerm m_326 = null;
        IStrategoTerm n_326 = null;
        IStrategoTerm o_326 = null;
        IStrategoTerm a_326 = null;
        IStrategoTerm p_326 = null;
        IStrategoTerm q_326 = null;
        IStrategoTerm s_326 = null;
        IStrategoTerm t_326 = null;
        IStrategoTerm u_326 = null;
        IStrategoTerm b_326 = null;
        IStrategoTerm v_326 = null;
        IStrategoTerm w_326 = null;
        IStrategoTerm y_326 = null;
        IStrategoTerm z_326 = null;
        IStrategoTerm a_327 = null;
        IStrategoTerm b_327 = null;
        IStrategoTerm c_327 = null;
        IStrategoTerm e_327 = null;
        IStrategoTerm g_327 = null;
        IStrategoTerm h_327 = null;
        IStrategoTerm e_326 = null;
        IStrategoTerm j_327 = null;
        IStrategoTerm k_327 = null;
        IStrategoTerm p_327 = null;
        IStrategoTerm r_327 = null;
        IStrategoTerm s_327 = null;
        IStrategoTerm u_327 = null;
        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
          break Fail718;
        IStrategoTerm arg247 = ((IStrategoList)term).tail();
        if(arg247.getTermType() != IStrategoTerm.LIST || ((IStrategoList)arg247).isEmpty())
          break Fail718;
        x_325 = ((IStrategoList)arg247).head();
        IStrategoTerm arg248 = ((IStrategoList)arg247).tail();
        if(arg248.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg248).isEmpty())
          break Fail718;
        term = write_to_string_0_0.instance.invoke(context, x_325);
        if(term == null)
          break Fail718;
        term = debug_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail718;
        term = read_text_file_0_0.instance.invoke(context, x_325);
        if(term == null)
          break Fail718;
        term = parse_settings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail718;
        term = extract_settings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail718;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail718;
        term = debug_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail718;
        term = read_language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail718;
        h_326 = term;
        term = find_terminal_paths_0_1.instance.invoke(context, h_326, random_test.const58);
        if(term == null)
          break Fail718;
        z_325 = term;
        m_326 = term;
        i_326 = random_test.const329;
        n_326 = m_326;
        j_326 = random_test.const339;
        o_326 = n_326;
        term = dr_set_rule_0_3.instance.invoke(context, o_326, i_326, j_326, random_test.const340);
        if(term == null)
          break Fail718;
        term = z_325;
        a_326 = z_325;
        s_326 = term;
        p_326 = random_test.const329;
        t_326 = s_326;
        q_326 = random_test.const348;
        u_326 = t_326;
        term = dr_set_rule_0_3.instance.invoke(context, u_326, p_326, q_326, random_test.const349);
        if(term == null)
          break Fail718;
        term = a_326;
        b_326 = a_326;
        y_326 = term;
        v_326 = random_test.const329;
        z_326 = y_326;
        w_326 = random_test.const353;
        a_327 = z_326;
        term = dr_set_rule_0_3.instance.invoke(context, a_327, v_326, w_326, random_test.const354);
        if(term == null)
          break Fail718;
        term = b_326;
        e_327 = term;
        b_327 = random_test.const329;
        g_327 = e_327;
        c_327 = random_test.const360;
        h_327 = g_327;
        term = dr_set_rule_0_3.instance.invoke(context, h_327, b_327, c_327, random_test.const361);
        if(term == null)
          break Fail718;
        term = random_test.const109;
        e_326 = random_test.const109;
        p_327 = term;
        j_327 = random_test.const362;
        r_327 = p_327;
        k_327 = random_test.constCons0;
        s_327 = r_327;
        term = termFactory.makeTuple(random_test.const363, e_326);
        term = dr_set_rule_0_3.instance.invoke(context, s_327, j_327, k_327, term);
        if(term == null)
          break Fail718;
        term = debug_0_0.instance.invoke(context, random_test.const364);
        if(term == null)
          break Fail718;
        u_327 = term;
        term = $Number$Of$Runs_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail718;
        term = generate_random_test_0_1.instance.invoke(context, u_327, term);
        if(term == null)
          break Fail718;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class generate_random_test_0_1 extends Strategy 
  { 
    public static generate_random_test_0_1 instance = new generate_random_test_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_z_327)
    { 
      TermReference z_327 = new TermReference(ref_z_327);
      context.push("generate_random_test_0_1");
      Fail719:
      { 
        TermReference a_328 = new TermReference();
        TermReference b_328 = new TermReference();
        TermReference c_328 = new TermReference();
        TermReference d_328 = new TermReference();
        TermReference e_328 = new TermReference();
        TermReference f_328 = new TermReference();
        TermReference h_328 = new TermReference();
        TermReference i_328 = new TermReference();
        TermReference j_328 = new TermReference();
        TermReference k_328 = new TermReference();
        TermReference l_328 = new TermReference();
        TermReference m_328 = new TermReference();
        TermReference n_328 = new TermReference();
        TermReference o_328 = new TermReference();
        IStrategoTerm a_331 = null;
        IStrategoTerm b_331 = null;
        b_331 = term;
        a_331 = random_test.const285;
        term = b_331;
        lifted496 lifted4960 = new lifted496();
        lifted4960.a_328 = a_328;
        lifted4960.b_328 = b_328;
        lifted4960.c_328 = c_328;
        lifted4960.d_328 = d_328;
        lifted4960.e_328 = e_328;
        lifted4960.f_328 = f_328;
        lifted4960.h_328 = h_328;
        lifted4960.i_328 = i_328;
        lifted4960.j_328 = j_328;
        lifted4960.k_328 = k_328;
        lifted4960.l_328 = l_328;
        lifted4960.m_328 = m_328;
        lifted4960.n_328 = n_328;
        lifted4960.o_328 = o_328;
        lifted4960.z_327 = z_327;
        term = dr_scope_1_1.instance.invoke(context, term, lifted4960, a_331);
        if(term == null)
          break Fail719;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class check_results_0_11 extends Strategy 
  { 
    public static check_results_0_11 instance = new check_results_0_11();

    public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm h_334, IStrategoTerm i_334, IStrategoTerm j_334, IStrategoTerm k_334, IStrategoTerm l_334, IStrategoTerm m_334, IStrategoTerm n_334, IStrategoTerm o_334, IStrategoTerm p_334, IStrategoTerm q_334, IStrategoTerm r_334)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("check_results_0_11");
      Fail720:
      { 
        IStrategoTerm s_334 = null;
        IStrategoTerm t_334 = null;
        IStrategoTerm u_334 = null;
        IStrategoTerm v_334 = null;
        IStrategoTerm x_334 = null;
        IStrategoTerm y_334 = null;
        IStrategoTerm z_334 = null;
        z_334 = term;
        IStrategoTerm term667 = term;
        Success595:
        { 
          Fail721:
          { 
            IStrategoTerm a_335 = null;
            a_335 = term;
            term = z_334;
            if(term.getTermType() != IStrategoTerm.STRING || !"crashed".equals(((IStrategoString)term).stringValue()))
              break Fail721;
            term = a_335;
            { 
              IStrategoTerm c_337 = null;
              IStrategoTerm e_337 = null;
              IStrategoTerm f_335 = null;
              IStrategoTerm h_335 = null;
              IStrategoTerm i_335 = null;
              IStrategoTerm j_337 = null;
              IStrategoTerm l_337 = null;
              term = debug_0_0.instance.invoke(context, random_test.const378);
              if(term == null)
                break Fail720;
              e_337 = term;
              term = i_334;
              IStrategoTerm term668 = term;
              Success596:
              { 
                Fail722:
                { 
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail722;
                  if(true)
                    break Success596;
                }
                term = term668;
                IStrategoTerm term669 = term;
                Success597:
                { 
                  Fail723:
                  { 
                    term = is_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail723;
                    if(true)
                      break Success597;
                  }
                  term = term669;
                  IStrategoTerm term670 = term;
                  Success598:
                  { 
                    Fail724:
                    { 
                      term = int_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail724;
                      if(true)
                        break Success598;
                    }
                    term = term670;
                    IStrategoTerm term671 = term;
                    Success599:
                    { 
                      Fail725:
                      { 
                        term = real_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail725;
                        if(true)
                          break Success599;
                      }
                      term = term671;
                      IStrategoTerm b_335 = null;
                      IStrategoTerm c_335 = null;
                      IStrategoTerm e_335 = null;
                      b_335 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail720;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail720;
                      c_335 = ((IStrategoList)term).tail();
                      e_335 = c_335;
                      term = report_failure_0_2.instance.invoke(context, e_335, random_test.const379, b_335);
                      if(term == null)
                        break Fail720;
                    }
                  }
                }
              }
              h_335 = term;
              f_335 = random_test.const8;
              i_335 = h_335;
              term = string_replace_0_2.instance.invoke(context, i_335, f_335, random_test.const8);
              if(term == null)
                break Fail720;
              term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons58);
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail720;
              term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
              c_337 = term;
              j_337 = e_337;
              term = iset_elements_0_0.instance.invoke(context, h_334);
              if(term == null)
                break Fail720;
              term = write_test_0_5.instance.invoke(context, j_337, c_337, m_334, n_334, o_334, term);
              if(term == null)
                break Fail720;
              l_337 = term;
              term = termFactory.makeTuple(p_334, random_test.const109);
              term = addi_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail720;
              term = generate_random_test_0_1.instance.invoke(context, l_337, term);
              if(term == null)
                break Fail720;
              term = all_keys_$N$B$L$Injection_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail720;
              term = debug_1_0.instance.invoke(context, term, lifted504.instance);
              if(term == null)
                break Fail720;
              term = exit_0_0.instance.invoke(context, random_test.const58);
              if(term == null)
                break Fail720;
              if(true)
                break Success595;
            }
          }
          term = term667;
        }
        Success600:
        { 
          Fail726:
          { 
            IStrategoTerm j_335 = null;
            j_335 = term;
            term = z_334;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail726;
            IStrategoTerm arg257 = term.getSubterm(0);
            if(arg257.getTermType() != IStrategoTerm.STRING || !"Errors".equals(((IStrategoString)arg257).stringValue()))
              break Fail726;
            s_334 = term.getSubterm(1);
            term = j_335;
            { 
              IStrategoTerm w_337 = null;
              IStrategoTerm y_337 = null;
              IStrategoTerm p_335 = null;
              IStrategoTerm r_335 = null;
              IStrategoTerm s_335 = null;
              IStrategoTerm z_335 = null;
              IStrategoTerm b_336 = null;
              IStrategoTerm c_336 = null;
              term = debug_1_0.instance.invoke(context, term, lifted505.instance);
              if(term == null)
                break Fail720;
              IStrategoTerm term673 = term;
              Success601:
              { 
                Fail727:
                { 
                  IStrategoTerm k_335 = null;
                  k_335 = term;
                  IStrategoTerm term674 = term;
                  Success602:
                  { 
                    Fail728:
                    { 
                      term = termFactory.makeTuple(m_334, s_334);
                      term = fix_program_0_3.instance.invoke(context, term, h_334, i_334, q_334);
                      if(term == null)
                        break Fail728;
                      if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 4)
                        break Fail728;
                      x_334 = term.getSubterm(0);
                      y_334 = term.getSubterm(1);
                      t_334 = term.getSubterm(2);
                      u_334 = term.getSubterm(3);
                      { 
                        if(true)
                          break Fail727;
                        if(true)
                          break Success602;
                      }
                    }
                    term = term674;
                  }
                  term = k_335;
                  { 
                    IStrategoTerm p_337 = null;
                    IStrategoTerm r_337 = null;
                    p_337 = term;
                    term = iset_elements_0_0.instance.invoke(context, h_334);
                    if(term == null)
                      break Fail720;
                    term = write_test_0_5.instance.invoke(context, p_337, i_334, m_334, n_334, o_334, term);
                    if(term == null)
                      break Fail720;
                    r_337 = term;
                    term = termFactory.makeTuple(p_334, random_test.const109);
                    term = addi_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail720;
                    term = generate_random_test_0_1.instance.invoke(context, r_337, term);
                    if(term == null)
                      break Fail720;
                    term = all_keys_$N$B$L$Injection_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail720;
                    term = debug_1_0.instance.invoke(context, term, lifted506.instance);
                    if(term == null)
                      break Fail720;
                    term = exit_0_0.instance.invoke(context, random_test.const58);
                    if(term == null)
                      break Fail720;
                    if(true)
                      break Success601;
                  }
                }
                term = term673;
              }
              y_337 = term;
              term = i_334;
              IStrategoTerm term675 = term;
              Success603:
              { 
                Fail729:
                { 
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail729;
                  if(true)
                    break Success603;
                }
                term = term675;
                IStrategoTerm term676 = term;
                Success604:
                { 
                  Fail730:
                  { 
                    term = is_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail730;
                    if(true)
                      break Success604;
                  }
                  term = term676;
                  IStrategoTerm term677 = term;
                  Success605:
                  { 
                    Fail731:
                    { 
                      term = int_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail731;
                      if(true)
                        break Success605;
                    }
                    term = term677;
                    IStrategoTerm term678 = term;
                    Success606:
                    { 
                      Fail732:
                      { 
                        term = real_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail732;
                        if(true)
                          break Success606;
                      }
                      term = term678;
                      IStrategoTerm l_335 = null;
                      IStrategoTerm m_335 = null;
                      IStrategoTerm o_335 = null;
                      l_335 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail720;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail720;
                      m_335 = ((IStrategoList)term).tail();
                      o_335 = m_335;
                      term = report_failure_0_2.instance.invoke(context, o_335, random_test.const379, l_335);
                      if(term == null)
                        break Fail720;
                    }
                  }
                }
              }
              r_335 = term;
              p_335 = random_test.const8;
              s_335 = r_335;
              term = string_replace_0_2.instance.invoke(context, s_335, p_335, random_test.const8);
              if(term == null)
                break Fail720;
              w_337 = term;
              term = y_337;
              term = inc_fix_runtag_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail720;
              IStrategoTerm term679 = term;
              Success607:
              { 
                Fail733:
                { 
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail733;
                  if(true)
                    break Success607;
                }
                term = term679;
                IStrategoTerm term680 = term;
                Success608:
                { 
                  Fail734:
                  { 
                    term = is_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail734;
                    if(true)
                      break Success608;
                  }
                  term = term680;
                  IStrategoTerm term681 = term;
                  Success609:
                  { 
                    Fail735:
                    { 
                      term = int_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail735;
                      if(true)
                        break Success609;
                    }
                    term = term681;
                    IStrategoTerm term682 = term;
                    Success610:
                    { 
                      Fail736:
                      { 
                        term = real_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail736;
                        if(true)
                          break Success610;
                      }
                      term = term682;
                      IStrategoTerm v_335 = null;
                      IStrategoTerm w_335 = null;
                      IStrategoTerm y_335 = null;
                      v_335 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail720;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail720;
                      w_335 = ((IStrategoList)term).tail();
                      y_335 = w_335;
                      term = report_failure_0_2.instance.invoke(context, y_335, random_test.const379, v_335);
                      if(term == null)
                        break Fail720;
                    }
                  }
                }
              }
              b_336 = term;
              z_335 = random_test.const8;
              c_336 = b_336;
              term = string_replace_0_2.instance.invoke(context, c_336, z_335, random_test.const382);
              if(term == null)
                break Fail720;
              term = (IStrategoTerm)termFactory.makeListCons(w_337, termFactory.makeListCons(random_test.const384, termFactory.makeListCons(term, (IStrategoList)random_test.constCons59)));
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail720;
              term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
              v_334 = term;
              IStrategoTerm term683 = term;
              Success611:
              { 
                Fail737:
                { 
                  IStrategoTerm d_336 = null;
                  d_336 = term;
                  if(u_334 == null)
                    break Fail737;
                  term = u_334;
                  if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                    break Fail737;
                  term = d_336;
                  { 
                    IStrategoTerm a_338 = null;
                    IStrategoTerm c_338 = null;
                    IStrategoTerm i_336 = null;
                    IStrategoTerm k_336 = null;
                    IStrategoTerm l_336 = null;
                    IStrategoTerm i_338 = null;
                    term = debug_0_0.instance.invoke(context, random_test.const385);
                    if(term == null)
                      break Fail720;
                    c_338 = term;
                    term = i_334;
                    IStrategoTerm term684 = term;
                    Success612:
                    { 
                      Fail738:
                      { 
                        term = concat_strings_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail738;
                        if(true)
                          break Success612;
                      }
                      term = term684;
                      IStrategoTerm term685 = term;
                      Success613:
                      { 
                        Fail739:
                        { 
                          term = is_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail739;
                          if(true)
                            break Success613;
                        }
                        term = term685;
                        IStrategoTerm term686 = term;
                        Success614:
                        { 
                          Fail740:
                          { 
                            term = int_to_string_0_0.instance.invoke(context, term);
                            if(term == null)
                              break Fail740;
                            if(true)
                              break Success614;
                          }
                          term = term686;
                          IStrategoTerm term687 = term;
                          Success615:
                          { 
                            Fail741:
                            { 
                              term = real_to_string_0_0.instance.invoke(context, term);
                              if(term == null)
                                break Fail741;
                              if(true)
                                break Success615;
                            }
                            term = term687;
                            IStrategoTerm e_336 = null;
                            IStrategoTerm f_336 = null;
                            IStrategoTerm h_336 = null;
                            e_336 = term;
                            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                            if(term == null)
                              break Fail720;
                            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                              break Fail720;
                            f_336 = ((IStrategoList)term).tail();
                            h_336 = f_336;
                            term = report_failure_0_2.instance.invoke(context, h_336, random_test.const379, e_336);
                            if(term == null)
                              break Fail720;
                          }
                        }
                      }
                    }
                    k_336 = term;
                    i_336 = random_test.const8;
                    l_336 = k_336;
                    term = string_replace_0_2.instance.invoke(context, l_336, i_336, random_test.const8);
                    if(term == null)
                      break Fail720;
                    term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons60);
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail720;
                    term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                    a_338 = term;
                    i_338 = c_338;
                    term = iset_elements_0_0.instance.invoke(context, h_334);
                    if(term == null)
                      break Fail720;
                    term = write_test_0_5.instance.invoke(context, i_338, a_338, x_334, y_334, o_334, term);
                    if(term == null)
                      break Fail720;
                    if(true)
                      break Success611;
                  }
                }
                term = term683;
                IStrategoTerm m_338 = null;
                IStrategoTerm p_338 = null;
                IStrategoTerm r_338 = null;
                IStrategoTerm s_338 = null;
                IStrategoTerm v_338 = null;
                IStrategoTerm q_336 = null;
                IStrategoTerm s_336 = null;
                IStrategoTerm t_336 = null;
                IStrategoTerm y_336 = null;
                IStrategoTerm a_337 = null;
                IStrategoTerm b_337 = null;
                term = write_test_0_5.instance.invoke(context, term, v_334, x_334, y_334, t_334, u_334);
                if(term == null)
                  break Fail720;
                m_338 = term;
                term = $C$A$C$H$E$P$A$T$H$S_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail720;
                term = remove_folders_0_1.instance.invoke(context, m_338, term);
                if(term == null)
                  break Fail720;
                r_338 = r_334;
                p_338 = random_test.const70;
                s_338 = r_338;
                term = l_334;
                IStrategoTerm term688 = term;
                Success616:
                { 
                  Fail742:
                  { 
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail742;
                    if(true)
                      break Success616;
                  }
                  term = term688;
                  IStrategoTerm term689 = term;
                  Success617:
                  { 
                    Fail743:
                    { 
                      term = is_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail743;
                      if(true)
                        break Success617;
                    }
                    term = term689;
                    IStrategoTerm term690 = term;
                    Success618:
                    { 
                      Fail744:
                      { 
                        term = int_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail744;
                        if(true)
                          break Success618;
                      }
                      term = term690;
                      IStrategoTerm term691 = term;
                      Success619:
                      { 
                        Fail745:
                        { 
                          term = real_to_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail745;
                          if(true)
                            break Success619;
                        }
                        term = term691;
                        IStrategoTerm m_336 = null;
                        IStrategoTerm n_336 = null;
                        IStrategoTerm p_336 = null;
                        m_336 = term;
                        term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                        if(term == null)
                          break Fail720;
                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                          break Fail720;
                        n_336 = ((IStrategoList)term).tail();
                        p_336 = n_336;
                        term = report_failure_0_2.instance.invoke(context, p_336, random_test.const379, m_336);
                        if(term == null)
                          break Fail720;
                      }
                    }
                  }
                }
                s_336 = term;
                q_336 = random_test.const8;
                t_336 = s_336;
                term = string_replace_0_2.instance.invoke(context, t_336, q_336, random_test.const8);
                if(term == null)
                  break Fail720;
                v_338 = term;
                term = v_334;
                IStrategoTerm term692 = term;
                Success620:
                { 
                  Fail746:
                  { 
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail746;
                    if(true)
                      break Success620;
                  }
                  term = term692;
                  IStrategoTerm term693 = term;
                  Success621:
                  { 
                    Fail747:
                    { 
                      term = is_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail747;
                      if(true)
                        break Success621;
                    }
                    term = term693;
                    IStrategoTerm term694 = term;
                    Success622:
                    { 
                      Fail748:
                      { 
                        term = int_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail748;
                        if(true)
                          break Success622;
                      }
                      term = term694;
                      IStrategoTerm term695 = term;
                      Success623:
                      { 
                        Fail749:
                        { 
                          term = real_to_string_0_0.instance.invoke(context, term);
                          if(term == null)
                            break Fail749;
                          if(true)
                            break Success623;
                        }
                        term = term695;
                        IStrategoTerm u_336 = null;
                        IStrategoTerm v_336 = null;
                        IStrategoTerm x_336 = null;
                        u_336 = term;
                        term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                        if(term == null)
                          break Fail720;
                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                          break Fail720;
                        v_336 = ((IStrategoList)term).tail();
                        x_336 = v_336;
                        term = report_failure_0_2.instance.invoke(context, x_336, random_test.const379, u_336);
                        if(term == null)
                          break Fail720;
                      }
                    }
                  }
                }
                a_337 = term;
                y_336 = random_test.const8;
                b_337 = a_337;
                term = string_replace_0_2.instance.invoke(context, b_337, y_336, random_test.const376);
                if(term == null)
                  break Fail720;
                term = (IStrategoTerm)termFactory.makeListCons(v_338, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0)));
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail720;
                term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                term = run_0_3.instance.invoke(context, s_338, p_338, k_334, term);
                if(term == null)
                  break Fail720;
                term = this.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{h_334, i_334, j_334, k_334, l_334, x_334, y_334, o_334, p_334, q_334, r_334});
                if(term == null)
                  break Fail720;
              }
              if(true)
                break Success600;
            }
          }
          IStrategoTerm b_339 = null;
          term = write_to_string_0_0.instance.invoke(context, z_334);
          if(term == null)
            break Fail720;
          term = debug_1_0.instance.invoke(context, term, lifted507.instance);
          if(term == null)
            break Fail720;
          b_339 = term;
          term = iset_elements_0_0.instance.invoke(context, h_334);
          if(term == null)
            break Fail720;
          term = write_test_0_5.instance.invoke(context, b_339, i_334, m_334, n_334, o_334, term);
          if(term == null)
            break Fail720;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }

    @Override public IStrategoTerm invokeDynamic(Context context, IStrategoTerm term, Strategy[] sargs, IStrategoTerm[] targs)
    { 
      if(sargs == null || targs == null || sargs.length != 0 || targs.length != 11)
        throw new IllegalArgumentException("Illegal arguments for " + getName());
      return invoke(context, term, targs[0], targs[1], targs[2], targs[3], targs[4], targs[5], targs[6], targs[7], targs[8], targs[9], targs[10]);
    }
  }

  @SuppressWarnings("all") public static class print_parse_cycle_0_3 extends Strategy 
  { 
    public static print_parse_cycle_0_3 instance = new print_parse_cycle_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm c_339, IStrategoTerm d_339, IStrategoTerm e_339)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("print_parse_cycle_0_3");
      Fail750:
      { 
        IStrategoTerm f_339 = null;
        IStrategoTerm g_339 = null;
        term = $Cons$Count_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail750;
        term = debug_1_0.instance.invoke(context, term, lifted508.instance);
        if(term == null)
          break Fail750;
        term = pp_program_0_0.instance.invoke(context, c_339);
        if(term == null)
          break Fail750;
        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons62);
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail750;
        f_339 = term;
        term = parse_pp_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail750;
        g_339 = term;
        IStrategoTerm term696 = term;
        Success624:
        { 
          Fail751:
          { 
            IStrategoTerm h_339 = null;
            h_339 = term;
            term = g_339;
            IStrategoTerm cons31 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            if(cons31.getTermType() != IStrategoTerm.STRING || !"error".equals(((IStrategoString)cons31).stringValue()))
              break Fail751;
            term = h_339;
            { 
              IStrategoTerm l_339 = null;
              term = debug_0_0.instance.invoke(context, random_test.const390);
              if(term == null)
                break Fail750;
              l_339 = term;
              term = termFactory.makeTuple(d_339, random_test.const391);
              term = conc_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail750;
              term = write_test_0_5.instance.invoke(context, l_339, term, c_339, f_339, g_339, e_339);
              if(term == null)
                break Fail750;
              if(true)
                break Fail750;
              if(true)
                break Success624;
            }
          }
          term = term696;
        }
        term = termFactory.makeTuple(f_339, g_339);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_test_0_5 extends Strategy 
  { 
    public static write_test_0_5 instance = new write_test_0_5();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_m_339, IStrategoTerm n_339, IStrategoTerm ref_o_339, IStrategoTerm ref_p_339, IStrategoTerm q_339)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference m_339 = new TermReference(ref_m_339);
      TermReference o_339 = new TermReference(ref_o_339);
      TermReference p_339 = new TermReference(ref_p_339);
      context.push("write_test_0_5");
      Fail752:
      { 
        IStrategoTerm r_339 = null;
        IStrategoTerm t_339 = null;
        TermReference u_339 = new TermReference();
        TermReference v_339 = new TermReference();
        TermReference w_339 = new TermReference();
        TermReference x_339 = new TermReference();
        TermReference y_339 = new TermReference();
        TermReference z_339 = new TermReference();
        TermReference a_340 = new TermReference();
        TermReference b_340 = new TermReference();
        IStrategoTerm h_347 = null;
        IStrategoTerm k_347 = null;
        IStrategoTerm l_341 = null;
        IStrategoTerm n_341 = null;
        IStrategoTerm o_341 = null;
        IStrategoTerm i_347 = null;
        IStrategoTerm l_347 = null;
        IStrategoTerm v_341 = null;
        IStrategoTerm x_341 = null;
        IStrategoTerm y_341 = null;
        IStrategoTerm d_342 = null;
        IStrategoTerm f_342 = null;
        IStrategoTerm g_342 = null;
        IStrategoTerm o_347 = null;
        TermReference p_347 = new TermReference();
        TermReference q_347 = new TermReference();
        TermReference r_347 = new TermReference();
        IStrategoTerm u_347 = null;
        IStrategoTerm n_342 = null;
        IStrategoTerm p_342 = null;
        IStrategoTerm q_342 = null;
        TermReference s_347 = new TermReference();
        TermReference v_347 = new TermReference();
        TermReference x_342 = new TermReference();
        TermReference y_342 = new TermReference();
        TermReference z_342 = new TermReference();
        TermReference a_343 = new TermReference();
        TermReference t_347 = new TermReference();
        TermReference w_347 = new TermReference();
        TermReference f_343 = new TermReference();
        TermReference g_343 = new TermReference();
        TermReference h_343 = new TermReference();
        TermReference i_343 = new TermReference();
        TermReference x_347 = new TermReference();
        TermReference y_347 = new TermReference();
        TermReference z_347 = new TermReference();
        TermReference c_348 = new TermReference();
        TermReference j_343 = new TermReference();
        TermReference k_343 = new TermReference();
        TermReference p_343 = new TermReference();
        TermReference q_343 = new TermReference();
        TermReference r_343 = new TermReference();
        TermReference s_343 = new TermReference();
        TermReference a_348 = new TermReference();
        TermReference d_348 = new TermReference();
        TermReference t_343 = new TermReference();
        TermReference u_343 = new TermReference();
        TermReference z_343 = new TermReference();
        TermReference a_344 = new TermReference();
        TermReference b_344 = new TermReference();
        TermReference c_344 = new TermReference();
        TermReference b_348 = new TermReference();
        TermReference e_348 = new TermReference();
        TermReference h_344 = new TermReference();
        TermReference i_344 = new TermReference();
        TermReference j_344 = new TermReference();
        TermReference k_344 = new TermReference();
        TermReference f_348 = new TermReference();
        TermReference g_348 = new TermReference();
        TermReference h_348 = new TermReference();
        TermReference i_348 = new TermReference();
        TermReference p_348 = new TermReference();
        TermReference q_348 = new TermReference();
        TermReference r_348 = new TermReference();
        TermReference t_348 = new TermReference();
        TermReference h_345 = new TermReference();
        TermReference i_345 = new TermReference();
        TermReference j_345 = new TermReference();
        TermReference k_345 = new TermReference();
        TermReference s_348 = new TermReference();
        TermReference u_348 = new TermReference();
        TermReference l_345 = new TermReference();
        TermReference m_345 = new TermReference();
        TermReference r_345 = new TermReference();
        TermReference s_345 = new TermReference();
        TermReference t_345 = new TermReference();
        TermReference u_345 = new TermReference();
        TermReference v_348 = new TermReference();
        TermReference w_348 = new TermReference();
        TermReference x_348 = new TermReference();
        TermReference y_348 = new TermReference();
        TermReference z_348 = new TermReference();
        TermReference c_349 = new TermReference();
        TermReference v_345 = new TermReference();
        TermReference w_345 = new TermReference();
        TermReference b_346 = new TermReference();
        TermReference c_346 = new TermReference();
        TermReference d_346 = new TermReference();
        TermReference e_346 = new TermReference();
        TermReference a_349 = new TermReference();
        TermReference d_349 = new TermReference();
        TermReference f_346 = new TermReference();
        TermReference g_346 = new TermReference();
        TermReference l_346 = new TermReference();
        TermReference m_346 = new TermReference();
        TermReference n_346 = new TermReference();
        TermReference o_346 = new TermReference();
        TermReference b_349 = new TermReference();
        TermReference e_349 = new TermReference();
        TermReference t_346 = new TermReference();
        TermReference u_346 = new TermReference();
        TermReference v_346 = new TermReference();
        TermReference w_346 = new TermReference();
        IStrategoTerm term697 = term;
        Success625:
        { 
          Fail753:
          { 
            IStrategoTerm c_340 = null;
            c_340 = term;
            IStrategoTerm term698 = term;
            Success626:
            { 
              Fail754:
              { 
                term = q_339;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail754;
                { 
                  if(true)
                    break Fail753;
                  if(true)
                    break Success626;
                }
              }
              term = term698;
            }
            term = c_340;
            { 
              IStrategoTerm z_346 = null;
              IStrategoTerm c_347 = null;
              IStrategoTerm j_340 = null;
              IStrategoTerm l_340 = null;
              IStrategoTerm m_340 = null;
              IStrategoTerm a_347 = null;
              IStrategoTerm d_347 = null;
              IStrategoTerm t_340 = null;
              IStrategoTerm v_340 = null;
              IStrategoTerm w_340 = null;
              IStrategoTerm b_341 = null;
              IStrategoTerm d_341 = null;
              IStrategoTerm e_341 = null;
              c_347 = term;
              term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail752;
              IStrategoTerm term699 = term;
              Success627:
              { 
                Fail755:
                { 
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail755;
                  if(true)
                    break Success627;
                }
                term = term699;
                IStrategoTerm term700 = term;
                Success628:
                { 
                  Fail756:
                  { 
                    term = is_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail756;
                    if(true)
                      break Success628;
                  }
                  term = term700;
                  IStrategoTerm term701 = term;
                  Success629:
                  { 
                    Fail757:
                    { 
                      term = int_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail757;
                      if(true)
                        break Success629;
                    }
                    term = term701;
                    IStrategoTerm term702 = term;
                    Success630:
                    { 
                      Fail758:
                      { 
                        term = real_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail758;
                        if(true)
                          break Success630;
                      }
                      term = term702;
                      IStrategoTerm f_340 = null;
                      IStrategoTerm g_340 = null;
                      IStrategoTerm i_340 = null;
                      f_340 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail752;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail752;
                      g_340 = ((IStrategoList)term).tail();
                      i_340 = g_340;
                      term = report_failure_0_2.instance.invoke(context, i_340, random_test.const392, f_340);
                      if(term == null)
                        break Fail752;
                    }
                  }
                }
              }
              l_340 = term;
              j_340 = random_test.const8;
              m_340 = l_340;
              term = string_replace_0_2.instance.invoke(context, m_340, j_340, random_test.const8);
              if(term == null)
                break Fail752;
              z_346 = term;
              term = c_347;
              d_347 = c_347;
              term = $Language_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail752;
              IStrategoTerm term703 = term;
              Success631:
              { 
                Fail759:
                { 
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail759;
                  if(true)
                    break Success631;
                }
                term = term703;
                IStrategoTerm term704 = term;
                Success632:
                { 
                  Fail760:
                  { 
                    term = is_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail760;
                    if(true)
                      break Success632;
                  }
                  term = term704;
                  IStrategoTerm term705 = term;
                  Success633:
                  { 
                    Fail761:
                    { 
                      term = int_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail761;
                      if(true)
                        break Success633;
                    }
                    term = term705;
                    IStrategoTerm term706 = term;
                    Success634:
                    { 
                      Fail762:
                      { 
                        term = real_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail762;
                        if(true)
                          break Success634;
                      }
                      term = term706;
                      IStrategoTerm p_340 = null;
                      IStrategoTerm q_340 = null;
                      IStrategoTerm s_340 = null;
                      p_340 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail752;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail752;
                      q_340 = ((IStrategoList)term).tail();
                      s_340 = q_340;
                      term = report_failure_0_2.instance.invoke(context, s_340, random_test.const392, p_340);
                      if(term == null)
                        break Fail752;
                    }
                  }
                }
              }
              v_340 = term;
              t_340 = random_test.const8;
              w_340 = v_340;
              term = string_replace_0_2.instance.invoke(context, w_340, t_340, random_test.const372);
              if(term == null)
                break Fail752;
              a_347 = term;
              term = d_347;
              if(m_339.value == null)
                break Fail752;
              term = m_339.value;
              IStrategoTerm term707 = term;
              Success635:
              { 
                Fail763:
                { 
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail763;
                  if(true)
                    break Success635;
                }
                term = term707;
                IStrategoTerm term708 = term;
                Success636:
                { 
                  Fail764:
                  { 
                    term = is_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail764;
                    if(true)
                      break Success636;
                  }
                  term = term708;
                  IStrategoTerm term709 = term;
                  Success637:
                  { 
                    Fail765:
                    { 
                      term = int_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail765;
                      if(true)
                        break Success637;
                    }
                    term = term709;
                    IStrategoTerm term710 = term;
                    Success638:
                    { 
                      Fail766:
                      { 
                        term = real_to_string_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail766;
                        if(true)
                          break Success638;
                      }
                      term = term710;
                      IStrategoTerm x_340 = null;
                      IStrategoTerm y_340 = null;
                      IStrategoTerm a_341 = null;
                      x_340 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail752;
                      if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                        break Fail752;
                      y_340 = ((IStrategoList)term).tail();
                      a_341 = y_340;
                      term = report_failure_0_2.instance.invoke(context, a_341, random_test.const392, x_340);
                      if(term == null)
                        break Fail752;
                    }
                  }
                }
              }
              d_341 = term;
              b_341 = random_test.const8;
              e_341 = d_341;
              term = string_replace_0_2.instance.invoke(context, e_341, b_341, random_test.const393);
              if(term == null)
                break Fail752;
              term = (IStrategoTerm)termFactory.makeListCons(z_346, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(a_347, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constCons63)))));
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail752;
              term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
              r_339 = term;
              term = write_to_string_0_0.instance.invoke(context, q_339);
              if(term == null)
                break Fail752;
              term = write_log_0_1.instance.invoke(context, term, r_339);
              if(term == null)
                break Fail752;
              if(true)
                break Success625;
            }
          }
          term = term697;
        }
        k_347 = term;
        term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail752;
        IStrategoTerm term711 = term;
        Success639:
        { 
          Fail767:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail767;
            if(true)
              break Success639;
          }
          term = term711;
          IStrategoTerm term712 = term;
          Success640:
          { 
            Fail768:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail768;
              if(true)
                break Success640;
            }
            term = term712;
            IStrategoTerm term713 = term;
            Success641:
            { 
              Fail769:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail769;
                if(true)
                  break Success641;
              }
              term = term713;
              IStrategoTerm term714 = term;
              Success642:
              { 
                Fail770:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail770;
                  if(true)
                    break Success642;
                }
                term = term714;
                IStrategoTerm h_341 = null;
                IStrategoTerm i_341 = null;
                IStrategoTerm k_341 = null;
                h_341 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail752;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail752;
                i_341 = ((IStrategoList)term).tail();
                k_341 = i_341;
                term = report_failure_0_2.instance.invoke(context, k_341, random_test.const392, h_341);
                if(term == null)
                  break Fail752;
              }
            }
          }
        }
        n_341 = term;
        l_341 = random_test.const8;
        o_341 = n_341;
        term = string_replace_0_2.instance.invoke(context, o_341, l_341, random_test.const8);
        if(term == null)
          break Fail752;
        h_347 = term;
        term = k_347;
        l_347 = k_347;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail752;
        IStrategoTerm term715 = term;
        Success643:
        { 
          Fail771:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail771;
            if(true)
              break Success643;
          }
          term = term715;
          IStrategoTerm term716 = term;
          Success644:
          { 
            Fail772:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail772;
              if(true)
                break Success644;
            }
            term = term716;
            IStrategoTerm term717 = term;
            Success645:
            { 
              Fail773:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail773;
                if(true)
                  break Success645;
              }
              term = term717;
              IStrategoTerm term718 = term;
              Success646:
              { 
                Fail774:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail774;
                  if(true)
                    break Success646;
                }
                term = term718;
                IStrategoTerm r_341 = null;
                IStrategoTerm s_341 = null;
                IStrategoTerm u_341 = null;
                r_341 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail752;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail752;
                s_341 = ((IStrategoList)term).tail();
                u_341 = s_341;
                term = report_failure_0_2.instance.invoke(context, u_341, random_test.const392, r_341);
                if(term == null)
                  break Fail752;
              }
            }
          }
        }
        x_341 = term;
        v_341 = random_test.const8;
        y_341 = x_341;
        term = string_replace_0_2.instance.invoke(context, y_341, v_341, random_test.const372);
        if(term == null)
          break Fail752;
        i_347 = term;
        term = l_347;
        if(m_339.value == null)
          break Fail752;
        term = m_339.value;
        IStrategoTerm term719 = term;
        Success647:
        { 
          Fail775:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail775;
            if(true)
              break Success647;
          }
          term = term719;
          IStrategoTerm term720 = term;
          Success648:
          { 
            Fail776:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail776;
              if(true)
                break Success648;
            }
            term = term720;
            IStrategoTerm term721 = term;
            Success649:
            { 
              Fail777:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail777;
                if(true)
                  break Success649;
              }
              term = term721;
              IStrategoTerm term722 = term;
              Success650:
              { 
                Fail778:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail778;
                  if(true)
                    break Success650;
                }
                term = term722;
                IStrategoTerm z_341 = null;
                IStrategoTerm a_342 = null;
                IStrategoTerm c_342 = null;
                z_341 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail752;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail752;
                a_342 = ((IStrategoList)term).tail();
                c_342 = a_342;
                term = report_failure_0_2.instance.invoke(context, c_342, random_test.const392, z_341);
                if(term == null)
                  break Fail752;
              }
            }
          }
        }
        f_342 = term;
        d_342 = random_test.const8;
        g_342 = f_342;
        term = string_replace_0_2.instance.invoke(context, g_342, d_342, random_test.const393);
        if(term == null)
          break Fail752;
        term = (IStrategoTerm)termFactory.makeListCons(h_347, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(i_347, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constCons64)))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail752;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        t_339 = term;
        term = pp_aterm_box_0_0.instance.invoke(context, n_339);
        if(term == null)
          break Fail752;
        o_347 = term;
        term = box2text_string_0_1.instance.invoke(context, o_347, random_test.const398);
        if(term == null)
          break Fail752;
        term = write_log_0_1.instance.invoke(context, term, t_339);
        if(term == null)
          break Fail752;
        if(q_347.value == null)
          q_347.value = term;
        else
          if(q_347.value != term && !q_347.value.match(term))
            break Fail752;
        u_347 = term;
        term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail752;
        IStrategoTerm term767 = term;
        Success651:
        { 
          Fail779:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail779;
            if(true)
              break Success651;
          }
          term = term767;
          IStrategoTerm term768 = term;
          Success652:
          { 
            Fail780:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail780;
              if(true)
                break Success652;
            }
            term = term768;
            IStrategoTerm term769 = term;
            Success653:
            { 
              Fail781:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail781;
                if(true)
                  break Success653;
              }
              term = term769;
              IStrategoTerm term770 = term;
              Success654:
              { 
                Fail782:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail782;
                  if(true)
                    break Success654;
                }
                term = term770;
                IStrategoTerm j_342 = null;
                IStrategoTerm k_342 = null;
                IStrategoTerm m_342 = null;
                j_342 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail752;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail752;
                k_342 = ((IStrategoList)term).tail();
                m_342 = k_342;
                term = report_failure_0_2.instance.invoke(context, m_342, random_test.const392, j_342);
                if(term == null)
                  break Fail752;
              }
            }
          }
        }
        p_342 = term;
        n_342 = random_test.const8;
        q_342 = p_342;
        term = string_replace_0_2.instance.invoke(context, q_342, n_342, random_test.const8);
        if(term == null)
          break Fail752;
        if(r_347.value == null)
          r_347.value = term;
        else
          if(r_347.value != term && !r_347.value.match(term))
            break Fail752;
        term = u_347;
        if(v_347.value == null)
          v_347.value = term;
        else
          if(v_347.value != term && !v_347.value.match(term))
            break Fail752;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail752;
        IStrategoTerm term771 = term;
        Success655:
        { 
          Fail783:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail783;
            if(true)
              break Success655;
          }
          term = term771;
          IStrategoTerm term772 = term;
          Success656:
          { 
            Fail784:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail784;
              if(true)
                break Success656;
            }
            term = term772;
            IStrategoTerm term773 = term;
            Success657:
            { 
              Fail785:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail785;
                if(true)
                  break Success657;
              }
              term = term773;
              IStrategoTerm term774 = term;
              Success658:
              { 
                Fail786:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail786;
                  if(true)
                    break Success658;
                }
                term = term774;
                IStrategoTerm t_342 = null;
                IStrategoTerm u_342 = null;
                IStrategoTerm w_342 = null;
                t_342 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail752;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail752;
                u_342 = ((IStrategoList)term).tail();
                w_342 = u_342;
                term = report_failure_0_2.instance.invoke(context, w_342, random_test.const392, t_342);
                if(term == null)
                  break Fail752;
              }
            }
          }
        }
        if(z_342.value == null)
          z_342.value = term;
        else
          if(z_342.value != term && !z_342.value.match(term))
            break Fail752;
        term = random_test.const8;
        if(x_342.value == null)
          x_342.value = term;
        else
          if(x_342.value != term && !x_342.value.match(term))
            break Fail752;
        write_test_0_5_fragment_0 write_test_0_5_fragment_00 = new write_test_0_5_fragment_0();
        write_test_0_5_fragment_00.z_342 = z_342;
        write_test_0_5_fragment_00.a_343 = a_343;
        write_test_0_5_fragment_00.x_342 = x_342;
        write_test_0_5_fragment_00.y_342 = y_342;
        write_test_0_5_fragment_00.v_347 = v_347;
        write_test_0_5_fragment_00.h_343 = h_343;
        write_test_0_5_fragment_00.i_343 = i_343;
        write_test_0_5_fragment_00.f_343 = f_343;
        write_test_0_5_fragment_00.g_343 = g_343;
        write_test_0_5_fragment_00.w_347 = w_347;
        write_test_0_5_fragment_00.r_347 = r_347;
        write_test_0_5_fragment_00.s_347 = s_347;
        write_test_0_5_fragment_00.t_347 = t_347;
        write_test_0_5_fragment_00.q_347 = q_347;
        write_test_0_5_fragment_00.p_347 = p_347;
        write_test_0_5_fragment_00.o_339 = o_339;
        write_test_0_5_fragment_00.u_339 = u_339;
        write_test_0_5_fragment_00.k_343 = k_343;
        write_test_0_5_fragment_00.j_343 = j_343;
        write_test_0_5_fragment_00.r_343 = r_343;
        write_test_0_5_fragment_00.s_343 = s_343;
        write_test_0_5_fragment_00.p_343 = p_343;
        write_test_0_5_fragment_00.q_343 = q_343;
        write_test_0_5_fragment_00.c_348 = c_348;
        write_test_0_5_fragment_00.u_343 = u_343;
        write_test_0_5_fragment_00.t_343 = t_343;
        write_test_0_5_fragment_00.b_344 = b_344;
        write_test_0_5_fragment_00.c_344 = c_344;
        write_test_0_5_fragment_00.z_343 = z_343;
        write_test_0_5_fragment_00.a_344 = a_344;
        write_test_0_5_fragment_00.d_348 = d_348;
        write_test_0_5_fragment_00.j_344 = j_344;
        write_test_0_5_fragment_00.k_344 = k_344;
        write_test_0_5_fragment_00.h_344 = h_344;
        write_test_0_5_fragment_00.i_344 = i_344;
        write_test_0_5_fragment_00.e_348 = e_348;
        write_test_0_5_fragment_00.z_347 = z_347;
        write_test_0_5_fragment_00.a_348 = a_348;
        write_test_0_5_fragment_00.b_348 = b_348;
        write_test_0_5_fragment_00.y_347 = y_347;
        write_test_0_5_fragment_00.x_347 = x_347;
        write_test_0_5_fragment_00.p_339 = p_339;
        write_test_0_5_fragment_00.g_348 = g_348;
        write_test_0_5_fragment_00.f_348 = f_348;
        write_test_0_5_fragment_00.v_339 = v_339;
        write_test_0_5_fragment_00.w_339 = w_339;
        write_test_0_5_fragment_00.i_348 = i_348;
        write_test_0_5_fragment_00.h_348 = h_348;
        write_test_0_5_fragment_00.j_345 = j_345;
        write_test_0_5_fragment_00.k_345 = k_345;
        write_test_0_5_fragment_00.h_345 = h_345;
        write_test_0_5_fragment_00.i_345 = i_345;
        write_test_0_5_fragment_00.t_348 = t_348;
        write_test_0_5_fragment_00.m_345 = m_345;
        write_test_0_5_fragment_00.l_345 = l_345;
        write_test_0_5_fragment_00.t_345 = t_345;
        write_test_0_5_fragment_00.u_345 = u_345;
        write_test_0_5_fragment_00.r_345 = r_345;
        write_test_0_5_fragment_00.s_345 = s_345;
        write_test_0_5_fragment_00.u_348 = u_348;
        write_test_0_5_fragment_00.r_348 = r_348;
        write_test_0_5_fragment_00.s_348 = s_348;
        write_test_0_5_fragment_00.q_348 = q_348;
        write_test_0_5_fragment_00.p_348 = p_348;
        write_test_0_5_fragment_00.x_339 = x_339;
        write_test_0_5_fragment_00.w_348 = w_348;
        write_test_0_5_fragment_00.v_348 = v_348;
        write_test_0_5_fragment_00.y_339 = y_339;
        write_test_0_5_fragment_00.z_339 = z_339;
        write_test_0_5_fragment_00.w_345 = w_345;
        write_test_0_5_fragment_00.v_345 = v_345;
        write_test_0_5_fragment_00.d_346 = d_346;
        write_test_0_5_fragment_00.e_346 = e_346;
        write_test_0_5_fragment_00.b_346 = b_346;
        write_test_0_5_fragment_00.c_346 = c_346;
        write_test_0_5_fragment_00.c_349 = c_349;
        write_test_0_5_fragment_00.g_346 = g_346;
        write_test_0_5_fragment_00.f_346 = f_346;
        write_test_0_5_fragment_00.n_346 = n_346;
        write_test_0_5_fragment_00.o_346 = o_346;
        write_test_0_5_fragment_00.l_346 = l_346;
        write_test_0_5_fragment_00.m_346 = m_346;
        write_test_0_5_fragment_00.d_349 = d_349;
        write_test_0_5_fragment_00.m_339 = m_339;
        write_test_0_5_fragment_00.v_346 = v_346;
        write_test_0_5_fragment_00.w_346 = w_346;
        write_test_0_5_fragment_00.t_346 = t_346;
        write_test_0_5_fragment_00.u_346 = u_346;
        write_test_0_5_fragment_00.e_349 = e_349;
        write_test_0_5_fragment_00.z_348 = z_348;
        write_test_0_5_fragment_00.a_349 = a_349;
        write_test_0_5_fragment_00.b_349 = b_349;
        write_test_0_5_fragment_00.y_348 = y_348;
        write_test_0_5_fragment_00.x_348 = x_348;
        write_test_0_5_fragment_00.a_340 = a_340;
        write_test_0_5_fragment_00.b_340 = b_340;
        term = write_test_0_5_fragment_00.invoke(context, term);
        if(term == null)
          break Fail752;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $P$R$O$J$E$C$T$P$A$T$H_0_0 extends Strategy 
  { 
    public static $P$R$O$J$E$C$T$P$A$T$H_0_0 instance = new $P$R$O$J$E$C$T$P$A$T$H_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail787:
      { 
        term = random_test.const404;
        if(true)
          return term;
      }
      context.push("PROJECTPATH_0_0");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $C$A$C$H$E$P$A$T$H$S_0_0 extends Strategy 
  { 
    public static $C$A$C$H$E$P$A$T$H$S_0_0 instance = new $C$A$C$H$E$P$A$T$H$S_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail788:
      { 
        term = random_test.constCons68;
        if(true)
          return term;
      }
      context.push("CACHEPATHS_0_0");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class pp_program_0_0 extends Strategy 
  { 
    public static pp_program_0_0 instance = new pp_program_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("pp_program_0_0");
      Fail789:
      { 
        TermReference h_349 = new TermReference();
        IStrategoTerm i_349 = null;
        IStrategoTerm j_349 = null;
        IStrategoTerm l_349 = null;
        IStrategoTerm j_350 = null;
        i_349 = term;
        j_350 = term;
        IStrategoTerm term775 = term;
        Success659:
        { 
          Fail790:
          { 
            IStrategoTerm m_350 = null;
            IStrategoTerm o_350 = null;
            IStrategoTerm s_349 = null;
            IStrategoTerm u_349 = null;
            IStrategoTerm v_349 = null;
            IStrategoTerm c_350 = null;
            IStrategoTerm e_350 = null;
            IStrategoTerm f_350 = null;
            IStrategoTerm g_350 = null;
            IStrategoTerm u_350 = null;
            IStrategoTerm w_350 = null;
            o_350 = term;
            term = $Language_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail790;
            IStrategoTerm term776 = term;
            Success660:
            { 
              Fail791:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail791;
                if(true)
                  break Success660;
              }
              term = term776;
              IStrategoTerm term777 = term;
              Success661:
              { 
                Fail792:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail792;
                  if(true)
                    break Success661;
                }
                term = term777;
                IStrategoTerm term778 = term;
                Success662:
                { 
                  Fail793:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail793;
                    if(true)
                      break Success662;
                  }
                  term = term778;
                  IStrategoTerm term779 = term;
                  Success663:
                  { 
                    Fail794:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail794;
                      if(true)
                        break Success663;
                    }
                    term = term779;
                    IStrategoTerm o_349 = null;
                    IStrategoTerm p_349 = null;
                    IStrategoTerm r_349 = null;
                    o_349 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail790;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail790;
                    p_349 = ((IStrategoList)term).tail();
                    r_349 = p_349;
                    term = report_failure_0_2.instance.invoke(context, r_349, random_test.const406, o_349);
                    if(term == null)
                      break Fail790;
                  }
                }
              }
            }
            u_349 = term;
            s_349 = random_test.const8;
            v_349 = u_349;
            term = string_replace_0_2.instance.invoke(context, v_349, s_349, random_test.const14);
            if(term == null)
              break Fail790;
            m_350 = term;
            term = o_350;
            term = $Language_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail790;
            IStrategoTerm term780 = term;
            Success664:
            { 
              Fail795:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail795;
                if(true)
                  break Success664;
              }
              term = term780;
              IStrategoTerm term781 = term;
              Success665:
              { 
                Fail796:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail796;
                  if(true)
                    break Success665;
                }
                term = term781;
                IStrategoTerm term782 = term;
                Success666:
                { 
                  Fail797:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail797;
                    if(true)
                      break Success666;
                  }
                  term = term782;
                  IStrategoTerm term783 = term;
                  Success667:
                  { 
                    Fail798:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail798;
                      if(true)
                        break Success667;
                    }
                    term = term783;
                    IStrategoTerm y_349 = null;
                    IStrategoTerm z_349 = null;
                    IStrategoTerm b_350 = null;
                    y_349 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail790;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail790;
                    z_349 = ((IStrategoList)term).tail();
                    b_350 = z_349;
                    term = report_failure_0_2.instance.invoke(context, b_350, random_test.const406, y_349);
                    if(term == null)
                      break Fail790;
                  }
                }
              }
            }
            e_350 = term;
            c_350 = random_test.const8;
            f_350 = e_350;
            term = string_replace_0_2.instance.invoke(context, f_350, c_350, random_test.const15);
            if(term == null)
              break Fail790;
            term = (IStrategoTerm)termFactory.makeListCons(random_test.const17, termFactory.makeListCons(m_350, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constCons69))));
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail790;
            term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
            term = parse_pptable_file_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail790;
            j_349 = term;
            term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constNil0);
            g_350 = term;
            term = new_hashtable_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail790;
            if(h_349.value == null)
              h_349.value = term;
            else
              if(h_349.value != term && !h_349.value.match(term))
                break Fail790;
            term = g_350;
            lifted510 lifted5100 = new lifted510();
            lifted5100.h_349 = h_349;
            term = map_1_0.instance.invoke(context, term, lifted5100);
            if(term == null)
              break Fail790;
            u_350 = i_349;
            term = (IStrategoTerm)termFactory.makeListCons(j_349, (IStrategoList)random_test.constNil0);
            term = ast2abox_0_1.instance.invoke(context, u_350, term);
            if(term == null)
              break Fail790;
            w_350 = term;
            term = box2text_string_0_1.instance.invoke(context, w_350, random_test.const408);
            if(term == null)
              break Fail790;
            l_349 = term;
            if(true)
              break Success659;
          }
          term = term775;
          IStrategoTerm h_350 = null;
          IStrategoTerm i_350 = null;
          IStrategoTerm y_350 = null;
          h_350 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail789;
          i_350 = term;
          y_350 = h_350;
          term = report_with_failure_0_2.instance.invoke(context, y_350, random_test.const409, i_350);
          if(term == null)
            break Fail789;
        }
        term = j_350;
        if(l_349 == null)
          break Fail789;
        term = l_349;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class number$Items_0_0 extends Strategy 
  { 
    public static number$Items_0_0 instance = new number$Items_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("numberItems_0_0");
      Fail799:
      { 
        IStrategoTerm a_351 = null;
        IStrategoTerm k_351 = null;
        IStrategoTerm b_351 = null;
        IStrategoTerm c_351 = null;
        IStrategoTerm l_351 = null;
        IStrategoTerm m_351 = null;
        IStrategoTerm o_351 = null;
        IStrategoTerm p_351 = null;
        IStrategoTerm q_351 = null;
        term = termFactory.makeTuple(term, random_test.const58);
        term = thread_map_1_0.instance.invoke(context, term, lifted512.instance);
        if(term == null)
          break Fail799;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail799;
        k_351 = term.getSubterm(0);
        a_351 = term.getSubterm(1);
        b_351 = k_351;
        term = a_351;
        c_351 = a_351;
        o_351 = term;
        l_351 = random_test.const410;
        p_351 = o_351;
        m_351 = random_test.constCons0;
        q_351 = p_351;
        term = termFactory.makeTuple(random_test.const411, c_351);
        term = dr_set_rule_0_3.instance.invoke(context, q_351, l_351, m_351, term);
        if(term == null)
          break Fail799;
        term = b_351;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class check_for_amb_0_1 extends Strategy 
  { 
    public static check_for_amb_0_1 instance = new check_for_amb_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm t_351)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("check_for_amb_0_1");
      Fail800:
      { 
        IStrategoTerm u_351 = null;
        IStrategoTerm v_351 = null;
        IStrategoTerm w_351 = null;
        IStrategoTerm x_351 = null;
        IStrategoTerm y_351 = null;
        IStrategoTerm a_352 = null;
        IStrategoTerm x_354 = null;
        w_351 = term;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consamb_1 != ((IStrategoAppl)term).getConstructor())
          break Fail800;
        u_351 = term.getSubterm(0);
        x_354 = term;
        IStrategoTerm term784 = term;
        Success668:
        { 
          Fail801:
          { 
            IStrategoTerm a_355 = null;
            IStrategoTerm e_355 = null;
            IStrategoTerm h_352 = null;
            IStrategoTerm j_352 = null;
            IStrategoTerm k_352 = null;
            IStrategoTerm b_355 = null;
            IStrategoTerm r_352 = null;
            IStrategoTerm t_352 = null;
            IStrategoTerm u_352 = null;
            IStrategoTerm c_355 = null;
            IStrategoTerm z_352 = null;
            IStrategoTerm b_353 = null;
            IStrategoTerm c_353 = null;
            IStrategoTerm h_353 = null;
            IStrategoTerm j_353 = null;
            IStrategoTerm k_353 = null;
            IStrategoTerm k_355 = null;
            IStrategoTerm o_355 = null;
            IStrategoTerm r_353 = null;
            IStrategoTerm t_353 = null;
            IStrategoTerm u_353 = null;
            IStrategoTerm l_355 = null;
            IStrategoTerm b_354 = null;
            IStrategoTerm d_354 = null;
            IStrategoTerm e_354 = null;
            IStrategoTerm m_355 = null;
            IStrategoTerm j_354 = null;
            IStrategoTerm l_354 = null;
            IStrategoTerm m_354 = null;
            IStrategoTerm r_354 = null;
            IStrategoTerm t_354 = null;
            IStrategoTerm u_354 = null;
            IStrategoTerm t_355 = null;
            term = randomly_pick_from_list_0_0.instance.invoke(context, u_351);
            if(term == null)
              break Fail801;
            y_351 = term;
            term = newname_0_0.instance.invoke(context, random_test.const412);
            if(term == null)
              break Fail801;
            v_351 = term;
            e_355 = term;
            term = random_test.const404;
            IStrategoTerm term785 = term;
            Success669:
            { 
              Fail802:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail802;
                if(true)
                  break Success669;
              }
              term = term785;
              IStrategoTerm term786 = term;
              Success670:
              { 
                Fail803:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail803;
                  if(true)
                    break Success670;
                }
                term = term786;
                IStrategoTerm term787 = term;
                Success671:
                { 
                  Fail804:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail804;
                    if(true)
                      break Success671;
                  }
                  term = term787;
                  IStrategoTerm term788 = term;
                  Success672:
                  { 
                    Fail805:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail805;
                      if(true)
                        break Success672;
                    }
                    term = term788;
                    IStrategoTerm d_352 = null;
                    IStrategoTerm e_352 = null;
                    IStrategoTerm g_352 = null;
                    d_352 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    e_352 = ((IStrategoList)term).tail();
                    g_352 = e_352;
                    term = report_failure_0_2.instance.invoke(context, g_352, random_test.const413, d_352);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            j_352 = term;
            h_352 = random_test.const8;
            k_352 = j_352;
            term = string_replace_0_2.instance.invoke(context, k_352, h_352, random_test.const8);
            if(term == null)
              break Fail801;
            a_355 = term;
            term = e_355;
            term = $Language_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail801;
            IStrategoTerm term789 = term;
            Success673:
            { 
              Fail806:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail806;
                if(true)
                  break Success673;
              }
              term = term789;
              IStrategoTerm term790 = term;
              Success674:
              { 
                Fail807:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail807;
                  if(true)
                    break Success674;
                }
                term = term790;
                IStrategoTerm term791 = term;
                Success675:
                { 
                  Fail808:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail808;
                    if(true)
                      break Success675;
                  }
                  term = term791;
                  IStrategoTerm term792 = term;
                  Success676:
                  { 
                    Fail809:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail809;
                      if(true)
                        break Success676;
                    }
                    term = term792;
                    IStrategoTerm n_352 = null;
                    IStrategoTerm o_352 = null;
                    IStrategoTerm q_352 = null;
                    n_352 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    o_352 = ((IStrategoList)term).tail();
                    q_352 = o_352;
                    term = report_failure_0_2.instance.invoke(context, q_352, random_test.const413, n_352);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            t_352 = term;
            r_352 = random_test.const8;
            u_352 = t_352;
            term = string_replace_0_2.instance.invoke(context, u_352, r_352, random_test.const372);
            if(term == null)
              break Fail801;
            b_355 = term;
            term = t_351;
            IStrategoTerm term793 = term;
            Success677:
            { 
              Fail810:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail810;
                if(true)
                  break Success677;
              }
              term = term793;
              IStrategoTerm term794 = term;
              Success678:
              { 
                Fail811:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail811;
                  if(true)
                    break Success678;
                }
                term = term794;
                IStrategoTerm term795 = term;
                Success679:
                { 
                  Fail812:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail812;
                    if(true)
                      break Success679;
                  }
                  term = term795;
                  IStrategoTerm term796 = term;
                  Success680:
                  { 
                    Fail813:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail813;
                      if(true)
                        break Success680;
                    }
                    term = term796;
                    IStrategoTerm v_352 = null;
                    IStrategoTerm w_352 = null;
                    IStrategoTerm y_352 = null;
                    v_352 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    w_352 = ((IStrategoList)term).tail();
                    y_352 = w_352;
                    term = report_failure_0_2.instance.invoke(context, y_352, random_test.const413, v_352);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            b_353 = term;
            z_352 = random_test.const8;
            c_353 = b_353;
            term = string_replace_0_2.instance.invoke(context, c_353, z_352, random_test.const393);
            if(term == null)
              break Fail801;
            c_355 = term;
            term = v_351;
            IStrategoTerm term797 = term;
            Success681:
            { 
              Fail814:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail814;
                if(true)
                  break Success681;
              }
              term = term797;
              IStrategoTerm term798 = term;
              Success682:
              { 
                Fail815:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail815;
                  if(true)
                    break Success682;
                }
                term = term798;
                IStrategoTerm term799 = term;
                Success683:
                { 
                  Fail816:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail816;
                    if(true)
                      break Success683;
                  }
                  term = term799;
                  IStrategoTerm term800 = term;
                  Success684:
                  { 
                    Fail817:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail817;
                      if(true)
                        break Success684;
                    }
                    term = term800;
                    IStrategoTerm d_353 = null;
                    IStrategoTerm e_353 = null;
                    IStrategoTerm g_353 = null;
                    d_353 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    e_353 = ((IStrategoList)term).tail();
                    g_353 = e_353;
                    term = report_failure_0_2.instance.invoke(context, g_353, random_test.const413, d_353);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            j_353 = term;
            h_353 = random_test.const8;
            k_353 = j_353;
            term = string_replace_0_2.instance.invoke(context, k_353, h_353, random_test.const414);
            if(term == null)
              break Fail801;
            term = (IStrategoTerm)termFactory.makeListCons(a_355, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(b_355, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(c_355, termFactory.makeListCons(random_test.const416, termFactory.makeListCons(term, (IStrategoList)random_test.constCons70)))))));
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail801;
            term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
            x_351 = term;
            o_355 = term;
            term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail801;
            IStrategoTerm term801 = term;
            Success685:
            { 
              Fail818:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail818;
                if(true)
                  break Success685;
              }
              term = term801;
              IStrategoTerm term802 = term;
              Success686:
              { 
                Fail819:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail819;
                  if(true)
                    break Success686;
                }
                term = term802;
                IStrategoTerm term803 = term;
                Success687:
                { 
                  Fail820:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail820;
                    if(true)
                      break Success687;
                  }
                  term = term803;
                  IStrategoTerm term804 = term;
                  Success688:
                  { 
                    Fail821:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail821;
                      if(true)
                        break Success688;
                    }
                    term = term804;
                    IStrategoTerm n_353 = null;
                    IStrategoTerm o_353 = null;
                    IStrategoTerm q_353 = null;
                    n_353 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    o_353 = ((IStrategoList)term).tail();
                    q_353 = o_353;
                    term = report_failure_0_2.instance.invoke(context, q_353, random_test.const413, n_353);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            t_353 = term;
            r_353 = random_test.const8;
            u_353 = t_353;
            term = string_replace_0_2.instance.invoke(context, u_353, r_353, random_test.const8);
            if(term == null)
              break Fail801;
            k_355 = term;
            term = o_355;
            term = $Language_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail801;
            IStrategoTerm term805 = term;
            Success689:
            { 
              Fail822:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail822;
                if(true)
                  break Success689;
              }
              term = term805;
              IStrategoTerm term806 = term;
              Success690:
              { 
                Fail823:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail823;
                  if(true)
                    break Success690;
                }
                term = term806;
                IStrategoTerm term807 = term;
                Success691:
                { 
                  Fail824:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail824;
                    if(true)
                      break Success691;
                  }
                  term = term807;
                  IStrategoTerm term808 = term;
                  Success692:
                  { 
                    Fail825:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail825;
                      if(true)
                        break Success692;
                    }
                    term = term808;
                    IStrategoTerm x_353 = null;
                    IStrategoTerm y_353 = null;
                    IStrategoTerm a_354 = null;
                    x_353 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    y_353 = ((IStrategoList)term).tail();
                    a_354 = y_353;
                    term = report_failure_0_2.instance.invoke(context, a_354, random_test.const413, x_353);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            d_354 = term;
            b_354 = random_test.const8;
            e_354 = d_354;
            term = string_replace_0_2.instance.invoke(context, e_354, b_354, random_test.const372);
            if(term == null)
              break Fail801;
            l_355 = term;
            term = t_351;
            IStrategoTerm term809 = term;
            Success693:
            { 
              Fail826:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail826;
                if(true)
                  break Success693;
              }
              term = term809;
              IStrategoTerm term810 = term;
              Success694:
              { 
                Fail827:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail827;
                  if(true)
                    break Success694;
                }
                term = term810;
                IStrategoTerm term811 = term;
                Success695:
                { 
                  Fail828:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail828;
                    if(true)
                      break Success695;
                  }
                  term = term811;
                  IStrategoTerm term812 = term;
                  Success696:
                  { 
                    Fail829:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail829;
                      if(true)
                        break Success696;
                    }
                    term = term812;
                    IStrategoTerm f_354 = null;
                    IStrategoTerm g_354 = null;
                    IStrategoTerm i_354 = null;
                    f_354 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    g_354 = ((IStrategoList)term).tail();
                    i_354 = g_354;
                    term = report_failure_0_2.instance.invoke(context, i_354, random_test.const413, f_354);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            l_354 = term;
            j_354 = random_test.const8;
            m_354 = l_354;
            term = string_replace_0_2.instance.invoke(context, m_354, j_354, random_test.const393);
            if(term == null)
              break Fail801;
            m_355 = term;
            term = v_351;
            IStrategoTerm term813 = term;
            Success697:
            { 
              Fail830:
              { 
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail830;
                if(true)
                  break Success697;
              }
              term = term813;
              IStrategoTerm term814 = term;
              Success698:
              { 
                Fail831:
                { 
                  term = is_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail831;
                  if(true)
                    break Success698;
                }
                term = term814;
                IStrategoTerm term815 = term;
                Success699:
                { 
                  Fail832:
                  { 
                    term = int_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail832;
                    if(true)
                      break Success699;
                  }
                  term = term815;
                  IStrategoTerm term816 = term;
                  Success700:
                  { 
                    Fail833:
                    { 
                      term = real_to_string_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail833;
                      if(true)
                        break Success700;
                    }
                    term = term816;
                    IStrategoTerm n_354 = null;
                    IStrategoTerm o_354 = null;
                    IStrategoTerm q_354 = null;
                    n_354 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail801;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail801;
                    o_354 = ((IStrategoList)term).tail();
                    q_354 = o_354;
                    term = report_failure_0_2.instance.invoke(context, q_354, random_test.const413, n_354);
                    if(term == null)
                      break Fail801;
                  }
                }
              }
            }
            t_354 = term;
            r_354 = random_test.const8;
            u_354 = t_354;
            term = string_replace_0_2.instance.invoke(context, u_354, r_354, random_test.const414);
            if(term == null)
              break Fail801;
            term = (IStrategoTerm)termFactory.makeListCons(k_355, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(l_355, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(m_355, termFactory.makeListCons(random_test.const416, termFactory.makeListCons(term, (IStrategoList)random_test.constCons71)))))));
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail801;
            term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
            a_352 = term;
            term = debug_0_0.instance.invoke(context, random_test.const418);
            if(term == null)
              break Fail801;
            term = pp_aterm_box_0_0.instance.invoke(context, w_351);
            if(term == null)
              break Fail801;
            t_355 = term;
            term = box2text_string_0_1.instance.invoke(context, t_355, random_test.const398);
            if(term == null)
              break Fail801;
            term = write_log_0_1.instance.invoke(context, term, x_351);
            if(term == null)
              break Fail801;
            term = debug_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail801;
            term = pp_amb_0_0.instance.invoke(context, y_351);
            if(term == null)
              break Fail801;
            term = write_log_0_1.instance.invoke(context, term, a_352);
            if(term == null)
              break Fail801;
            if(true)
              break Success668;
          }
          term = term784;
          IStrategoTerm v_354 = null;
          IStrategoTerm w_354 = null;
          IStrategoTerm v_355 = null;
          v_354 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail800;
          w_354 = term;
          v_355 = v_354;
          term = report_with_failure_0_2.instance.invoke(context, v_355, random_test.const419, w_354);
          if(term == null)
            break Fail800;
        }
        term = x_354;
        if(y_351 == null)
          break Fail800;
        term = y_351;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class pp_amb_0_0 extends Strategy 
  { 
    public static pp_amb_0_0 instance = new pp_amb_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("pp_amb_0_0");
      Fail834:
      { 
        IStrategoTerm term817 = term;
        Success701:
        { 
          Fail835:
          { 
            IStrategoTerm a_357 = null;
            IStrategoTerm b_357 = null;
            IStrategoTerm e_357 = null;
            IStrategoTerm cons32 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            if(cons32.getTermType() != IStrategoTerm.STRING || !"amb".equals(((IStrategoString)cons32).stringValue()))
              break Fail835;
            IStrategoTerm args31 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
            a_357 = args31;
            e_357 = term;
            IStrategoTerm term818 = term;
            Success702:
            { 
              Fail836:
              { 
                term = map_1_0.instance.invoke(context, a_357, pp_amb_0_0.instance);
                if(term == null)
                  break Fail836;
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail836;
                b_357 = term;
                if(true)
                  break Success702;
              }
              term = term818;
              IStrategoTerm c_357 = null;
              IStrategoTerm d_357 = null;
              IStrategoTerm g_357 = null;
              c_357 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail835;
              d_357 = term;
              g_357 = c_357;
              term = report_with_failure_0_2.instance.invoke(context, g_357, random_test.const420, d_357);
              if(term == null)
                break Fail835;
            }
            term = e_357;
            if(b_357 == null)
              break Fail835;
            term = b_357;
            if(true)
              break Success701;
          }
          term = term817;
          IStrategoTerm term819 = term;
          Success703:
          { 
            Fail837:
            { 
              IStrategoTerm r_356 = null;
              IStrategoTerm s_356 = null;
              IStrategoTerm v_356 = null;
              r_356 = term;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail837;
              v_356 = term;
              IStrategoTerm term820 = term;
              Success704:
              { 
                Fail838:
                { 
                  term = map_1_0.instance.invoke(context, r_356, pp_amb_0_0.instance);
                  if(term == null)
                    break Fail838;
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail838;
                  s_356 = term;
                  if(true)
                    break Success704;
                }
                term = term820;
                IStrategoTerm t_356 = null;
                IStrategoTerm u_356 = null;
                IStrategoTerm x_356 = null;
                t_356 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail837;
                u_356 = term;
                x_356 = t_356;
                term = report_with_failure_0_2.instance.invoke(context, x_356, random_test.const420, u_356);
                if(term == null)
                  break Fail837;
              }
              term = v_356;
              if(s_356 == null)
                break Fail837;
              term = s_356;
              if(true)
                break Success703;
            }
            term = term819;
            IStrategoTerm term821 = term;
            Success705:
            { 
              Fail839:
              { 
                IStrategoTerm f_356 = null;
                IStrategoTerm g_356 = null;
                IStrategoTerm j_356 = null;
                IStrategoTerm k_356 = null;
                f_356 = term;
                j_356 = term;
                IStrategoTerm term822 = term;
                Success706:
                { 
                  Fail840:
                  { 
                    term = is_string_0_0.instance.invoke(context, f_356);
                    if(term == null)
                      break Fail840;
                    { 
                      if(true)
                        break Fail839;
                      if(true)
                        break Success706;
                    }
                  }
                  term = term822;
                }
                IStrategoTerm term823 = term;
                Success707:
                { 
                  Fail841:
                  { 
                    term = is_list_0_0.instance.invoke(context, f_356);
                    if(term == null)
                      break Fail841;
                    { 
                      if(true)
                        break Fail839;
                      if(true)
                        break Success707;
                    }
                  }
                  term = term823;
                }
                term = j_356;
                k_356 = j_356;
                IStrategoTerm term824 = term;
                Success708:
                { 
                  Fail842:
                  { 
                    term = pp_program_0_0.instance.invoke(context, f_356);
                    if(term == null)
                      break Fail842;
                    g_356 = term;
                    if(true)
                      break Success708;
                  }
                  term = term824;
                  IStrategoTerm h_356 = null;
                  IStrategoTerm i_356 = null;
                  IStrategoTerm m_356 = null;
                  h_356 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail839;
                  i_356 = term;
                  m_356 = h_356;
                  term = report_with_failure_0_2.instance.invoke(context, m_356, random_test.const420, i_356);
                  if(term == null)
                    break Fail839;
                }
                term = k_356;
                if(g_356 == null)
                  break Fail839;
                term = g_356;
                if(true)
                  break Success705;
              }
              term = term821;
              IStrategoTerm term825 = term;
              Success709:
              { 
                Fail843:
                { 
                  IStrategoTerm z_355 = null;
                  z_355 = term;
                  term = is_string_0_0.instance.invoke(context, z_355);
                  if(term == null)
                    break Fail843;
                  term = z_355;
                  if(true)
                    break Success709;
                }
                term = term825;
                IStrategoTerm w_355 = null;
                w_355 = term;
                term = is_int_0_0.instance.invoke(context, w_355);
                if(term == null)
                  break Fail834;
                term = write_to_string_0_0.instance.invoke(context, w_355);
                if(term == null)
                  break Fail834;
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class randomly_pick_from_list_0_0 extends Strategy 
  { 
    public static randomly_pick_from_list_0_0 instance = new randomly_pick_from_list_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("randomly_pick_from_list_0_0");
      Fail844:
      { 
        IStrategoTerm j_357 = null;
        IStrategoTerm l_357 = null;
        IStrategoTerm m_357 = null;
        IStrategoTerm p_357 = null;
        l_357 = term;
        p_357 = term;
        IStrategoTerm term826 = term;
        Success710:
        { 
          Fail845:
          { 
            term = length_0_0.instance.invoke(context, l_357);
            if(term == null)
              break Fail845;
            j_357 = term;
            term = next_random_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail845;
            term = abs_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail845;
            term = termFactory.makeTuple(term, j_357);
            term = mod_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail845;
            term = get_item_from_list_0_1.instance.invoke(context, l_357, term);
            if(term == null)
              break Fail845;
            m_357 = term;
            if(true)
              break Success710;
          }
          term = term826;
          IStrategoTerm n_357 = null;
          IStrategoTerm o_357 = null;
          IStrategoTerm t_357 = null;
          n_357 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail844;
          o_357 = term;
          t_357 = n_357;
          term = report_with_failure_0_2.instance.invoke(context, t_357, random_test.const421, o_357);
          if(term == null)
            break Fail844;
        }
        term = p_357;
        if(m_357 == null)
          break Fail844;
        term = m_357;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_item_from_list_0_1 extends Strategy 
  { 
    public static get_item_from_list_0_1 instance = new get_item_from_list_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm u_357)
    { 
      context.push("get_item_from_list_0_1");
      Fail846:
      { 
        IStrategoTerm v_357 = null;
        v_357 = term;
        term = write_loop_iterator_0_0.instance.invoke(context, u_357);
        if(term == null)
          break Fail846;
        term = while_2_0.instance.invoke(context, v_357, get_item_from_list_loopc_0_0.instance, $Tl_0_0.instance);
        if(term == null)
          break Fail846;
        term = $Hd_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail846;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_item_from_list_loopc_0_0 extends Strategy 
  { 
    public static get_item_from_list_loopc_0_0 instance = new get_item_from_list_loopc_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("get_item_from_list_loopc_0_0");
      Fail847:
      { 
        IStrategoTerm w_357 = null;
        w_357 = term;
        IStrategoTerm term827 = term;
        Success711:
        { 
          Fail848:
          { 
            term = $Loop$Iterator_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail848;
            term = termFactory.makeTuple(term, random_test.const58);
            term = eq_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail848;
            { 
              if(true)
                break Fail847;
              if(true)
                break Success711;
            }
          }
          term = term827;
        }
        term = $Loop$Iterator_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail847;
        term = termFactory.makeTuple(term, random_test.const186);
        term = subti_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail847;
        term = write_loop_iterator_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail847;
        term = w_357;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_loop_iterator_0_0 extends Strategy 
  { 
    public static write_loop_iterator_0_0 instance = new write_loop_iterator_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_loop_iterator_0_0");
      Fail849:
      { 
        IStrategoTerm c_358 = null;
        IStrategoTerm d_358 = null;
        IStrategoTerm e_358 = null;
        IStrategoTerm g_358 = null;
        IStrategoTerm h_358 = null;
        IStrategoTerm j_358 = null;
        IStrategoTerm k_358 = null;
        IStrategoTerm l_358 = null;
        c_358 = term;
        d_358 = term;
        term = c_358;
        e_358 = c_358;
        j_358 = term;
        g_358 = random_test.const422;
        k_358 = j_358;
        h_358 = random_test.constCons0;
        l_358 = k_358;
        term = termFactory.makeTuple(random_test.const423, e_358);
        term = dr_set_rule_0_3.instance.invoke(context, l_358, g_358, h_358, term);
        if(term == null)
          break Fail849;
        term = d_358;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class read_language_0_0 extends Strategy 
  { 
    public static read_language_0_0 instance = new read_language_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("read_language_0_0");
      Fail850:
      { 
        IStrategoTerm l_359 = null;
        IStrategoTerm n_359 = null;
        IStrategoTerm v_358 = null;
        IStrategoTerm x_358 = null;
        IStrategoTerm y_358 = null;
        IStrategoTerm f_359 = null;
        IStrategoTerm h_359 = null;
        IStrategoTerm i_359 = null;
        n_359 = term;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail850;
        IStrategoTerm term828 = term;
        Success712:
        { 
          Fail851:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail851;
            if(true)
              break Success712;
          }
          term = term828;
          IStrategoTerm term829 = term;
          Success713:
          { 
            Fail852:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail852;
              if(true)
                break Success713;
            }
            term = term829;
            IStrategoTerm term830 = term;
            Success714:
            { 
              Fail853:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail853;
                if(true)
                  break Success714;
              }
              term = term830;
              IStrategoTerm term831 = term;
              Success715:
              { 
                Fail854:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail854;
                  if(true)
                    break Success715;
                }
                term = term831;
                IStrategoTerm r_358 = null;
                IStrategoTerm s_358 = null;
                IStrategoTerm u_358 = null;
                r_358 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail850;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail850;
                s_358 = ((IStrategoList)term).tail();
                u_358 = s_358;
                term = report_failure_0_2.instance.invoke(context, u_358, random_test.const424, r_358);
                if(term == null)
                  break Fail850;
              }
            }
          }
        }
        x_358 = term;
        v_358 = random_test.const8;
        y_358 = x_358;
        term = string_replace_0_2.instance.invoke(context, y_358, v_358, random_test.const9);
        if(term == null)
          break Fail850;
        l_359 = term;
        term = n_359;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail850;
        IStrategoTerm term832 = term;
        Success716:
        { 
          Fail855:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail855;
            if(true)
              break Success716;
          }
          term = term832;
          IStrategoTerm term833 = term;
          Success717:
          { 
            Fail856:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail856;
              if(true)
                break Success717;
            }
            term = term833;
            IStrategoTerm term834 = term;
            Success718:
            { 
              Fail857:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail857;
                if(true)
                  break Success718;
              }
              term = term834;
              IStrategoTerm term835 = term;
              Success719:
              { 
                Fail858:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail858;
                  if(true)
                    break Success719;
                }
                term = term835;
                IStrategoTerm b_359 = null;
                IStrategoTerm c_359 = null;
                IStrategoTerm e_359 = null;
                b_359 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail850;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail850;
                c_359 = ((IStrategoList)term).tail();
                e_359 = c_359;
                term = report_failure_0_2.instance.invoke(context, e_359, random_test.const424, b_359);
                if(term == null)
                  break Fail850;
              }
            }
          }
        }
        h_359 = term;
        f_359 = random_test.const8;
        i_359 = h_359;
        term = string_replace_0_2.instance.invoke(context, i_359, f_359, random_test.const10);
        if(term == null)
          break Fail850;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const13, termFactory.makeListCons(l_359, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constCons1))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail850;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = parse_sdf_definition_file_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail850;
        term = sdf_parsefix_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail850;
        term = read_sdf_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail850;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class clear_fix_runtag_0_0 extends Strategy 
  { 
    public static clear_fix_runtag_0_0 instance = new clear_fix_runtag_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("clear_fix_runtag_0_0");
      Fail859:
      { 
        term = write_$Fix$Runtag_0_0.instance.invoke(context, random_test.const58);
        if(term == null)
          break Fail859;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class inc_fix_runtag_0_0 extends Strategy 
  { 
    public static inc_fix_runtag_0_0 instance = new inc_fix_runtag_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("inc_fix_runtag_0_0");
      Fail860:
      { 
        IStrategoTerm p_359 = null;
        IStrategoTerm q_359 = null;
        term = $Fix$Runtag_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail860;
        term = inc_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail860;
        q_359 = term;
        p_359 = term;
        term = write_$Fix$Runtag_0_0.instance.invoke(context, q_359);
        if(term == null)
          break Fail860;
        term = p_359;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_$Fix$Runtag_0_0 extends Strategy 
  { 
    public static write_$Fix$Runtag_0_0 instance = new write_$Fix$Runtag_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_FixRuntag_0_0");
      Fail861:
      { 
        IStrategoTerm t_359 = null;
        IStrategoTerm u_359 = null;
        IStrategoTerm v_359 = null;
        IStrategoTerm x_359 = null;
        IStrategoTerm y_359 = null;
        IStrategoTerm a_360 = null;
        IStrategoTerm b_360 = null;
        IStrategoTerm c_360 = null;
        t_359 = term;
        u_359 = term;
        term = t_359;
        v_359 = t_359;
        a_360 = term;
        x_359 = random_test.const425;
        b_360 = a_360;
        y_359 = random_test.constCons0;
        c_360 = b_360;
        term = termFactory.makeTuple(random_test.const426, v_359);
        term = dr_set_rule_0_3.instance.invoke(context, c_360, x_359, y_359, term);
        if(term == null)
          break Fail861;
        term = u_359;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class find_start_symbols_0_0 extends Strategy 
  { 
    public static find_start_symbols_0_0 instance = new find_start_symbols_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("find_start_symbols_0_0");
      Fail862:
      { 
        IStrategoTerm g_360 = null;
        IStrategoTerm h_360 = null;
        TermReference i_360 = new TermReference();
        g_360 = term;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conscontext_free_start_symbols_1 != ((IStrategoAppl)term).getConstructor())
          break Fail862;
        h_360 = term.getSubterm(0);
        IStrategoTerm term836 = term;
        Success720:
        { 
          Fail863:
          { 
            term = h_360;
            lifted517 lifted5170 = new lifted517();
            lifted5170.i_360 = i_360;
            term = map_1_0.instance.invoke(context, term, lifted5170);
            if(term == null)
              break Fail863;
            if(true)
              break Success720;
          }
          term = term836;
          IStrategoTerm k_360 = null;
          IStrategoTerm l_360 = null;
          IStrategoTerm s_360 = null;
          k_360 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail862;
          l_360 = term;
          s_360 = k_360;
          term = report_with_failure_0_2.instance.invoke(context, s_360, random_test.const429, l_360);
          if(term == null)
            break Fail862;
        }
        term = g_360;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class read_sdf_0_0 extends Strategy 
  { 
    public static read_sdf_0_0 instance = new read_sdf_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("read_sdf_0_0");
      Fail864:
      { 
        TermReference u_360 = new TermReference();
        IStrategoTerm v_360 = null;
        IStrategoTerm w_360 = null;
        IStrategoTerm y_360 = null;
        IStrategoTerm e_361 = null;
        IStrategoTerm f_361 = null;
        IStrategoTerm h_361 = null;
        IStrategoTerm i_361 = null;
        IStrategoTerm j_361 = null;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consdefinition_1 != ((IStrategoAppl)term).getConstructor())
          break Fail864;
        w_360 = term.getSubterm(0);
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail864;
        if(u_360.value == null)
          u_360.value = term;
        else
          if(u_360.value != term && !u_360.value.match(term))
            break Fail864;
        Success721:
        { 
          Fail865:
          { 
            IStrategoTerm x_360 = null;
            IStrategoTerm b_361 = null;
            x_360 = term;
            term = w_360;
            lifted518 lifted5180 = new lifted518();
            lifted5180.u_360 = u_360;
            term = filter_1_0.instance.invoke(context, term, lifted5180);
            if(term == null)
              break Fail865;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail865;
            b_361 = ((IStrategoList)term).head();
            IStrategoTerm arg301 = ((IStrategoList)term).tail();
            if(arg301.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg301).isEmpty())
              break Fail865;
            v_360 = b_361;
            term = x_360;
            { 
              IStrategoTerm d_361 = null;
              term = sometd_1_0.instance.invoke(context, v_360, find_start_symbols_0_0.instance);
              if(term == null)
                break Fail864;
              d_361 = v_360;
              term = topdown_read_sdf_0_2.instance.invoke(context, d_361, w_360, random_test.const430);
              if(term == null)
                break Fail864;
              if(true)
                break Success721;
            }
          }
          term = debug_0_0.instance.invoke(context, random_test.const431);
          if(term == null)
            break Fail864;
        }
        term = propagate_priorities_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail864;
        y_360 = term;
        h_361 = term;
        e_361 = random_test.const432;
        i_361 = h_361;
        f_361 = random_test.const273;
        j_361 = i_361;
        term = dr_set_rule_0_3.instance.invoke(context, j_361, e_361, f_361, random_test.const433);
        if(term == null)
          break Fail864;
        term = y_360;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class read_priorities_0_0 extends Strategy 
  { 
    public static read_priorities_0_0 instance = new read_priorities_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("read_priorities_0_0");
      Fail866:
      { 
        IStrategoTerm m_361 = null;
        IStrategoTerm n_361 = null;
        m_361 = term;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conscontext_free_priorities_1 != ((IStrategoAppl)term).getConstructor())
          break Fail866;
        n_361 = term.getSubterm(0);
        IStrategoTerm term838 = term;
        Success722:
        { 
          Fail867:
          { 
            term = map_1_0.instance.invoke(context, n_361, lifted522.instance);
            if(term == null)
              break Fail867;
            if(true)
              break Success722;
          }
          term = term838;
          IStrategoTerm p_361 = null;
          IStrategoTerm q_361 = null;
          IStrategoTerm t_361 = null;
          p_361 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail866;
          q_361 = term;
          t_361 = p_361;
          term = report_with_failure_0_2.instance.invoke(context, t_361, random_test.const434, q_361);
          if(term == null)
            break Fail866;
        }
        term = m_361;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class propagate_priorities_0_0 extends Strategy 
  { 
    public static propagate_priorities_0_0 instance = new propagate_priorities_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("propagate_priorities_0_0");
      Fail868:
      { 
        IStrategoTerm v_361 = null;
        IStrategoTerm b_362 = null;
        term = all_keys_$Priority_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail868;
        term = filter_1_0.instance.invoke(context, term, lifted523.instance);
        if(term == null)
          break Fail868;
        b_362 = term;
        term = propagate_priorities_rec_0_0.instance.invoke(context, b_362);
        if(term == null)
          break Fail868;
        v_361 = term;
        IStrategoTerm term839 = term;
        Success723:
        { 
          Fail869:
          { 
            IStrategoTerm w_361 = null;
            w_361 = term;
            IStrategoTerm term840 = term;
            Success724:
            { 
              Fail870:
              { 
                term = v_361;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail870;
                { 
                  if(true)
                    break Fail869;
                  if(true)
                    break Success724;
                }
              }
              term = term840;
            }
            term = w_361;
            { 
              term = map_1_0.instance.invoke(context, v_361, lifted524.instance);
              if(term == null)
                break Fail868;
              term = this.invoke(context, term);
              if(term == null)
                break Fail868;
              if(true)
                break Success723;
            }
          }
          term = term839;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class propagate_priorities_rec_0_0 extends Strategy 
  { 
    public static propagate_priorities_rec_0_0 instance = new propagate_priorities_rec_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("propagate_priorities_rec_0_0");
      Fail871:
      { 
        IStrategoTerm term841 = term;
        Success725:
        { 
          Fail872:
          { 
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail872;
            term = random_test.constNil0;
            if(true)
              break Success725;
          }
          term = term841;
          IStrategoTerm f_362 = null;
          TermReference g_362 = new TermReference();
          TermReference h_362 = new TermReference();
          TermReference i_362 = new TermReference();
          IStrategoTerm j_362 = null;
          IStrategoTerm k_362 = null;
          IStrategoTerm l_362 = null;
          IStrategoTerm w_362 = null;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail871;
          f_362 = ((IStrategoList)term).head();
          k_362 = ((IStrategoList)term).tail();
          w_362 = term;
          IStrategoTerm term842 = term;
          Success726:
          { 
            Fail873:
            { 
              term = bagof_$Priority_0_0.instance.invoke(context, f_362);
              if(term == null)
                break Fail873;
              if(g_362.value == null)
                g_362.value = term;
              else
                if(g_362.value != term && !g_362.value.match(term))
                  break Fail873;
              term = f_362;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
                break Fail873;
              if(h_362.value == null)
                h_362.value = term.getSubterm(0);
              else
                if(h_362.value != term.getSubterm(0) && !h_362.value.match(term.getSubterm(0)))
                  break Fail873;
              if(i_362.value == null)
                i_362.value = term.getSubterm(1);
              else
                if(i_362.value != term.getSubterm(1) && !i_362.value.match(term.getSubterm(1)))
                  break Fail873;
              if(g_362.value == null)
                break Fail873;
              term = g_362.value;
              lifted525 lifted5250 = new lifted525();
              lifted5250.g_362 = g_362;
              lifted5250.h_362 = h_362;
              lifted5250.i_362 = i_362;
              term = map_1_0.instance.invoke(context, term, lifted5250);
              if(term == null)
                break Fail873;
              term = concat_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail873;
              term = nub_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail873;
              j_362 = term;
              term = this.invoke(context, k_362);
              if(term == null)
                break Fail873;
              term = termFactory.makeTuple(j_362, term);
              term = conc_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail873;
              l_362 = term;
              if(true)
                break Success726;
            }
            term = term842;
            IStrategoTerm u_362 = null;
            IStrategoTerm v_362 = null;
            IStrategoTerm a_363 = null;
            u_362 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail871;
            v_362 = term;
            a_363 = u_362;
            term = report_with_failure_0_2.instance.invoke(context, a_363, random_test.const437, v_362);
            if(term == null)
              break Fail871;
          }
          term = w_362;
          if(l_362 == null)
            break Fail871;
          term = l_362;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class write_$Priority_rule_0_0 extends Strategy 
  { 
    public static write_$Priority_rule_0_0 instance = new write_$Priority_rule_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("write_Priority_rule_0_0");
      Fail874:
      { 
        IStrategoTerm c_363 = null;
        IStrategoTerm d_363 = null;
        IStrategoTerm e_363 = null;
        IStrategoTerm f_363 = null;
        IStrategoTerm g_363 = null;
        IStrategoTerm l_363 = null;
        IStrategoTerm m_363 = null;
        IStrategoTerm n_363 = null;
        IStrategoTerm p_363 = null;
        IStrategoTerm q_363 = null;
        IStrategoTerm r_363 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 5)
          break Fail874;
        c_363 = term.getSubterm(0);
        d_363 = term.getSubterm(1);
        e_363 = term.getSubterm(2);
        f_363 = term.getSubterm(3);
        g_363 = term.getSubterm(4);
        IStrategoTerm term845 = term;
        Success727:
        { 
          Fail875:
          { 
            IStrategoTerm h_363 = null;
            h_363 = term;
            term = d_363;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)term).getConstructor())
              break Fail875;
            term = h_363;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const438);
              if(term == null)
                break Fail874;
              if(true)
                break Success727;
            }
          }
          term = term845;
        }
        IStrategoTerm term846 = term;
        Success728:
        { 
          Fail876:
          { 
            IStrategoTerm i_363 = null;
            i_363 = term;
            term = d_363;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_sort_2 != ((IStrategoAppl)term).getConstructor())
              break Fail876;
            term = i_363;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const439);
              if(term == null)
                break Fail874;
              if(true)
                break Success728;
            }
          }
          term = term846;
        }
        IStrategoTerm term847 = term;
        Success729:
        { 
          Fail877:
          { 
            IStrategoTerm j_363 = null;
            j_363 = term;
            term = g_363;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)term).getConstructor())
              break Fail877;
            term = j_363;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const440);
              if(term == null)
                break Fail874;
              if(true)
                break Success729;
            }
          }
          term = term847;
        }
        IStrategoTerm term848 = term;
        Success730:
        { 
          Fail878:
          { 
            IStrategoTerm k_363 = null;
            k_363 = term;
            term = g_363;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_sort_2 != ((IStrategoAppl)term).getConstructor())
              break Fail878;
            term = k_363;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const441);
              if(term == null)
                break Fail874;
              if(true)
                break Success730;
            }
          }
          term = term848;
        }
        l_363 = term;
        p_363 = term;
        m_363 = random_test.const442;
        q_363 = p_363;
        term = termFactory.annotateTerm(termFactory.makeTuple(c_363, d_363, e_363), checkListAnnos(termFactory, random_test.constCons0));
        n_363 = term;
        r_363 = q_363;
        term = termFactory.makeTuple(random_test.const443, f_363, g_363);
        term = dr_add_rule_0_3.instance.invoke(context, r_363, m_363, n_363, term);
        if(term == null)
          break Fail874;
        term = l_363;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class read_priority_0_0 extends Strategy 
  { 
    public static read_priority_0_0 instance = new read_priority_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("read_priority_0_0");
      Fail879:
      { 
        IStrategoTerm term849 = term;
        Success731:
        { 
          Fail880:
          { 
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail880;
            term = random_test.constNil0;
            if(true)
              break Success731;
          }
          term = term849;
          IStrategoTerm term850 = term;
          Success732:
          { 
            Fail881:
            { 
              IStrategoTerm q_365 = null;
              IStrategoTerm r_365 = null;
              IStrategoTerm s_365 = null;
              TermReference t_365 = new TermReference();
              TermReference u_365 = new TermReference();
              IStrategoTerm z_365 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail881;
              IStrategoTerm arg315 = ((IStrategoList)term).head();
              if(arg315.getTermType() != IStrategoTerm.APPL || random_test._conssimple_group_1 != ((IStrategoAppl)arg315).getConstructor())
                break Fail881;
              IStrategoTerm arg316 = arg315.getSubterm(0);
              if(arg316.getTermType() != IStrategoTerm.APPL || random_test._consprod_3 != ((IStrategoAppl)arg316).getConstructor())
                break Fail881;
              if(t_365.value == null)
                t_365.value = arg316.getSubterm(0);
              else
                if(t_365.value != arg316.getSubterm(0) && !t_365.value.match(arg316.getSubterm(0)))
                  break Fail881;
              r_365 = arg316.getSubterm(1);
              q_365 = ((IStrategoList)term).tail();
              z_365 = term;
              IStrategoTerm term851 = term;
              Success733:
              { 
                Fail882:
                { 
                  term = this.invoke(context, q_365);
                  if(term == null)
                    break Fail882;
                  s_365 = term;
                  term = recognize_sort_0_0.instance.invoke(context, r_365);
                  if(term == null)
                    break Fail882;
                  if(u_365.value == null)
                    u_365.value = term;
                  else
                    if(u_365.value != term && !u_365.value.match(term))
                      break Fail882;
                  term = s_365;
                  lifted528 lifted5280 = new lifted528();
                  lifted5280.t_365 = t_365;
                  lifted5280.u_365 = u_365;
                  term = map_1_0.instance.invoke(context, term, lifted5280);
                  if(term == null)
                    break Fail882;
                  if(true)
                    break Success733;
                }
                term = term851;
                IStrategoTerm x_365 = null;
                IStrategoTerm y_365 = null;
                IStrategoTerm d_366 = null;
                x_365 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail881;
                y_365 = term;
                d_366 = x_365;
                term = report_with_failure_0_2.instance.invoke(context, d_366, random_test.const444, y_365);
                if(term == null)
                  break Fail881;
              }
              term = z_365;
              if(t_365.value == null)
                break Fail881;
              term = (IStrategoTerm)termFactory.makeListCons(termFactory.makeTuple(t_365.value, r_365), (IStrategoList)random_test.constNil0);
              if(true)
                break Success732;
            }
            term = term850;
            IStrategoTerm term852 = term;
            Success734:
            { 
              Fail883:
              { 
                IStrategoTerm w_364 = null;
                TermReference x_364 = new TermReference();
                IStrategoTerm y_364 = null;
                IStrategoTerm z_364 = null;
                IStrategoTerm h_365 = null;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail883;
                IStrategoTerm arg317 = ((IStrategoList)term).head();
                if(arg317.getTermType() != IStrategoTerm.APPL || random_test._consprods_group_1 != ((IStrategoAppl)arg317).getConstructor())
                  break Fail883;
                y_364 = arg317.getSubterm(0);
                w_364 = ((IStrategoList)term).tail();
                h_365 = term;
                IStrategoTerm term853 = term;
                Success735:
                { 
                  Fail884:
                  { 
                    term = this.invoke(context, w_364);
                    if(term == null)
                      break Fail884;
                    if(x_364.value == null)
                      x_364.value = term;
                    else
                      if(x_364.value != term && !x_364.value.match(term))
                        break Fail884;
                    term = y_364;
                    lifted529 lifted5290 = new lifted529();
                    lifted5290.x_364 = x_364;
                    term = map_1_0.instance.invoke(context, term, lifted5290);
                    if(term == null)
                      break Fail884;
                    z_364 = term;
                    if(true)
                      break Success735;
                  }
                  term = term853;
                  IStrategoTerm f_365 = null;
                  IStrategoTerm g_365 = null;
                  IStrategoTerm l_365 = null;
                  f_365 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail883;
                  g_365 = term;
                  l_365 = f_365;
                  term = report_with_failure_0_2.instance.invoke(context, l_365, random_test.const444, g_365);
                  if(term == null)
                    break Fail883;
                }
                term = h_365;
                if(z_364 == null)
                  break Fail883;
                term = z_364;
                if(true)
                  break Success734;
              }
              term = term852;
              IStrategoTerm u_363 = null;
              TermReference v_363 = new TermReference();
              TermReference w_363 = new TermReference();
              TermReference x_363 = new TermReference();
              TermReference y_363 = new TermReference();
              IStrategoTerm z_363 = null;
              IStrategoTerm l_364 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail879;
              IStrategoTerm arg319 = ((IStrategoList)term).head();
              if(arg319.getTermType() != IStrategoTerm.APPL || random_test._consassoc_group_2 != ((IStrategoAppl)arg319).getConstructor())
                break Fail879;
              if(x_363.value == null)
                x_363.value = arg319.getSubterm(0);
              else
                if(x_363.value != arg319.getSubterm(0) && !x_363.value.match(arg319.getSubterm(0)))
                  break Fail879;
              if(y_363.value == null)
                y_363.value = arg319.getSubterm(1);
              else
                if(y_363.value != arg319.getSubterm(1) && !y_363.value.match(arg319.getSubterm(1)))
                  break Fail879;
              u_363 = ((IStrategoList)term).tail();
              l_364 = term;
              IStrategoTerm term854 = term;
              Success736:
              { 
                Fail885:
                { 
                  term = this.invoke(context, u_363);
                  if(term == null)
                    break Fail885;
                  if(v_363.value == null)
                    v_363.value = term;
                  else
                    if(v_363.value != term && !v_363.value.match(term))
                      break Fail885;
                  if(y_363.value == null)
                    break Fail885;
                  term = y_363.value;
                  lifted531 lifted5310 = new lifted531();
                  lifted5310.v_363 = v_363;
                  lifted5310.w_363 = w_363;
                  lifted5310.x_363 = x_363;
                  lifted5310.y_363 = y_363;
                  term = map_1_0.instance.invoke(context, term, lifted5310);
                  if(term == null)
                    break Fail885;
                  z_363 = term;
                  if(true)
                    break Success736;
                }
                term = term854;
                IStrategoTerm j_364 = null;
                IStrategoTerm k_364 = null;
                IStrategoTerm t_364 = null;
                j_364 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail879;
                k_364 = term;
                t_364 = j_364;
                term = report_with_failure_0_2.instance.invoke(context, t_364, random_test.const444, k_364);
                if(term == null)
                  break Fail879;
              }
              term = l_364;
              if(z_363 == null)
                break Fail879;
              term = z_363;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class topdown_read_sdf_0_2 extends Strategy 
  { 
    public static topdown_read_sdf_0_2 instance = new topdown_read_sdf_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_f_366, IStrategoTerm g_366)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference f_366 = new TermReference(ref_f_366);
      context.push("topdown_read_sdf_0_2");
      Fail886:
      { 
        IStrategoTerm h_366 = null;
        IStrategoTerm i_366 = null;
        IStrategoTerm j_366 = null;
        IStrategoTerm k_366 = null;
        IStrategoTerm l_366 = null;
        IStrategoTerm m_366 = null;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
          break Fail886;
        h_366 = term.getSubterm(0);
        m_366 = term.getSubterm(1);
        l_366 = term.getSubterm(2);
        term = h_366;
        IStrategoTerm term858 = term;
        IStrategoConstructor cons60 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success737:
        { 
          if(cons60 == random_test._consunparameterized_1)
          { 
            Fail887:
            { 
              k_366 = term.getSubterm(0);
              if(true)
                break Success737;
            }
            term = term858;
          }
          if(cons60 == random_test._consparameterized_2)
          { 
            i_366 = term.getSubterm(0);
            j_366 = term.getSubterm(1);
            term = termFactory.makeTuple(i_366, j_366);
            k_366 = term;
          }
          else
          { 
            break Fail886;
          }
        }
        IStrategoTerm term859 = term;
        Success738:
        { 
          Fail888:
          { 
            IStrategoTerm n_366 = null;
            n_366 = term;
            IStrategoTerm term860 = term;
            Success739:
            { 
              Fail889:
              { 
                term = $Modules$Read_0_0.instance.invoke(context, k_366);
                if(term == null)
                  break Fail889;
                { 
                  if(true)
                    break Fail888;
                  if(true)
                    break Success739;
                }
              }
              term = term860;
            }
            term = n_366;
            { 
              IStrategoTerm o_366 = null;
              IStrategoTerm r_366 = null;
              IStrategoTerm t_366 = null;
              IStrategoTerm u_366 = null;
              o_366 = term;
              t_366 = term;
              r_366 = random_test.const445;
              u_366 = t_366;
              term = termFactory.makeTuple(random_test.const446, k_366);
              term = dr_set_rule_0_3.instance.invoke(context, u_366, r_366, k_366, term);
              if(term == null)
                break Fail886;
              term = o_366;
              Success740:
              { 
                Fail890:
                { 
                  IStrategoTerm p_366 = null;
                  p_366 = term;
                  term = g_366;
                  if(term.getTermType() != IStrategoTerm.STRING || !"yes".equals(((IStrategoString)term).stringValue()))
                    break Fail890;
                  term = p_366;
                  { 
                    term = alltd_1_0.instance.invoke(context, l_366, read_prod_0_0.instance);
                    if(term == null)
                      break Fail886;
                    if(true)
                      break Success740;
                  }
                }
                term = filter_1_0.instance.invoke(context, l_366, lifted537.instance);
                if(term == null)
                  break Fail886;
                term = alltd_1_0.instance.invoke(context, term, read_prod_0_0.instance);
                if(term == null)
                  break Fail886;
              }
              term = try_1_0.instance.invoke(context, l_366, lifted539.instance);
              if(term == null)
                break Fail886;
              term = m_366;
              lifted541 lifted5411 = new lifted541();
              lifted5411.f_366 = f_366;
              term = map_1_0.instance.invoke(context, term, lifted5411);
              if(term == null)
                break Fail886;
              if(true)
                break Success738;
            }
          }
          term = term859;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class param_rewrite_sdf_0_2 extends Strategy 
  { 
    public static param_rewrite_sdf_0_2 instance = new param_rewrite_sdf_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm x_366, IStrategoTerm y_366)
    { 
      context.push("param_rewrite_sdf_0_2");
      Fail891:
      { 
        IStrategoTerm z_366 = null;
        IStrategoTerm c_367 = null;
        if(term != x_366 && !x_366.match(term))
          break Fail891;
        c_367 = term;
        IStrategoTerm term862 = term;
        Success741:
        { 
          Fail892:
          { 
            term = rec_replace_params_0_1.instance.invoke(context, y_366, x_366);
            if(term == null)
              break Fail892;
            z_366 = term;
            if(true)
              break Success741;
          }
          term = term862;
          IStrategoTerm a_367 = null;
          IStrategoTerm b_367 = null;
          IStrategoTerm e_367 = null;
          a_367 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail891;
          b_367 = term;
          e_367 = a_367;
          term = report_with_failure_0_2.instance.invoke(context, e_367, random_test.const447, b_367);
          if(term == null)
            break Fail891;
        }
        term = c_367;
        if(z_366 == null)
          break Fail891;
        term = z_366;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class read_imports_0_1 extends Strategy 
  { 
    public static read_imports_0_1 instance = new read_imports_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm s_705)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("read_imports_0_1");
      Fail893:
      { 
        IStrategoTerm term863 = term;
        Success742:
        { 
          Fail894:
          { 
            IStrategoTerm q_369 = null;
            TermReference r_369 = new TermReference();
            q_369 = term;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_1 != ((IStrategoAppl)term).getConstructor())
              break Fail894;
            IStrategoTerm arg324 = term.getSubterm(0);
            if(arg324.getTermType() != IStrategoTerm.APPL || random_test._consunparameterized_1 != ((IStrategoAppl)arg324).getConstructor())
              break Fail894;
            if(r_369.value == null)
              r_369.value = arg324.getSubterm(0);
            else
              if(r_369.value != arg324.getSubterm(0) && !r_369.value.match(arg324.getSubterm(0)))
                break Fail894;
            IStrategoTerm term864 = term;
            Success743:
            { 
              Fail895:
              { 
                IStrategoTerm w_369 = null;
                IStrategoTerm y_369 = null;
                term = s_705;
                lifted543 lifted5430 = new lifted543();
                lifted5430.r_369 = r_369;
                term = filter_1_0.instance.invoke(context, term, lifted5430);
                if(term == null)
                  break Fail895;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail895;
                w_369 = ((IStrategoList)term).head();
                IStrategoTerm arg328 = ((IStrategoList)term).tail();
                if(arg328.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg328).isEmpty())
                  break Fail895;
                y_369 = w_369;
                term = topdown_read_sdf_0_2.instance.invoke(context, y_369, s_705, random_test.const448);
                if(term == null)
                  break Fail895;
                if(true)
                  break Success743;
              }
              term = term864;
              IStrategoTerm t_369 = null;
              IStrategoTerm u_369 = null;
              IStrategoTerm a_370 = null;
              t_369 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail894;
              u_369 = term;
              a_370 = t_369;
              term = report_with_failure_0_2.instance.invoke(context, a_370, random_test.const449, u_369);
              if(term == null)
                break Fail894;
            }
            term = q_369;
            if(true)
              break Success742;
          }
          term = term863;
          IStrategoTerm term865 = term;
          Success744:
          { 
            Fail896:
            { 
              IStrategoTerm v_368 = null;
              TermReference w_368 = new TermReference();
              IStrategoTerm y_368 = null;
              IStrategoTerm z_368 = null;
              TermReference a_369 = new TermReference();
              TermReference b_369 = new TermReference();
              TermReference c_369 = new TermReference();
              IStrategoTerm d_369 = null;
              v_368 = term;
              if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_1 != ((IStrategoAppl)term).getConstructor())
                break Fail896;
              IStrategoTerm arg329 = term.getSubterm(0);
              if(arg329.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_2 != ((IStrategoAppl)arg329).getConstructor())
                break Fail896;
              if(w_368.value == null)
                w_368.value = arg329.getSubterm(0);
              else
                if(w_368.value != arg329.getSubterm(0) && !w_368.value.match(arg329.getSubterm(0)))
                  break Fail896;
              z_368 = arg329.getSubterm(1);
              IStrategoTerm term866 = term;
              Success745:
              { 
                Fail897:
                { 
                  IStrategoTerm i_369 = null;
                  IStrategoTerm k_369 = null;
                  term = s_705;
                  lifted544 lifted5440 = new lifted544();
                  lifted5440.w_368 = w_368;
                  term = filter_1_0.instance.invoke(context, term, lifted5440);
                  if(term == null)
                    break Fail897;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail897;
                  i_369 = ((IStrategoList)term).head();
                  IStrategoTerm arg334 = ((IStrategoList)term).tail();
                  if(arg334.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg334).isEmpty())
                    break Fail897;
                  term = i_369;
                  if(a_369.value == null)
                    a_369.value = term;
                  else
                    if(a_369.value != term && !a_369.value.match(term))
                      break Fail897;
                  if(a_369.value == null)
                    break Fail897;
                  term = a_369.value;
                  if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
                    break Fail897;
                  IStrategoTerm arg335 = term.getSubterm(0);
                  if(arg335.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_2 != ((IStrategoAppl)arg335).getConstructor())
                    break Fail897;
                  y_368 = arg335.getSubterm(1);
                  term = termFactory.makeTuple(y_368, z_368);
                  term = zip_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail897;
                  if(b_369.value == null)
                    b_369.value = term;
                  else
                    if(b_369.value != term && !b_369.value.match(term))
                      break Fail897;
                  term = s_705;
                  lifted545 lifted5450 = new lifted545();
                  lifted5450.a_369 = a_369;
                  lifted5450.b_369 = b_369;
                  lifted5450.c_369 = c_369;
                  term = oncetd_1_0.instance.invoke(context, term, lifted5450);
                  if(term == null)
                    break Fail897;
                  d_369 = term;
                  if(c_369.value == null)
                    break Fail897;
                  k_369 = c_369.value;
                  term = topdown_read_sdf_0_2.instance.invoke(context, k_369, d_369, random_test.const448);
                  if(term == null)
                    break Fail897;
                  if(true)
                    break Success745;
                }
                term = term866;
                IStrategoTerm f_369 = null;
                IStrategoTerm g_369 = null;
                IStrategoTerm m_369 = null;
                f_369 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail896;
                g_369 = term;
                m_369 = f_369;
                term = report_with_failure_0_2.instance.invoke(context, m_369, random_test.const449, g_369);
                if(term == null)
                  break Fail896;
              }
              term = v_368;
              if(true)
                break Success744;
            }
            term = term865;
            IStrategoTerm term867 = term;
            Success746:
            { 
              Fail898:
              { 
                IStrategoTerm f_368 = null;
                TermReference g_368 = new TermReference();
                IStrategoTerm i_368 = null;
                f_368 = term;
                if(term.getTermType() != IStrategoTerm.APPL || random_test._consrenamed_module_2 != ((IStrategoAppl)term).getConstructor())
                  break Fail898;
                IStrategoTerm arg338 = term.getSubterm(0);
                if(arg338.getTermType() != IStrategoTerm.APPL || random_test._consunparameterized_1 != ((IStrategoAppl)arg338).getConstructor())
                  break Fail898;
                if(g_368.value == null)
                  g_368.value = arg338.getSubterm(0);
                else
                  if(g_368.value != arg338.getSubterm(0) && !g_368.value.match(arg338.getSubterm(0)))
                    break Fail898;
                IStrategoTerm arg339 = term.getSubterm(1);
                if(arg339.getTermType() != IStrategoTerm.APPL || random_test._consrenamings_1 != ((IStrategoAppl)arg339).getConstructor())
                  break Fail898;
                i_368 = arg339.getSubterm(0);
                IStrategoTerm term868 = term;
                Success747:
                { 
                  Fail899:
                  { 
                    IStrategoTerm n_368 = null;
                    IStrategoTerm p_368 = null;
                    term = s_705;
                    lifted546 lifted5460 = new lifted546();
                    lifted5460.g_368 = g_368;
                    term = filter_1_0.instance.invoke(context, term, lifted5460);
                    if(term == null)
                      break Fail899;
                    if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                      break Fail899;
                    n_368 = ((IStrategoList)term).head();
                    IStrategoTerm arg343 = ((IStrategoList)term).tail();
                    if(arg343.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg343).isEmpty())
                      break Fail899;
                    term = rec_rename_module_0_1.instance.invoke(context, i_368, n_368);
                    if(term == null)
                      break Fail899;
                    p_368 = term;
                    term = topdown_read_sdf_0_2.instance.invoke(context, p_368, s_705, random_test.const448);
                    if(term == null)
                      break Fail899;
                    if(true)
                      break Success747;
                  }
                  term = term868;
                  IStrategoTerm k_368 = null;
                  IStrategoTerm l_368 = null;
                  IStrategoTerm r_368 = null;
                  k_368 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail898;
                  l_368 = term;
                  r_368 = k_368;
                  term = report_with_failure_0_2.instance.invoke(context, r_368, random_test.const449, l_368);
                  if(term == null)
                    break Fail898;
                }
                term = f_368;
                if(true)
                  break Success746;
              }
              term = term867;
              IStrategoTerm i_367 = null;
              TermReference j_367 = new TermReference();
              IStrategoTerm l_367 = null;
              IStrategoTerm n_367 = null;
              IStrategoTerm o_367 = null;
              TermReference p_367 = new TermReference();
              TermReference q_367 = new TermReference();
              TermReference r_367 = new TermReference();
              IStrategoTerm s_367 = null;
              i_367 = term;
              if(term.getTermType() != IStrategoTerm.APPL || random_test._consrenamed_module_2 != ((IStrategoAppl)term).getConstructor())
                break Fail893;
              IStrategoTerm arg344 = term.getSubterm(0);
              if(arg344.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_2 != ((IStrategoAppl)arg344).getConstructor())
                break Fail893;
              if(j_367.value == null)
                j_367.value = arg344.getSubterm(0);
              else
                if(j_367.value != arg344.getSubterm(0) && !j_367.value.match(arg344.getSubterm(0)))
                  break Fail893;
              o_367 = arg344.getSubterm(1);
              IStrategoTerm arg345 = term.getSubterm(1);
              if(arg345.getTermType() != IStrategoTerm.APPL || random_test._consrenamings_1 != ((IStrategoAppl)arg345).getConstructor())
                break Fail893;
              l_367 = arg345.getSubterm(0);
              IStrategoTerm term869 = term;
              Success748:
              { 
                Fail900:
                { 
                  IStrategoTerm x_367 = null;
                  IStrategoTerm z_367 = null;
                  term = s_705;
                  lifted547 lifted5470 = new lifted547();
                  lifted5470.j_367 = j_367;
                  term = filter_1_0.instance.invoke(context, term, lifted5470);
                  if(term == null)
                    break Fail900;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail900;
                  x_367 = ((IStrategoList)term).head();
                  IStrategoTerm arg349 = ((IStrategoList)term).tail();
                  if(arg349.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg349).isEmpty())
                    break Fail900;
                  term = rec_rename_module_0_1.instance.invoke(context, l_367, x_367);
                  if(term == null)
                    break Fail900;
                  if(p_367.value == null)
                    p_367.value = term;
                  else
                    if(p_367.value != term && !p_367.value.match(term))
                      break Fail900;
                  if(p_367.value == null)
                    break Fail900;
                  term = p_367.value;
                  if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
                    break Fail900;
                  IStrategoTerm arg350 = term.getSubterm(0);
                  if(arg350.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_2 != ((IStrategoAppl)arg350).getConstructor())
                    break Fail900;
                  n_367 = arg350.getSubterm(1);
                  term = termFactory.makeTuple(n_367, o_367);
                  term = zip_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail900;
                  if(q_367.value == null)
                    q_367.value = term;
                  else
                    if(q_367.value != term && !q_367.value.match(term))
                      break Fail900;
                  term = s_705;
                  lifted548 lifted5480 = new lifted548();
                  lifted5480.p_367 = p_367;
                  lifted5480.q_367 = q_367;
                  lifted5480.r_367 = r_367;
                  term = oncetd_1_0.instance.invoke(context, term, lifted5480);
                  if(term == null)
                    break Fail900;
                  s_367 = term;
                  if(r_367.value == null)
                    break Fail900;
                  z_367 = r_367.value;
                  term = topdown_read_sdf_0_2.instance.invoke(context, z_367, s_367, random_test.const448);
                  if(term == null)
                    break Fail900;
                  if(true)
                    break Success748;
                }
                term = term869;
                IStrategoTerm u_367 = null;
                IStrategoTerm v_367 = null;
                IStrategoTerm b_368 = null;
                u_367 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail893;
                v_367 = term;
                b_368 = u_367;
                term = report_with_failure_0_2.instance.invoke(context, b_368, random_test.const449, v_367);
                if(term == null)
                  break Fail893;
              }
              term = i_367;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class rec_rename_module_0_1 extends Strategy 
  { 
    public static rec_rename_module_0_1 instance = new rec_rename_module_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm t_705)
    { 
      context.push("rec_rename_module_0_1");
      Fail901:
      { 
        IStrategoTerm term870 = term;
        Success749:
        { 
          Fail902:
          { 
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail902;
            term = t_705;
            if(true)
              break Success749;
          }
          term = term870;
          TermReference e_370 = new TermReference();
          IStrategoTerm f_370 = null;
          IStrategoTerm g_370 = null;
          IStrategoTerm j_370 = null;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail901;
          if(e_370.value == null)
            e_370.value = ((IStrategoList)term).head();
          else
            if(e_370.value != ((IStrategoList)term).head() && !e_370.value.match(((IStrategoList)term).head()))
              break Fail901;
          f_370 = ((IStrategoList)term).tail();
          j_370 = term;
          IStrategoTerm term871 = term;
          Success750:
          { 
            Fail903:
            { 
              IStrategoTerm l_370 = null;
              l_370 = f_370;
              term = t_705;
              lifted549 lifted5490 = new lifted549();
              lifted5490.e_370 = e_370;
              term = sometd_1_0.instance.invoke(context, term, lifted5490);
              if(term == null)
                break Fail903;
              term = this.invoke(context, l_370, term);
              if(term == null)
                break Fail903;
              g_370 = term;
              if(true)
                break Success750;
            }
            term = term871;
            IStrategoTerm h_370 = null;
            IStrategoTerm i_370 = null;
            IStrategoTerm n_370 = null;
            h_370 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail901;
            i_370 = term;
            n_370 = h_370;
            term = report_with_failure_0_2.instance.invoke(context, n_370, random_test.const450, i_370);
            if(term == null)
              break Fail901;
          }
          term = j_370;
          if(g_370 == null)
            break Fail901;
          term = g_370;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class rename_module_0_1 extends Strategy 
  { 
    public static rename_module_0_1 instance = new rename_module_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm p_370)
    { 
      Fail904:
      { 
        IStrategoTerm q_370 = null;
        IStrategoTerm r_370 = null;
        q_370 = term;
        Success751:
        { 
          Fail905:
          { 
            term = p_370;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._conssymbol_2 != ((IStrategoAppl)term).getConstructor())
              break Fail905;
            if(term.getSubterm(0) != q_370 && !q_370.match(term.getSubterm(0)))
              break Fail905;
            r_370 = term.getSubterm(1);
            if(true)
              break Success751;
          }
          term = p_370;
          if(term.getTermType() != IStrategoTerm.APPL || random_test._consproduction_2 != ((IStrategoAppl)term).getConstructor())
            break Fail904;
          if(term.getSubterm(0) != q_370 && !q_370.match(term.getSubterm(0)))
            break Fail904;
          r_370 = term.getSubterm(1);
        }
        term = r_370;
        if(true)
          return term;
      }
      context.push("rename_module_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class rec_replace_params_0_1 extends Strategy 
  { 
    public static rec_replace_params_0_1 instance = new rec_replace_params_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm u_705)
    { 
      context.push("rec_replace_params_0_1");
      Fail906:
      { 
        IStrategoTerm term873 = term;
        Success752:
        { 
          Fail907:
          { 
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail907;
            term = u_705;
            if(true)
              break Success752;
          }
          term = term873;
          TermReference w_370 = new TermReference();
          TermReference x_370 = new TermReference();
          IStrategoTerm y_370 = null;
          IStrategoTerm z_370 = null;
          IStrategoTerm c_371 = null;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail906;
          IStrategoTerm arg353 = ((IStrategoList)term).head();
          if(arg353.getTermType() != IStrategoTerm.TUPLE || arg353.getSubtermCount() != 2)
            break Fail906;
          if(w_370.value == null)
            w_370.value = arg353.getSubterm(0);
          else
            if(w_370.value != arg353.getSubterm(0) && !w_370.value.match(arg353.getSubterm(0)))
              break Fail906;
          if(x_370.value == null)
            x_370.value = arg353.getSubterm(1);
          else
            if(x_370.value != arg353.getSubterm(1) && !x_370.value.match(arg353.getSubterm(1)))
              break Fail906;
          y_370 = ((IStrategoList)term).tail();
          c_371 = term;
          IStrategoTerm term874 = term;
          Success753:
          { 
            Fail908:
            { 
              IStrategoTerm e_371 = null;
              e_371 = y_370;
              term = u_705;
              lifted550 lifted5500 = new lifted550();
              lifted5500.w_370 = w_370;
              lifted5500.x_370 = x_370;
              term = topdown_1_0.instance.invoke(context, term, lifted5500);
              if(term == null)
                break Fail908;
              term = this.invoke(context, e_371, term);
              if(term == null)
                break Fail908;
              z_370 = term;
              if(true)
                break Success753;
            }
            term = term874;
            IStrategoTerm a_371 = null;
            IStrategoTerm b_371 = null;
            IStrategoTerm g_371 = null;
            a_371 = term;
            term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
            if(term == null)
              break Fail906;
            b_371 = term;
            g_371 = a_371;
            term = report_with_failure_0_2.instance.invoke(context, g_371, random_test.const451, b_371);
            if(term == null)
              break Fail906;
          }
          term = c_371;
          if(z_370 == null)
            break Fail906;
          term = z_370;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class replace_param_0_2 extends Strategy 
  { 
    public static replace_param_0_2 instance = new replace_param_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_v_705, IStrategoTerm ref_w_705)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference v_705 = new TermReference(ref_v_705);
      TermReference w_705 = new TermReference(ref_w_705);
      context.push("replace_param_0_2");
      Fail909:
      { 
        IStrategoTerm term875 = term;
        IStrategoConstructor cons61 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success754:
        { 
          if(cons61 == random_test._consparameterized_sort_2)
          { 
            Fail910:
            { 
              IStrategoTerm a_372 = null;
              IStrategoTerm b_372 = null;
              IStrategoTerm c_372 = null;
              IStrategoTerm f_372 = null;
              a_372 = term.getSubterm(0);
              b_372 = term.getSubterm(1);
              f_372 = term;
              IStrategoTerm term876 = term;
              Success755:
              { 
                Fail911:
                { 
                  term = b_372;
                  lifted552 lifted5520 = new lifted552();
                  lifted5520.v_705 = v_705;
                  lifted5520.w_705 = w_705;
                  term = SRTS_one.instance.invoke(context, term, lifted5520);
                  if(term == null)
                    break Fail911;
                  c_372 = term;
                  if(true)
                    break Success755;
                }
                term = term876;
                IStrategoTerm d_372 = null;
                IStrategoTerm e_372 = null;
                IStrategoTerm h_372 = null;
                d_372 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail910;
                e_372 = term;
                h_372 = d_372;
                term = report_with_failure_0_2.instance.invoke(context, h_372, random_test.const452, e_372);
                if(term == null)
                  break Fail910;
              }
              term = f_372;
              if(c_372 == null)
                break Fail910;
              term = termFactory.makeAppl(random_test._consparameterized_sort_2, new IStrategoTerm[]{a_372, c_372});
              if(true)
                break Success754;
            }
            term = term875;
          }
          Success756:
          { 
            if(cons61 == random_test._conssort_1)
            { 
              Fail912:
              { 
                if(v_705.value == null)
                  v_705.value = term.getSubterm(0);
                else
                  if(v_705.value != term.getSubterm(0) && !v_705.value.match(term.getSubterm(0)))
                    break Fail912;
                if(w_705.value == null)
                  break Fail912;
                term = termFactory.makeAppl(random_test._conssort_1, new IStrategoTerm[]{w_705.value});
                if(true)
                  break Success756;
              }
              term = term875;
            }
            if(cons61 == random_test._consparameterized_2)
            { 
              IStrategoTerm m_371 = null;
              IStrategoTerm n_371 = null;
              IStrategoTerm o_371 = null;
              IStrategoTerm r_371 = null;
              m_371 = term.getSubterm(0);
              n_371 = term.getSubterm(1);
              r_371 = term;
              IStrategoTerm term878 = term;
              Success757:
              { 
                Fail913:
                { 
                  term = n_371;
                  lifted553 lifted5530 = new lifted553();
                  lifted5530.v_705 = v_705;
                  lifted5530.w_705 = w_705;
                  term = SRTS_one.instance.invoke(context, term, lifted5530);
                  if(term == null)
                    break Fail913;
                  o_371 = term;
                  if(true)
                    break Success757;
                }
                term = term878;
                IStrategoTerm p_371 = null;
                IStrategoTerm q_371 = null;
                IStrategoTerm t_371 = null;
                p_371 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail909;
                q_371 = term;
                t_371 = p_371;
                term = report_with_failure_0_2.instance.invoke(context, t_371, random_test.const452, q_371);
                if(term == null)
                  break Fail909;
              }
              term = r_371;
              if(o_371 == null)
                break Fail909;
              term = termFactory.makeAppl(random_test._consparameterized_2, new IStrategoTerm[]{m_371, o_371});
            }
            else
            { 
              break Fail909;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class read_prod_0_0 extends Strategy 
  { 
    public static read_prod_0_0 instance = new read_prod_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("read_prod_0_0");
      Fail914:
      { 
        IStrategoTerm term879 = term;
        IStrategoConstructor cons62 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success758:
        { 
          if(cons62 == random_test._conscontext_free_syntax_1)
          { 
            Fail915:
            { 
              IStrategoTerm l_373 = null;
              IStrategoTerm m_373 = null;
              l_373 = term;
              m_373 = term.getSubterm(0);
              IStrategoTerm term880 = term;
              Success759:
              { 
                Fail916:
                { 
                  term = map_1_0.instance.invoke(context, m_373, lifted554.instance);
                  if(term == null)
                    break Fail916;
                  if(true)
                    break Success759;
                }
                term = term880;
                IStrategoTerm n_373 = null;
                IStrategoTerm o_373 = null;
                IStrategoTerm r_373 = null;
                n_373 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail915;
                o_373 = term;
                r_373 = n_373;
                term = report_with_failure_0_2.instance.invoke(context, r_373, random_test.const453, o_373);
                if(term == null)
                  break Fail915;
              }
              term = l_373;
              if(true)
                break Success758;
            }
            term = term879;
          }
          Success760:
          { 
            if(cons62 == random_test._conssyntax_1)
            { 
              Fail917:
              { 
                IStrategoTerm t_372 = null;
                IStrategoTerm u_372 = null;
                t_372 = term;
                u_372 = term.getSubterm(0);
                IStrategoTerm term882 = term;
                Success761:
                { 
                  Fail918:
                  { 
                    term = map_1_0.instance.invoke(context, u_372, lifted556.instance);
                    if(term == null)
                      break Fail918;
                    if(true)
                      break Success761;
                  }
                  term = term882;
                  IStrategoTerm a_373 = null;
                  IStrategoTerm b_373 = null;
                  IStrategoTerm i_373 = null;
                  a_373 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail917;
                  b_373 = term;
                  i_373 = a_373;
                  term = report_with_failure_0_2.instance.invoke(context, i_373, random_test.const453, b_373);
                  if(term == null)
                    break Fail917;
                }
                term = t_372;
                if(true)
                  break Success760;
              }
              term = term879;
            }
            if(cons62 == random_test._conslexical_syntax_1)
            { 
              IStrategoTerm k_372 = null;
              IStrategoTerm l_372 = null;
              k_372 = term;
              l_372 = term.getSubterm(0);
              IStrategoTerm term884 = term;
              Success762:
              { 
                Fail919:
                { 
                  term = map_1_0.instance.invoke(context, l_372, declare_lex_0_0.instance);
                  if(term == null)
                    break Fail919;
                  if(true)
                    break Success762;
                }
                term = term884;
                IStrategoTerm m_372 = null;
                IStrategoTerm n_372 = null;
                IStrategoTerm q_372 = null;
                m_372 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail914;
                n_372 = term;
                q_372 = m_372;
                term = report_with_failure_0_2.instance.invoke(context, q_372, random_test.const453, n_372);
                if(term == null)
                  break Fail914;
              }
              term = k_372;
            }
            else
            { 
              break Fail914;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class remove_cflex_sugar_0_0 extends Strategy 
  { 
    public static remove_cflex_sugar_0_0 instance = new remove_cflex_sugar_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail920:
      { 
        IStrategoTerm term885 = term;
        IStrategoConstructor cons63 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success763:
        { 
          if(cons63 == random_test._conscf_1)
          { 
            Fail921:
            { 
              IStrategoTerm t_373 = null;
              t_373 = term.getSubterm(0);
              term = t_373;
              if(true)
                break Success763;
            }
            term = term885;
          }
          if(cons63 == random_test._conslex_1)
          { 
            IStrategoTerm s_373 = null;
            s_373 = term.getSubterm(0);
            term = s_373;
          }
          else
          { 
            break Fail920;
          }
        }
        if(true)
          return term;
      }
      context.push("remove_cflex_sugar_0_0");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class declare_lex_0_0 extends Strategy 
  { 
    public static declare_lex_0_0 instance = new declare_lex_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("declare_lex_0_0");
      Fail922:
      { 
        IStrategoTerm w_373 = null;
        IStrategoTerm x_373 = null;
        TermReference y_373 = new TermReference();
        TermReference z_373 = new TermReference();
        IStrategoTerm a_374 = null;
        a_374 = term;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consprod_3 != ((IStrategoAppl)term).getConstructor())
          break Fail922;
        if(z_373.value == null)
          z_373.value = term.getSubterm(0);
        else
          if(z_373.value != term.getSubterm(0) && !z_373.value.match(term.getSubterm(0)))
            break Fail922;
        w_373 = term.getSubterm(1);
        IStrategoTerm arg355 = term.getSubterm(2);
        if(arg355.getTermType() != IStrategoTerm.APPL || random_test._consattrs_1 != ((IStrategoAppl)arg355).getConstructor())
          break Fail922;
        x_373 = arg355.getSubterm(0);
        Success764:
        { 
          Fail923:
          { 
            IStrategoTerm b_374 = null;
            b_374 = term;
            IStrategoTerm term887 = term;
            Success765:
            { 
              Fail924:
              { 
                term = oncetd_1_0.instance.invoke(context, x_373, lifted561.instance);
                if(term == null)
                  break Fail924;
                { 
                  if(true)
                    break Fail923;
                  if(true)
                    break Success765;
                }
              }
              term = term887;
            }
            term = b_374;
            { 
              IStrategoTerm term888 = term;
              Success766:
              { 
                Fail925:
                { 
                  IStrategoTerm c_374 = null;
                  c_374 = term;
                  term = oncetd_1_0.instance.invoke(context, w_373, recognize_sort_0_0.instance);
                  if(term == null)
                    break Fail925;
                  if(y_373.value == null)
                    y_373.value = term;
                  else
                    if(y_373.value != term && !y_373.value.match(term))
                      break Fail925;
                  term = c_374;
                  { 
                    IStrategoTerm term889 = term;
                    Success767:
                    { 
                      Fail926:
                      { 
                        IStrategoTerm d_374 = null;
                        d_374 = term;
                        if(y_373.value == null)
                          break Fail926;
                        term = d_374;
                        { 
                          IStrategoTerm term890 = term;
                          Success768:
                          { 
                            Fail927:
                            { 
                              IStrategoTerm e_374 = null;
                              e_374 = term;
                              IStrategoTerm term891 = term;
                              Success769:
                              { 
                                Fail928:
                                { 
                                  term = oncetd_1_0.instance.invoke(context, x_373, lifted563.instance);
                                  if(term == null)
                                    break Fail928;
                                  { 
                                    if(true)
                                      break Fail927;
                                    if(true)
                                      break Success769;
                                  }
                                }
                                term = term891;
                              }
                              term = e_374;
                              { 
                                IStrategoTerm f_374 = null;
                                IStrategoTerm h_374 = null;
                                IStrategoTerm j_374 = null;
                                IStrategoTerm k_374 = null;
                                IStrategoTerm g_374 = null;
                                IStrategoTerm l_374 = null;
                                IStrategoTerm n_374 = null;
                                IStrategoTerm o_374 = null;
                                f_374 = term;
                                j_374 = term;
                                h_374 = random_test.const454;
                                term = j_374;
                                k_374 = j_374;
                                if(z_373.value == null)
                                  break Fail922;
                                term = termFactory.makeTuple(random_test.const455, z_373.value);
                                term = dr_add_rule_0_3.instance.invoke(context, k_374, h_374, y_373.value, term);
                                if(term == null)
                                  break Fail922;
                                term = f_374;
                                g_374 = f_374;
                                n_374 = term;
                                l_374 = random_test.const456;
                                term = n_374;
                                o_374 = n_374;
                                if(y_373.value == null)
                                  break Fail922;
                                term = termFactory.makeTuple(random_test.const457, y_373.value);
                                term = dr_set_rule_0_3.instance.invoke(context, o_374, l_374, z_373.value, term);
                                if(term == null)
                                  break Fail922;
                                term = g_374;
                                if(true)
                                  break Success768;
                              }
                            }
                            term = term890;
                          }
                          term = x_373;
                          lifted564 lifted5640 = new lifted564();
                          lifted5640.y_373 = y_373;
                          lifted5640.z_373 = z_373;
                          term = try_1_0.instance.invoke(context, term, lifted5640);
                          if(term == null)
                            break Fail922;
                          if(true)
                            break Success767;
                        }
                      }
                      term = term889;
                    }
                    if(true)
                      break Success766;
                  }
                }
                term = term888;
              }
              if(true)
                break Success764;
            }
          }
          term = write_to_string_0_0.instance.invoke(context, a_374);
          if(term == null)
            break Fail922;
          term = (IStrategoTerm)termFactory.makeListCons(random_test.const458, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail922;
          term = debug_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail922;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class check_lex_attrs_0_2 extends Strategy 
  { 
    public static check_lex_attrs_0_2 instance = new check_lex_attrs_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm x_705, IStrategoTerm y_705)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("check_lex_attrs_0_2");
      Fail929:
      { 
        IStrategoTerm term892 = term;
        IStrategoConstructor cons64 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success770:
        { 
          if(cons64 == random_test._conscons_1)
          { 
            Fail930:
            { 
              IStrategoTerm n_375 = null;
              IStrategoTerm o_375 = null;
              IStrategoTerm p_375 = null;
              n_375 = term;
              o_375 = term.getSubterm(0);
              IStrategoTerm term893 = term;
              Success771:
              { 
                Fail931:
                { 
                  IStrategoTerm q_375 = null;
                  IStrategoTerm v_375 = null;
                  IStrategoTerm w_375 = null;
                  IStrategoTerm y_375 = null;
                  IStrategoTerm z_375 = null;
                  IStrategoTerm a_376 = null;
                  IStrategoTerm r_375 = null;
                  IStrategoTerm b_376 = null;
                  IStrategoTerm d_376 = null;
                  IStrategoTerm e_376 = null;
                  term = unescape_0_0.instance.invoke(context, o_375);
                  if(term == null)
                    break Fail931;
                  p_375 = term;
                  q_375 = term;
                  y_375 = term;
                  v_375 = random_test.const459;
                  z_375 = y_375;
                  term = termFactory.annotateTerm(termFactory.makeTuple(x_705, y_705), checkListAnnos(termFactory, random_test.constCons0));
                  w_375 = term;
                  a_376 = z_375;
                  term = termFactory.makeTuple(random_test.const460, p_375);
                  term = dr_set_rule_0_3.instance.invoke(context, a_376, v_375, w_375, term);
                  if(term == null)
                    break Fail931;
                  term = q_375;
                  r_375 = q_375;
                  d_376 = term;
                  b_376 = random_test.const461;
                  e_376 = d_376;
                  term = termFactory.makeTuple(random_test.const462, x_705, y_705);
                  term = dr_set_rule_0_3.instance.invoke(context, e_376, b_376, p_375, term);
                  if(term == null)
                    break Fail931;
                  term = r_375;
                  if(true)
                    break Success771;
                }
                term = term893;
                IStrategoTerm s_375 = null;
                IStrategoTerm t_375 = null;
                IStrategoTerm g_376 = null;
                s_375 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail930;
                t_375 = term;
                g_376 = s_375;
                term = report_with_failure_0_2.instance.invoke(context, g_376, random_test.const463, t_375);
                if(term == null)
                  break Fail930;
              }
              term = n_375;
              if(true)
                break Success770;
            }
            term = term892;
          }
          if(cons64 == random_test._consreject_0)
          { 
            IStrategoTerm w_374 = null;
            w_374 = term;
            IStrategoTerm term894 = term;
            Success772:
            { 
              Fail932:
              { 
                IStrategoTerm x_374 = null;
                IStrategoTerm b_375 = null;
                IStrategoTerm d_375 = null;
                IStrategoTerm e_375 = null;
                x_374 = term;
                d_375 = term;
                b_375 = random_test.const464;
                e_375 = d_375;
                term = termFactory.makeTuple(random_test.const465, y_705);
                term = dr_add_rule_0_3.instance.invoke(context, e_375, b_375, x_705, term);
                if(term == null)
                  break Fail932;
                term = x_374;
                if(true)
                  break Success772;
              }
              term = term894;
              IStrategoTerm y_374 = null;
              IStrategoTerm z_374 = null;
              IStrategoTerm g_375 = null;
              y_374 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail929;
              z_374 = term;
              g_375 = y_374;
              term = report_with_failure_0_2.instance.invoke(context, g_375, random_test.const463, z_374);
              if(term == null)
                break Fail929;
            }
            term = w_374;
          }
          else
          { 
            break Fail929;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class declare_cf_0_0 extends Strategy 
  { 
    public static declare_cf_0_0 instance = new declare_cf_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("declare_cf_0_0");
      Fail933:
      { 
        TermReference k_376 = new TermReference();
        IStrategoTerm l_376 = null;
        IStrategoTerm m_376 = null;
        TermReference n_376 = new TermReference();
        TermReference o_376 = new TermReference();
        TermReference p_376 = new TermReference();
        IStrategoTerm q_376 = null;
        q_376 = term;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consprod_3 != ((IStrategoAppl)term).getConstructor())
          break Fail933;
        if(p_376.value == null)
          p_376.value = term.getSubterm(0);
        else
          if(p_376.value != term.getSubterm(0) && !p_376.value.match(term.getSubterm(0)))
            break Fail933;
        if(o_376.value == null)
          o_376.value = term.getSubterm(1);
        else
          if(o_376.value != term.getSubterm(1) && !o_376.value.match(term.getSubterm(1)))
            break Fail933;
        if(n_376.value == null)
          n_376.value = term.getSubterm(2);
        else
          if(n_376.value != term.getSubterm(2) && !n_376.value.match(term.getSubterm(2)))
            break Fail933;
        IStrategoTerm term895 = term;
        Success773:
        { 
          Fail934:
          { 
            IStrategoTerm r_376 = null;
            r_376 = term;
            lifted567 lifted5670 = new lifted567();
            lifted566 lifted5660 = new lifted566();
            lifted5670.k_376 = k_376;
            lifted5660.n_376 = n_376;
            lifted5660.k_376 = k_376;
            term = and_2_0.instance.invoke(context, term, lifted5660, lifted5670);
            if(term == null)
              break Fail934;
            term = r_376;
            { 
              Success774:
              { 
                Fail935:
                { 
                  IStrategoTerm s_376 = null;
                  s_376 = term;
                  if(o_376.value == null)
                    break Fail935;
                  term = oncetd_1_0.instance.invoke(context, o_376.value, recognize_sort_0_0.instance);
                  if(term == null)
                    break Fail935;
                  m_376 = term;
                  term = s_376;
                  { 
                    IStrategoTerm t_376 = null;
                    IStrategoTerm y_376 = null;
                    IStrategoTerm a_377 = null;
                    IStrategoTerm b_377 = null;
                    IStrategoTerm u_376 = null;
                    IStrategoTerm c_377 = null;
                    IStrategoTerm d_377 = null;
                    IStrategoTerm f_377 = null;
                    IStrategoTerm g_377 = null;
                    IStrategoTerm h_377 = null;
                    IStrategoTerm v_376 = null;
                    IStrategoTerm i_377 = null;
                    IStrategoTerm k_377 = null;
                    IStrategoTerm l_377 = null;
                    term = new_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail933;
                    l_376 = term;
                    t_376 = term;
                    a_377 = term;
                    y_376 = random_test.const466;
                    term = a_377;
                    b_377 = a_377;
                    if(p_376.value == null)
                      break Fail933;
                    term = termFactory.makeTuple(random_test.const467, p_376.value);
                    term = dr_add_rule_0_3.instance.invoke(context, b_377, y_376, m_376, term);
                    if(term == null)
                      break Fail933;
                    term = t_376;
                    u_376 = t_376;
                    f_377 = term;
                    c_377 = random_test.const468;
                    term = f_377;
                    g_377 = f_377;
                    if(p_376.value == null)
                      break Fail933;
                    term = termFactory.annotateTerm(termFactory.makeTuple(m_376, p_376.value), checkListAnnos(termFactory, random_test.constCons0));
                    d_377 = term;
                    h_377 = g_377;
                    term = termFactory.makeTuple(random_test.const469, l_376);
                    term = dr_set_rule_0_3.instance.invoke(context, h_377, c_377, d_377, term);
                    if(term == null)
                      break Fail933;
                    term = u_376;
                    v_376 = u_376;
                    k_377 = term;
                    i_377 = random_test.const470;
                    term = k_377;
                    l_377 = k_377;
                    if(p_376.value == null)
                      break Fail933;
                    term = termFactory.makeTuple(random_test.const471, m_376, p_376.value);
                    term = dr_set_rule_0_3.instance.invoke(context, l_377, i_377, l_376, term);
                    if(term == null)
                      break Fail933;
                    term = v_376;
                    if(p_376.value == null)
                      break Fail933;
                    term = termFactory.makeTuple(m_376, p_376.value);
                    term = record_inverse_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail933;
                    if(n_376.value == null)
                      break Fail933;
                    term = n_376.value;
                    lifted572 lifted5720 = new lifted572();
                    lifted5720.o_376 = o_376;
                    lifted5720.p_376 = p_376;
                    term = sometd_1_0.instance.invoke(context, term, lifted5720);
                    if(term == null)
                      break Fail933;
                    if(true)
                      break Success774;
                  }
                }
                term = write_to_string_0_0.instance.invoke(context, q_376);
                if(term == null)
                  break Fail933;
                term = (IStrategoTerm)termFactory.makeListCons(random_test.const472, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                term = concat_strings_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail933;
                term = debug_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail933;
              }
              if(true)
                break Success773;
            }
          }
          term = term895;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class record_inverse_0_0 extends Strategy 
  { 
    public static record_inverse_0_0 instance = new record_inverse_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("record_inverse_0_0");
      Fail936:
      { 
        TermReference q_377 = new TermReference();
        TermReference r_377 = new TermReference();
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail936;
        if(q_377.value == null)
          q_377.value = term.getSubterm(0);
        else
          if(q_377.value != term.getSubterm(0) && !q_377.value.match(term.getSubterm(0)))
            break Fail936;
        if(r_377.value == null)
          r_377.value = term.getSubterm(1);
        else
          if(r_377.value != term.getSubterm(1) && !r_377.value.match(term.getSubterm(1)))
            break Fail936;
        if(r_377.value == null)
          break Fail936;
        term = filter_prods_0_0.instance.invoke(context, r_377.value);
        if(term == null)
          break Fail936;
        term = map_1_0.instance.invoke(context, term, extract_sorts_0_0.instance);
        if(term == null)
          break Fail936;
        term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
        if(term == null)
          break Fail936;
        lifted575 lifted5750 = new lifted575();
        lifted5750.q_377 = q_377;
        lifted5750.r_377 = r_377;
        term = map_1_0.instance.invoke(context, term, lifted5750);
        if(term == null)
          break Fail936;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class extract_sorts_0_0 extends Strategy 
  { 
    public static extract_sorts_0_0 instance = new extract_sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("extract_sorts_0_0");
      Fail937:
      { 
        IStrategoTerm term898 = term;
        Success775:
        { 
          Fail938:
          { 
            IStrategoTerm p_378 = null;
            IStrategoTerm q_378 = null;
            IStrategoTerm r_378 = null;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consalt_2 != ((IStrategoAppl)term).getConstructor())
              break Fail938;
            p_378 = term.getSubterm(0);
            r_378 = term.getSubterm(1);
            term = this.invoke(context, p_378);
            if(term == null)
              break Fail938;
            term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
            if(term == null)
              break Fail938;
            q_378 = term;
            term = this.invoke(context, r_378);
            if(term == null)
              break Fail938;
            term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
            if(term == null)
              break Fail938;
            term = (IStrategoTerm)termFactory.makeListCons(q_378, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
            if(true)
              break Success775;
          }
          term = term898;
          IStrategoTerm term899 = term;
          Success776:
          { 
            Fail939:
            { 
              IStrategoTerm l_378 = null;
              IStrategoTerm term900 = term;
              IStrategoConstructor cons66 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
              Success777:
              { 
                if(cons66 == random_test._consiter_star_1)
                { 
                  Fail940:
                  { 
                    l_378 = term.getSubterm(0);
                    if(true)
                      break Success777;
                  }
                  term = term900;
                }
                Success778:
                { 
                  if(cons66 == random_test._consiter_star_sep_2)
                  { 
                    Fail941:
                    { 
                      l_378 = term.getSubterm(0);
                      if(true)
                        break Success778;
                    }
                    term = term900;
                  }
                  Success779:
                  { 
                    if(cons66 == random_test._consiter_1)
                    { 
                      Fail942:
                      { 
                        l_378 = term.getSubterm(0);
                        if(true)
                          break Success779;
                      }
                      term = term900;
                    }
                    if(cons66 == random_test._consiter_sep_2)
                    { 
                      l_378 = term.getSubterm(0);
                    }
                    else
                    { 
                      break Fail939;
                    }
                  }
                }
              }
              term = this.invoke(context, l_378);
              if(term == null)
                break Fail939;
              term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
              if(term == null)
                break Fail939;
              if(true)
                break Success776;
            }
            term = term899;
            IStrategoTerm term903 = term;
            IStrategoConstructor cons67 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
            Success780:
            { 
              if(cons67 == random_test._conslabel_2)
              { 
                Fail943:
                { 
                  IStrategoTerm h_378 = null;
                  h_378 = term.getSubterm(1);
                  term = this.invoke(context, h_378);
                  if(term == null)
                    break Fail943;
                  term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
                  if(term == null)
                    break Fail943;
                  if(true)
                    break Success780;
                }
                term = term903;
              }
              Success781:
              { 
                if(cons67 == random_test._conscf_1)
                { 
                  Fail944:
                  { 
                    IStrategoTerm e_378 = null;
                    e_378 = term.getSubterm(0);
                    term = this.invoke(context, e_378);
                    if(term == null)
                      break Fail944;
                    term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
                    if(term == null)
                      break Fail944;
                    if(true)
                      break Success781;
                  }
                  term = term903;
                }
                Success782:
                { 
                  if(cons67 == random_test._consopt_1)
                  { 
                    Fail945:
                    { 
                      IStrategoTerm b_378 = null;
                      b_378 = term.getSubterm(0);
                      term = this.invoke(context, b_378);
                      if(term == null)
                        break Fail945;
                      term = try_1_0.instance.invoke(context, term, concat_0_0.instance);
                      if(term == null)
                        break Fail945;
                      if(true)
                        break Success782;
                    }
                    term = term903;
                  }
                  IStrategoTerm y_377 = null;
                  y_377 = term;
                  term = recognize_sort_0_0.instance.invoke(context, y_377);
                  if(term == null)
                    break Fail937;
                  term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constNil0);
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class check_cf_attrs_0_2 extends Strategy 
  { 
    public static check_cf_attrs_0_2 instance = new check_cf_attrs_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm z_705, IStrategoTerm a_706)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("check_cf_attrs_0_2");
      Fail946:
      { 
        IStrategoTerm term906 = term;
        IStrategoConstructor cons68 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success783:
        { 
          if(cons68 == random_test._conscons_1)
          { 
            Fail947:
            { 
              IStrategoTerm x_380 = null;
              IStrategoTerm y_380 = null;
              IStrategoTerm z_380 = null;
              IStrategoTerm a_381 = null;
              IStrategoTerm b_381 = null;
              x_380 = term;
              y_380 = term.getSubterm(0);
              IStrategoTerm term907 = term;
              Success784:
              { 
                Fail948:
                { 
                  IStrategoTerm i_381 = null;
                  IStrategoTerm j_381 = null;
                  IStrategoTerm c_381 = null;
                  IStrategoTerm k_381 = null;
                  IStrategoTerm l_381 = null;
                  IStrategoTerm n_381 = null;
                  IStrategoTerm o_381 = null;
                  IStrategoTerm p_381 = null;
                  IStrategoTerm d_381 = null;
                  IStrategoTerm q_381 = null;
                  IStrategoTerm s_381 = null;
                  IStrategoTerm t_381 = null;
                  IStrategoTerm e_381 = null;
                  IStrategoTerm u_381 = null;
                  IStrategoTerm w_381 = null;
                  IStrategoTerm x_381 = null;
                  term = unescape_0_0.instance.invoke(context, y_380);
                  if(term == null)
                    break Fail948;
                  z_380 = term;
                  term = recognize_sort_0_0.instance.invoke(context, z_705);
                  if(term == null)
                    break Fail948;
                  a_381 = term;
                  j_381 = term;
                  term = filter_prods_0_0.instance.invoke(context, a_706);
                  if(term == null)
                    break Fail948;
                  i_381 = term;
                  term = j_381;
                  IStrategoTerm mkterm21;
                  mkterm21 = context.invokePrimitive("SSL_mkterm", term, NO_STRATEGIES, new IStrategoTerm[]{z_380, i_381});
                  if(mkterm21 == null)
                    break Fail948;
                  term = create_key_0_0.instance.invoke(context, mkterm21);
                  if(term == null)
                    break Fail948;
                  b_381 = term;
                  c_381 = term;
                  n_381 = term;
                  k_381 = random_test.const475;
                  o_381 = n_381;
                  term = termFactory.annotateTerm(termFactory.makeTuple(a_381, a_706), checkListAnnos(termFactory, random_test.constCons0));
                  l_381 = term;
                  p_381 = o_381;
                  term = termFactory.makeTuple(random_test.const476, z_380);
                  term = dr_set_rule_0_3.instance.invoke(context, p_381, k_381, l_381, term);
                  if(term == null)
                    break Fail948;
                  term = c_381;
                  d_381 = c_381;
                  s_381 = term;
                  q_381 = random_test.const477;
                  t_381 = s_381;
                  term = termFactory.makeTuple(random_test.const478, a_381, a_706);
                  term = dr_add_rule_0_3.instance.invoke(context, t_381, q_381, z_380, term);
                  if(term == null)
                    break Fail948;
                  term = d_381;
                  e_381 = d_381;
                  w_381 = term;
                  u_381 = random_test.const479;
                  x_381 = w_381;
                  term = termFactory.makeTuple(random_test.const480, b_381);
                  term = dr_set_rule_0_3.instance.invoke(context, x_381, u_381, b_381, term);
                  if(term == null)
                    break Fail948;
                  term = e_381;
                  if(true)
                    break Success784;
                }
                term = term907;
                IStrategoTerm f_381 = null;
                IStrategoTerm g_381 = null;
                IStrategoTerm z_381 = null;
                f_381 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail947;
                g_381 = term;
                z_381 = f_381;
                term = report_with_failure_0_2.instance.invoke(context, z_381, random_test.const481, g_381);
                if(term == null)
                  break Fail947;
              }
              term = x_380;
              if(true)
                break Success783;
            }
            term = term906;
          }
          Success785:
          { 
            if(cons68 == random_test._consterm_1)
            { 
              Fail949:
              { 
                IStrategoTerm x_379 = null;
                IStrategoTerm y_379 = null;
                IStrategoTerm z_379 = null;
                IStrategoTerm a_380 = null;
                IStrategoTerm b_380 = null;
                x_379 = term;
                IStrategoTerm arg359 = term.getSubterm(0);
                if(arg359.getTermType() != IStrategoTerm.APPL || random_test._consast_1 != ((IStrategoAppl)arg359).getConstructor())
                  break Fail949;
                z_379 = arg359.getSubterm(0);
                IStrategoTerm term909 = term;
                Success786:
                { 
                  Fail950:
                  { 
                    IStrategoTerm c_380 = null;
                    IStrategoTerm i_380 = null;
                    IStrategoTerm j_380 = null;
                    IStrategoTerm l_380 = null;
                    IStrategoTerm m_380 = null;
                    IStrategoTerm n_380 = null;
                    term = concat_strings_0_0.instance.invoke(context, random_test.constCons55);
                    if(term == null)
                      break Fail950;
                    term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
                    term = $Read$From$File_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail950;
                    y_379 = term;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const482, termFactory.makeListCons(z_379, (IStrategoList)random_test.constNil0));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail950;
                    term = parse_string_0_1.instance.invoke(context, term, y_379);
                    if(term == null)
                      break Fail950;
                    b_380 = term;
                    term = recognize_sort_0_0.instance.invoke(context, z_705);
                    if(term == null)
                      break Fail950;
                    a_380 = term;
                    c_380 = term;
                    l_380 = term;
                    i_380 = random_test.const483;
                    m_380 = l_380;
                    term = termFactory.annotateTerm(termFactory.makeTuple(a_380, a_706), checkListAnnos(termFactory, random_test.constCons0));
                    j_380 = term;
                    n_380 = m_380;
                    term = termFactory.makeTuple(random_test.const484, b_380);
                    term = dr_set_rule_0_3.instance.invoke(context, n_380, i_380, j_380, term);
                    if(term == null)
                      break Fail950;
                    term = c_380;
                    if(true)
                      break Success786;
                  }
                  term = term909;
                  IStrategoTerm d_380 = null;
                  IStrategoTerm e_380 = null;
                  IStrategoTerm p_380 = null;
                  d_380 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail949;
                  e_380 = term;
                  p_380 = d_380;
                  term = report_with_failure_0_2.instance.invoke(context, p_380, random_test.const481, e_380);
                  if(term == null)
                    break Fail949;
                }
                term = x_379;
                if(true)
                  break Success785;
              }
              term = term906;
            }
            IStrategoTerm term910 = term;
            Success787:
            { 
              Fail951:
              { 
                IStrategoTerm k_379 = null;
                k_379 = term;
                IStrategoTerm term911 = term;
                IStrategoConstructor cons69 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
                Success788:
                { 
                  if(cons69 == random_test._consleft_0)
                  { 
                    Fail952:
                    { 
                      if(true)
                        break Success788;
                    }
                    term = term911;
                  }
                  if(cons69 == random_test._consassoc_0)
                  { }
                  else
                  { 
                    break Fail951;
                  }
                }
                IStrategoTerm term912 = term;
                Success789:
                { 
                  Fail953:
                  { 
                    term = recognize_sort_0_0.instance.invoke(context, z_705);
                    if(term == null)
                      break Fail953;
                    term = termFactory.makeTuple(a_706, term, random_test.constleft0, a_706, term);
                    term = write_$Priority_rule_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail953;
                    if(true)
                      break Success789;
                  }
                  term = term912;
                  IStrategoTerm m_379 = null;
                  IStrategoTerm n_379 = null;
                  IStrategoTerm r_379 = null;
                  m_379 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail951;
                  n_379 = term;
                  r_379 = m_379;
                  term = report_with_failure_0_2.instance.invoke(context, r_379, random_test.const481, n_379);
                  if(term == null)
                    break Fail951;
                }
                term = k_379;
                if(true)
                  break Success787;
              }
              term = term910;
              IStrategoTerm y_378 = null;
              y_378 = term;
              IStrategoTerm term913 = term;
              IStrategoConstructor cons70 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
              Success790:
              { 
                if(cons70 == random_test._consright_0)
                { 
                  Fail954:
                  { 
                    if(true)
                      break Success790;
                  }
                  term = term913;
                }
                if(cons70 == random_test._consnon_assoc_0)
                { }
                else
                { 
                  break Fail946;
                }
              }
              IStrategoTerm term914 = term;
              Success791:
              { 
                Fail955:
                { 
                  term = recognize_sort_0_0.instance.invoke(context, z_705);
                  if(term == null)
                    break Fail955;
                  term = termFactory.makeTuple(a_706, term, y_378, a_706, term);
                  term = write_$Priority_rule_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail955;
                  if(true)
                    break Success791;
                }
                term = term914;
                IStrategoTerm a_379 = null;
                IStrategoTerm b_379 = null;
                IStrategoTerm f_379 = null;
                a_379 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail946;
                b_379 = term;
                f_379 = a_379;
                term = report_with_failure_0_2.instance.invoke(context, f_379, random_test.const481, b_379);
                if(term == null)
                  break Fail946;
              }
              term = y_378;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class find_terminal_paths_0_1 extends Strategy 
  { 
    public static find_terminal_paths_0_1 instance = new find_terminal_paths_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_b_382)
    { 
      ITermFactory termFactory = context.getFactory();
      TermReference b_382 = new TermReference(ref_b_382);
      context.push("find_terminal_paths_0_1");
      Fail956:
      { 
        IStrategoTerm d_382 = null;
        IStrategoTerm k_382 = null;
        term = all_keys_$C$F$Sorts_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail956;
        k_382 = term;
        term = k_382;
        lifted582 lifted5820 = new lifted582();
        lifted5820.b_382 = b_382;
        term = map_1_0.instance.invoke(context, term, lifted5820);
        if(term == null)
          break Fail956;
        term = concat_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail956;
        term = concat_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail956;
        d_382 = term;
        IStrategoTerm term915 = term;
        Success792:
        { 
          Fail957:
          { 
            IStrategoTerm f_382 = null;
            f_382 = term;
            IStrategoTerm term916 = term;
            Success793:
            { 
              Fail958:
              { 
                term = d_382;
                if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                  break Fail958;
                { 
                  if(true)
                    break Fail957;
                  if(true)
                    break Success793;
                }
              }
              term = term916;
            }
            term = f_382;
            { 
              term = map_1_0.instance.invoke(context, d_382, lifted583.instance);
              if(term == null)
                break Fail956;
              if(b_382.value == null)
                break Fail956;
              term = termFactory.makeTuple(b_382.value, random_test.const186);
              term = addi_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail956;
              term = this.invoke(context, term, term);
              if(term == null)
                break Fail956;
              if(true)
                break Success792;
            }
          }
          term = term915;
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class recognize_sort_0_0 extends Strategy 
  { 
    public static recognize_sort_0_0 instance = new recognize_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("recognize_sort_0_0");
      Fail959:
      { 
        IStrategoTerm term917 = term;
        IStrategoConstructor cons71 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success794:
        { 
          if(cons71 == random_test._conssort_1)
          { 
            Fail960:
            { 
              IStrategoTerm c_383 = null;
              c_383 = term.getSubterm(0);
              term = c_383;
              if(true)
                break Success794;
            }
            term = term917;
          }
          if(cons71 == random_test._consparameterized_sort_2)
          { 
            IStrategoTerm t_382 = null;
            IStrategoTerm u_382 = null;
            IStrategoTerm w_382 = null;
            IStrategoTerm z_382 = null;
            u_382 = term.getSubterm(0);
            t_382 = term.getSubterm(1);
            z_382 = term;
            IStrategoTerm term918 = term;
            Success795:
            { 
              Fail961:
              { 
                term = change_param_sort_0_0.instance.invoke(context, t_382);
                if(term == null)
                  break Fail961;
                term = termFactory.makeTuple(u_382, term);
                w_382 = term;
                if(true)
                  break Success795;
              }
              term = term918;
              IStrategoTerm x_382 = null;
              IStrategoTerm y_382 = null;
              IStrategoTerm b_383 = null;
              x_382 = term;
              term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
              if(term == null)
                break Fail959;
              y_382 = term;
              b_383 = x_382;
              term = report_with_failure_0_2.instance.invoke(context, b_383, random_test.const487, y_382);
              if(term == null)
                break Fail959;
            }
            term = z_382;
            if(w_382 == null)
              break Fail959;
            term = w_382;
          }
          else
          { 
            break Fail959;
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class change_param_sort_0_0 extends Strategy 
  { 
    public static change_param_sort_0_0 instance = new change_param_sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("change_param_sort_0_0");
      Fail962:
      { 
        IStrategoTerm q_383 = null;
        IStrategoTerm r_383 = null;
        IStrategoTerm z_383 = null;
        IStrategoTerm term919 = term;
        Success796:
        { 
          Fail963:
          { 
            if(term.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)term).getConstructor())
              break Fail963;
            q_383 = term.getSubterm(0);
            if(true)
              break Success796;
          }
          term = term919;
          if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
            break Fail962;
          IStrategoTerm arg360 = ((IStrategoList)term).head();
          if(arg360.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)arg360).getConstructor())
            break Fail962;
          q_383 = arg360.getSubterm(0);
          IStrategoTerm arg361 = ((IStrategoList)term).tail();
          if(arg361.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg361).isEmpty())
            break Fail962;
        }
        z_383 = term;
        IStrategoTerm term920 = term;
        Success797:
        { 
          Fail964:
          { 
            term = termFactory.makeTuple(random_test.const488, q_383);
            term = conc_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail964;
            r_383 = term;
            if(true)
              break Success797;
          }
          term = term920;
          IStrategoTerm s_383 = null;
          IStrategoTerm u_383 = null;
          IStrategoTerm c_384 = null;
          s_383 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail962;
          u_383 = term;
          c_384 = s_383;
          term = report_with_failure_0_2.instance.invoke(context, c_384, random_test.const489, u_383);
          if(term == null)
            break Fail962;
        }
        term = z_383;
        if(r_383 == null)
          break Fail962;
        term = r_383;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class find_terminal_path_0_1 extends Strategy 
  { 
    public static find_terminal_path_0_1 instance = new find_terminal_path_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_l_384)
    { 
      TermReference l_384 = new TermReference(ref_l_384);
      context.push("find_terminal_path_0_1");
      Fail965:
      { 
        IStrategoTerm m_384 = null;
        TermReference n_384 = new TermReference();
        IStrategoTerm o_384 = null;
        IStrategoTerm v_384 = null;
        if(n_384.value == null)
          n_384.value = term;
        else
          if(n_384.value != term && !n_384.value.match(term))
            break Fail965;
        v_384 = term;
        IStrategoTerm term921 = term;
        Success798:
        { 
          Fail966:
          { 
            if(n_384.value == null)
              break Fail966;
            term = bagof_$C$F$Sorts_0_0.instance.invoke(context, n_384.value);
            if(term == null)
              break Fail966;
            m_384 = term;
            IStrategoTerm term922 = term;
            Success799:
            { 
              Fail967:
              { 
                IStrategoTerm p_384 = null;
                p_384 = term;
                IStrategoTerm term923 = term;
                Success800:
                { 
                  Fail968:
                  { 
                    term = m_384;
                    lifted584 lifted5840 = new lifted584();
                    lifted5840.n_384 = n_384;
                    lifted5840.l_384 = l_384;
                    term = SRTS_some.instance.invoke(context, term, lifted5840);
                    if(term == null)
                      break Fail968;
                    o_384 = term;
                    { 
                      if(true)
                        break Fail967;
                      if(true)
                        break Success800;
                    }
                  }
                  term = term923;
                }
                term = p_384;
                { 
                  term = random_test.constNil0;
                  if(o_384 == null)
                    o_384 = term;
                  else
                    if(o_384 != term && !o_384.match(term))
                      break Fail966;
                  if(true)
                    break Success799;
                }
              }
              term = term922;
            }
            if(true)
              break Success798;
          }
          term = term921;
          IStrategoTerm s_384 = null;
          IStrategoTerm u_384 = null;
          IStrategoTerm x_384 = null;
          s_384 = term;
          term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
          if(term == null)
            break Fail965;
          u_384 = term;
          x_384 = s_384;
          term = report_with_failure_0_2.instance.invoke(context, x_384, random_test.const490, u_384);
          if(term == null)
            break Fail965;
        }
        term = v_384;
        if(o_384 == null)
          break Fail965;
        term = o_384;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class is_terminal_path_0_2 extends Strategy 
  { 
    public static is_terminal_path_0_2 instance = new is_terminal_path_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm ref_y_384, IStrategoTerm ref_z_384)
    { 
      TermReference y_384 = new TermReference(ref_y_384);
      TermReference z_384 = new TermReference(ref_z_384);
      context.push("is_terminal_path_0_2");
      Fail969:
      { 
        TermReference a_385 = new TermReference();
        if(a_385.value == null)
          a_385.value = term;
        else
          if(a_385.value != term && !a_385.value.match(term))
            break Fail969;
        if(a_385.value == null)
          break Fail969;
        term = filter_1_0.instance.invoke(context, a_385.value, lifted585.instance);
        if(term == null)
          break Fail969;
        lifted590 lifted5900 = new lifted590();
        lifted5900.y_384 = y_384;
        lifted5900.z_384 = z_384;
        term = filter_1_0.instance.invoke(context, term, lifted5900);
        if(term == null)
          break Fail969;
        if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
          break Fail969;
        lifted595 lifted5950 = new lifted595();
        lifted594 lifted5940 = new lifted594();
        lifted5950.y_384 = y_384;
        lifted5950.a_385 = a_385;
        lifted5940.y_384 = y_384;
        term = or_2_0.instance.invoke(context, term, lifted5940, lifted5950);
        if(term == null)
          break Fail969;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Greater$Terminal$Level_0_0 extends Strategy 
  { 
    public static $Greater$Terminal$Level_0_0 instance = new $Greater$Terminal$Level_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("GreaterTerminalLevel_0_0");
      Fail970:
      { 
        IStrategoTerm c_385 = null;
        TermReference d_385 = new TermReference();
        IStrategoTerm g_385 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail970;
        c_385 = term.getSubterm(0);
        if(d_385.value == null)
          d_385.value = term.getSubterm(1);
        else
          if(d_385.value != term.getSubterm(1) && !d_385.value.match(term.getSubterm(1)))
            break Fail970;
        g_385 = term;
        IStrategoTerm term931 = term;
        Success801:
        { 
          Fail971:
          { 
            term = bagof_$Terminal$Path_0_0.instance.invoke(context, c_385);
            if(term == null)
              break Fail971;
            lifted597 lifted5970 = new lifted597();
            lifted5970.d_385 = d_385;
            term = filter_1_0.instance.invoke(context, term, lifted5970);
            if(term == null)
              break Fail971;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail971;
            { 
              if(true)
                break Fail970;
              if(true)
                break Success801;
            }
          }
          term = term931;
        }
        term = g_385;
        if(d_385.value == null)
          break Fail970;
        term = termFactory.makeTuple(c_385, d_385.value);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_$Special$A$S$T$Term_cons_0_2 extends Strategy 
  { 
    public static get_$Special$A$S$T$Term_cons_0_2 instance = new get_$Special$A$S$T$Term_cons_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm h_385, IStrategoTerm i_385)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("get_SpecialASTTerm_cons_0_2");
      Fail972:
      { 
        IStrategoTerm j_385 = null;
        IStrategoTerm k_385 = null;
        IStrategoTerm l_385 = null;
        IStrategoTerm m_385 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail972;
        j_385 = term.getSubterm(0);
        k_385 = term.getSubterm(1);
        term = termFactory.makeTuple(j_385, k_385);
        term = $Special$A$S$T$Term_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail972;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTStart_1 != ((IStrategoAppl)term).getConstructor())
          break Fail972;
        IStrategoTerm arg368 = term.getSubterm(0);
        if(arg368.getTermType() != IStrategoTerm.APPL || random_test._consASTcons_2 != ((IStrategoAppl)arg368).getConstructor())
          break Fail972;
        l_385 = arg368.getSubterm(0);
        m_385 = arg368.getSubterm(1);
        term = get_$Special$A$S$T$Term_cons_rec_0_2.instance.invoke(context, m_385, h_385, i_385);
        if(term == null)
          break Fail972;
        term = number$Items_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail972;
        term = map_1_0.instance.invoke(context, term, lifted598.instance);
        if(term == null)
          break Fail972;
        term = termFactory.makeTuple(l_385, term);
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class get_$Special$A$S$T$Term_cons_rec_0_2 extends Strategy 
  { 
    public static get_$Special$A$S$T$Term_cons_rec_0_2 instance = new get_$Special$A$S$T$Term_cons_rec_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm b_706, IStrategoTerm c_706)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("get_SpecialASTTerm_cons_rec_0_2");
      Fail973:
      { 
        IStrategoTerm term933 = term;
        IStrategoConstructor cons73 = term.getTermType() == IStrategoTerm.APPL ? ((IStrategoAppl)term).getConstructor() : null;
        Success802:
        { 
          if(cons73 == random_test._consASTcons_2)
          { 
            Fail974:
            { 
              IStrategoTerm n_388 = null;
              IStrategoTerm o_388 = null;
              n_388 = term.getSubterm(0);
              o_388 = term.getSubterm(1);
              IStrategoTerm term934 = term;
              Success803:
              { 
                Fail975:
                { 
                  term = termFactory.makeTuple(n_388, o_388);
                  term = write_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail975;
                  term = (IStrategoTerm)termFactory.makeListCons(random_test.const491, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                  term = concat_strings_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail975;
                  term = debug_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail975;
                  if(true)
                    break Fail975;
                  if(true)
                    break Success803;
                }
                term = term934;
                IStrategoTerm p_388 = null;
                IStrategoTerm q_388 = null;
                IStrategoTerm v_388 = null;
                p_388 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail974;
                q_388 = term;
                v_388 = p_388;
                term = report_with_failure_0_2.instance.invoke(context, v_388, random_test.const492, q_388);
                if(term == null)
                  break Fail974;
              }
              term = n_388;
              if(true)
                break Success802;
            }
            term = term933;
          }
          Success804:
          { 
            if(cons73 == random_test._consASTid_1)
            { 
              Fail976:
              { 
                IStrategoTerm b_388 = null;
                b_388 = term.getSubterm(0);
                IStrategoTerm term936 = term;
                Success805:
                { 
                  Fail977:
                  { 
                    term = write_to_string_0_0.instance.invoke(context, b_388);
                    if(term == null)
                      break Fail977;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const493, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail977;
                    term = debug_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail977;
                    if(true)
                      break Success805;
                  }
                  term = term936;
                  IStrategoTerm c_388 = null;
                  IStrategoTerm d_388 = null;
                  IStrategoTerm i_388 = null;
                  c_388 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail976;
                  d_388 = term;
                  i_388 = c_388;
                  term = report_with_failure_0_2.instance.invoke(context, i_388, random_test.const492, d_388);
                  if(term == null)
                    break Fail976;
                }
                term = b_388;
                if(true)
                  break Success804;
              }
              term = term933;
            }
            Success806:
            { 
              if(cons73 == random_test._consASTstring_1)
              { 
                Fail978:
                { 
                  IStrategoTerm o_387 = null;
                  IStrategoTerm p_387 = null;
                  IStrategoTerm u_387 = null;
                  o_387 = term.getSubterm(0);
                  u_387 = term;
                  IStrategoTerm term938 = term;
                  Success807:
                  { 
                    Fail979:
                    { 
                      term = un_double_quote_0_0.instance.invoke(context, o_387);
                      if(term == null)
                        break Fail979;
                      p_387 = term;
                      if(true)
                        break Success807;
                    }
                    term = term938;
                    IStrategoTerm q_387 = null;
                    IStrategoTerm r_387 = null;
                    IStrategoTerm w_387 = null;
                    q_387 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail978;
                    r_387 = term;
                    w_387 = q_387;
                    term = report_with_failure_0_2.instance.invoke(context, w_387, random_test.const492, r_387);
                    if(term == null)
                      break Fail978;
                  }
                  term = u_387;
                  if(p_387 == null)
                    break Fail978;
                  term = p_387;
                  if(true)
                    break Success806;
                }
                term = term933;
              }
              Success808:
              { 
                if(cons73 == random_test._consASTint_1)
                { 
                  Fail980:
                  { 
                    IStrategoTerm d_387 = null;
                    IStrategoTerm e_387 = null;
                    IStrategoTerm h_387 = null;
                    d_387 = term.getSubterm(0);
                    h_387 = term;
                    IStrategoTerm term940 = term;
                    Success809:
                    { 
                      Fail981:
                      { 
                        term = string_to_int_0_0.instance.invoke(context, d_387);
                        if(term == null)
                          break Fail981;
                        e_387 = term;
                        if(true)
                          break Success809;
                      }
                      term = term940;
                      IStrategoTerm f_387 = null;
                      IStrategoTerm g_387 = null;
                      IStrategoTerm j_387 = null;
                      f_387 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail980;
                      g_387 = term;
                      j_387 = f_387;
                      term = report_with_failure_0_2.instance.invoke(context, j_387, random_test.const492, g_387);
                      if(term == null)
                        break Fail980;
                    }
                    term = h_387;
                    if(e_387 == null)
                      break Fail980;
                    term = e_387;
                    if(true)
                      break Success808;
                  }
                  term = term933;
                }
                IStrategoTerm term941 = term;
                Success810:
                { 
                  Fail982:
                  { 
                    IStrategoTerm l_386 = null;
                    IStrategoTerm m_386 = null;
                    TermReference n_386 = new TermReference();
                    IStrategoTerm o_386 = null;
                    IStrategoTerm p_386 = null;
                    IStrategoTerm q_386 = null;
                    IStrategoTerm t_386 = null;
                    if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTparam_1 != ((IStrategoAppl)term).getConstructor())
                      break Fail982;
                    l_386 = term.getSubterm(0);
                    t_386 = term;
                    IStrategoTerm term942 = term;
                    Success811:
                    { 
                      Fail983:
                      { 
                        term = filter_1_0.instance.invoke(context, b_706, lifted599.instance);
                        if(term == null)
                          break Fail983;
                        term = number$Items_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail983;
                        m_386 = term;
                        term = string_to_int_0_0.instance.invoke(context, l_386);
                        if(term == null)
                          break Fail983;
                        term = termFactory.makeTuple(term, random_test.const109);
                        term = addi_0_0.instance.invoke(context, term);
                        if(term == null)
                          break Fail983;
                        if(n_386.value == null)
                          n_386.value = term;
                        else
                          if(n_386.value != term && !n_386.value.match(term))
                            break Fail983;
                        term = m_386;
                        lifted601 lifted6010 = new lifted601();
                        lifted6010.n_386 = n_386;
                        term = filter_1_0.instance.invoke(context, term, lifted6010);
                        if(term == null)
                          break Fail983;
                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                          break Fail983;
                        IStrategoTerm arg372 = ((IStrategoList)term).head();
                        if(arg372.getTermType() != IStrategoTerm.TUPLE || arg372.getSubtermCount() != 2)
                          break Fail983;
                        o_386 = arg372.getSubterm(0);
                        term = number$Items_0_0.instance.invoke(context, c_706);
                        if(term == null)
                          break Fail983;
                        lifted602 lifted6020 = new lifted602();
                        lifted6020.n_386 = n_386;
                        term = filter_1_0.instance.invoke(context, term, lifted6020);
                        if(term == null)
                          break Fail983;
                        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                          break Fail983;
                        IStrategoTerm arg376 = ((IStrategoList)term).head();
                        if(arg376.getTermType() != IStrategoTerm.TUPLE || arg376.getSubtermCount() != 2)
                          break Fail983;
                        p_386 = arg376.getSubterm(0);
                        term = termFactory.makeTuple(o_386, p_386);
                        q_386 = term;
                        if(true)
                          break Success811;
                      }
                      term = term942;
                      IStrategoTerm r_386 = null;
                      IStrategoTerm s_386 = null;
                      IStrategoTerm x_386 = null;
                      r_386 = term;
                      term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                      if(term == null)
                        break Fail982;
                      s_386 = term;
                      x_386 = r_386;
                      term = report_with_failure_0_2.instance.invoke(context, x_386, random_test.const492, s_386);
                      if(term == null)
                        break Fail982;
                    }
                    term = t_386;
                    if(q_386 == null)
                      break Fail982;
                    term = q_386;
                    if(true)
                      break Success810;
                  }
                  term = term941;
                  IStrategoTerm y_385 = null;
                  if(term.getTermType() != IStrategoTerm.APPL || random_test._consASTlist_1 != ((IStrategoAppl)term).getConstructor())
                    break Fail973;
                  y_385 = term.getSubterm(0);
                  IStrategoTerm term943 = term;
                  Success812:
                  { 
                    Fail984:
                    { 
                      term = write_to_string_0_0.instance.invoke(context, y_385);
                      if(term == null)
                        break Fail984;
                      term = (IStrategoTerm)termFactory.makeListCons(random_test.const494, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                      term = concat_strings_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail984;
                      term = debug_0_0.instance.invoke(context, term);
                      if(term == null)
                        break Fail984;
                      if(true)
                        break Fail984;
                      if(true)
                        break Success812;
                    }
                    term = term943;
                    IStrategoTerm z_385 = null;
                    IStrategoTerm a_386 = null;
                    IStrategoTerm f_386 = null;
                    z_385 = term;
                    term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                    if(term == null)
                      break Fail973;
                    a_386 = term;
                    f_386 = z_385;
                    term = report_with_failure_0_2.instance.invoke(context, f_386, random_test.const492, a_386);
                    if(term == null)
                      break Fail973;
                  }
                  term = y_385;
                }
              }
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $N$B$L$Type_0_0 extends Strategy 
  { 
    public static $N$B$L$Type_0_0 instance = new $N$B$L$Type_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail985:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consNBLType_0 != ((IStrategoAppl)term).getConstructor())
          break Fail985;
        if(true)
          return term;
      }
      context.push("NBLType_0_0");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$Covered$Cons_0_0 extends Strategy 
  { 
    public static all_keys_$Covered$Cons_0_0 instance = new all_keys_$Covered$Cons_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_CoveredCons_0_0");
      Fail986:
      { 
        IStrategoTerm n_421 = null;
        n_421 = term;
        term = dr_all_keys_0_1.instance.invoke(context, n_421, random_test.const0);
        if(term == null)
          break Fail986;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Language_0_0 extends Strategy 
  { 
    public static $Language_0_0 instance = new $Language_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("Language_0_0");
      Fail987:
      { 
        TermReference s_428 = new TermReference();
        IStrategoTerm v_428 = null;
        IStrategoTerm x_428 = null;
        IStrategoTerm y_428 = null;
        if(s_428.value == null)
          s_428.value = term;
        else
          if(s_428.value != term && !s_428.value.match(term))
            break Fail987;
        x_428 = term;
        v_428 = random_test.const5;
        y_428 = x_428;
        term = dr_lookup_rule_0_2.instance.invoke(context, y_428, v_428, random_test.constCons0);
        if(term == null)
          break Fail987;
        lifted603 lifted6030 = new lifted603();
        lifted6030.s_428 = s_428;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6030);
        if(term == null)
          break Fail987;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Language_0_1 extends Strategy 
  { 
    public static aux_$Language_0_1 instance = new aux_$Language_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm z_428)
    { 
      Fail988:
      { 
        IStrategoTerm a_429 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail988;
        IStrategoTerm arg379 = term.getSubterm(0);
        if(arg379.getTermType() != IStrategoTerm.STRING || !"cb4758a53b8b6c3b7b9fa6226b718ce5".equals(((IStrategoString)arg379).stringValue()))
          break Fail988;
        a_429 = term.getSubterm(1);
        term = a_429;
        if(true)
          return term;
      }
      context.push("aux_Language_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Shrink$Error_0_0 extends Strategy 
  { 
    public static $Shrink$Error_0_0 instance = new $Shrink$Error_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ShrinkError_0_0");
      Fail989:
      { 
        TermReference z_432 = new TermReference();
        IStrategoTerm c_433 = null;
        IStrategoTerm e_433 = null;
        IStrategoTerm f_433 = null;
        if(z_432.value == null)
          z_432.value = term;
        else
          if(z_432.value != term && !z_432.value.match(term))
            break Fail989;
        e_433 = term;
        c_433 = random_test.const52;
        f_433 = e_433;
        term = dr_lookup_rule_0_2.instance.invoke(context, f_433, c_433, random_test.constCons0);
        if(term == null)
          break Fail989;
        lifted604 lifted6040 = new lifted604();
        lifted6040.z_432 = z_432;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6040);
        if(term == null)
          break Fail989;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Shrink$Error_0_1 extends Strategy 
  { 
    public static aux_$Shrink$Error_0_1 instance = new aux_$Shrink$Error_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm g_433)
    { 
      Fail990:
      { 
        IStrategoTerm h_433 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail990;
        IStrategoTerm arg380 = term.getSubterm(0);
        if(arg380.getTermType() != IStrategoTerm.STRING || !"4453ef394f228984eeb18d5f7a59b75b".equals(((IStrategoString)arg380).stringValue()))
          break Fail990;
        h_433 = term.getSubterm(1);
        term = h_433;
        if(true)
          return term;
      }
      context.push("aux_ShrinkError_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$N$B$L$Key2$Scope_0_0 extends Strategy 
  { 
    public static bagof_$N$B$L$Key2$Scope_0_0 instance = new bagof_$N$B$L$Key2$Scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_NBLKey2Scope_0_0");
      Fail991:
      { 
        TermReference v_436 = new TermReference();
        TermReference w_436 = new TermReference();
        if(w_436.value == null)
          w_436.value = term;
        else
          if(w_436.value != term && !w_436.value.match(term))
            break Fail991;
        if(v_436.value == null)
          v_436.value = term;
        else
          if(v_436.value != term && !v_436.value.match(term))
            break Fail991;
        Success813:
        { 
          Fail992:
          { 
            IStrategoTerm a_437 = null;
            a_437 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, a_437, random_test.const495, w_436.value);
            if(term == null)
              break Fail992;
            if(true)
              break Success813;
          }
          term = random_test.constNil0;
        }
        lifted605 lifted6050 = new lifted605();
        lifted6050.v_436 = v_436;
        lifted6050.w_436 = w_436;
        term = filter_1_0.instance.invoke(context, term, lifted6050);
        if(term == null)
          break Fail991;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $N$B$L$Key2$Scope_0_0 extends Strategy 
  { 
    public static $N$B$L$Key2$Scope_0_0 instance = new $N$B$L$Key2$Scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("NBLKey2Scope_0_0");
      Fail993:
      { 
        TermReference b_437 = new TermReference();
        TermReference c_437 = new TermReference();
        IStrategoTerm g_437 = null;
        if(c_437.value == null)
          c_437.value = term;
        else
          if(c_437.value != term && !c_437.value.match(term))
            break Fail993;
        if(b_437.value == null)
          b_437.value = term;
        else
          if(b_437.value != term && !b_437.value.match(term))
            break Fail993;
        g_437 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, g_437, random_test.const495, c_437.value);
        if(term == null)
          break Fail993;
        lifted606 lifted6060 = new lifted606();
        lifted6060.b_437 = b_437;
        lifted6060.c_437 = c_437;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6060);
        if(term == null)
          break Fail993;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$N$B$L$Key2$Scope_0_2 extends Strategy 
  { 
    public static aux_$N$B$L$Key2$Scope_0_2 instance = new aux_$N$B$L$Key2$Scope_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm h_437, IStrategoTerm i_437)
    { 
      Fail994:
      { 
        IStrategoTerm j_437 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail994;
        IStrategoTerm arg381 = term.getSubterm(0);
        if(arg381.getTermType() != IStrategoTerm.STRING || !"a0b74532998501e851dfefe6297ac94a".equals(((IStrategoString)arg381).stringValue()))
          break Fail994;
        j_437 = term.getSubterm(1);
        term = j_437;
        if(true)
          return term;
      }
      context.push("aux_NBLKey2Scope_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$N$B$L$Key2$Refer_0_0 extends Strategy 
  { 
    public static bagof_$N$B$L$Key2$Refer_0_0 instance = new bagof_$N$B$L$Key2$Refer_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_NBLKey2Refer_0_0");
      Fail995:
      { 
        TermReference f_453 = new TermReference();
        TermReference g_453 = new TermReference();
        if(g_453.value == null)
          g_453.value = term;
        else
          if(g_453.value != term && !g_453.value.match(term))
            break Fail995;
        if(f_453.value == null)
          f_453.value = term;
        else
          if(f_453.value != term && !f_453.value.match(term))
            break Fail995;
        Success814:
        { 
          Fail996:
          { 
            IStrategoTerm k_453 = null;
            k_453 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, k_453, random_test.const496, g_453.value);
            if(term == null)
              break Fail996;
            if(true)
              break Success814;
          }
          term = random_test.constNil0;
        }
        lifted607 lifted6070 = new lifted607();
        lifted6070.f_453 = f_453;
        lifted6070.g_453 = g_453;
        term = filter_1_0.instance.invoke(context, term, lifted6070);
        if(term == null)
          break Fail995;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$N$B$L$Key2$Refer_0_2 extends Strategy 
  { 
    public static aux_$N$B$L$Key2$Refer_0_2 instance = new aux_$N$B$L$Key2$Refer_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm r_453, IStrategoTerm s_453)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail997:
      { 
        IStrategoTerm t_453 = null;
        IStrategoTerm u_453 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail997;
        IStrategoTerm arg382 = term.getSubterm(0);
        if(arg382.getTermType() != IStrategoTerm.STRING || !"877f990873eeb7b077e641b6a0d1e72a".equals(((IStrategoString)arg382).stringValue()))
          break Fail997;
        t_453 = term.getSubterm(1);
        u_453 = term.getSubterm(2);
        term = termFactory.makeTuple(t_453, u_453);
        if(true)
          return term;
      }
      context.push("aux_NBLKey2Refer_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$N$B$L$Namespace2$Def$Key_0_0 extends Strategy 
  { 
    public static bagof_$N$B$L$Namespace2$Def$Key_0_0 instance = new bagof_$N$B$L$Namespace2$Def$Key_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_NBLNamespace2DefKey_0_0");
      Fail998:
      { 
        TermReference j_457 = new TermReference();
        TermReference k_457 = new TermReference();
        if(k_457.value == null)
          k_457.value = term;
        else
          if(k_457.value != term && !k_457.value.match(term))
            break Fail998;
        if(j_457.value == null)
          j_457.value = term;
        else
          if(j_457.value != term && !j_457.value.match(term))
            break Fail998;
        Success815:
        { 
          Fail999:
          { 
            IStrategoTerm o_457 = null;
            o_457 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, o_457, random_test.const497, k_457.value);
            if(term == null)
              break Fail999;
            if(true)
              break Success815;
          }
          term = random_test.constNil0;
        }
        lifted608 lifted6080 = new lifted608();
        lifted6080.j_457 = j_457;
        lifted6080.k_457 = k_457;
        term = filter_1_0.instance.invoke(context, term, lifted6080);
        if(term == null)
          break Fail998;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$N$B$L$Namespace2$Def$Key_0_2 extends Strategy 
  { 
    public static aux_$N$B$L$Namespace2$Def$Key_0_2 instance = new aux_$N$B$L$Namespace2$Def$Key_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm v_457, IStrategoTerm w_457)
    { 
      Fail1000:
      { 
        IStrategoTerm x_457 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1000;
        IStrategoTerm arg383 = term.getSubterm(0);
        if(arg383.getTermType() != IStrategoTerm.STRING || !"e6c2eb12ab19b78fb47f320be92e2cec".equals(((IStrategoString)arg383).stringValue()))
          break Fail1000;
        x_457 = term.getSubterm(1);
        term = x_457;
        if(true)
          return term;
      }
      context.push("aux_NBLNamespace2DefKey_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $N$B$L$Key2$Define_0_0 extends Strategy 
  { 
    public static $N$B$L$Key2$Define_0_0 instance = new $N$B$L$Key2$Define_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("NBLKey2Define_0_0");
      Fail1001:
      { 
        TermReference r_461 = new TermReference();
        TermReference s_461 = new TermReference();
        IStrategoTerm w_461 = null;
        if(s_461.value == null)
          s_461.value = term;
        else
          if(s_461.value != term && !s_461.value.match(term))
            break Fail1001;
        if(r_461.value == null)
          r_461.value = term;
        else
          if(r_461.value != term && !r_461.value.match(term))
            break Fail1001;
        w_461 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, w_461, random_test.const498, s_461.value);
        if(term == null)
          break Fail1001;
        lifted609 lifted6090 = new lifted609();
        lifted6090.r_461 = r_461;
        lifted6090.s_461 = s_461;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6090);
        if(term == null)
          break Fail1001;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$N$B$L$Key2$Define_0_2 extends Strategy 
  { 
    public static aux_$N$B$L$Key2$Define_0_2 instance = new aux_$N$B$L$Key2$Define_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm x_461, IStrategoTerm y_461)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1002:
      { 
        IStrategoTerm z_461 = null;
        IStrategoTerm a_462 = null;
        IStrategoTerm b_462 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 4)
          break Fail1002;
        IStrategoTerm arg384 = term.getSubterm(0);
        if(arg384.getTermType() != IStrategoTerm.STRING || !"f91accafae409de8c99b9e00b75eb4be".equals(((IStrategoString)arg384).stringValue()))
          break Fail1002;
        z_461 = term.getSubterm(1);
        a_462 = term.getSubterm(2);
        b_462 = term.getSubterm(3);
        term = termFactory.makeTuple(z_461, a_462, b_462);
        if(true)
          return term;
      }
      context.push("aux_NBLKey2Define_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Define$Parent$Sorts_0_0 extends Strategy 
  { 
    public static bagof_$Define$Parent$Sorts_0_0 instance = new bagof_$Define$Parent$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_DefineParentSorts_0_0");
      Fail1003:
      { 
        TermReference p_465 = new TermReference();
        TermReference q_465 = new TermReference();
        if(q_465.value == null)
          q_465.value = term;
        else
          if(q_465.value != term && !q_465.value.match(term))
            break Fail1003;
        if(p_465.value == null)
          p_465.value = term;
        else
          if(p_465.value != term && !p_465.value.match(term))
            break Fail1003;
        Success816:
        { 
          Fail1004:
          { 
            IStrategoTerm u_465 = null;
            u_465 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, u_465, random_test.const367, q_465.value);
            if(term == null)
              break Fail1004;
            if(true)
              break Success816;
          }
          term = random_test.constNil0;
        }
        lifted610 lifted6100 = new lifted610();
        lifted6100.p_465 = p_465;
        lifted6100.q_465 = q_465;
        term = filter_1_0.instance.invoke(context, term, lifted6100);
        if(term == null)
          break Fail1003;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Define$Parent$Sorts_0_2 extends Strategy 
  { 
    public static aux_$Define$Parent$Sorts_0_2 instance = new aux_$Define$Parent$Sorts_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm b_466, IStrategoTerm c_466)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1005:
      { 
        IStrategoTerm d_466 = null;
        IStrategoTerm e_466 = null;
        IStrategoTerm f_466 = null;
        IStrategoTerm g_466 = null;
        IStrategoTerm h_466 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 6)
          break Fail1005;
        IStrategoTerm arg385 = term.getSubterm(0);
        if(arg385.getTermType() != IStrategoTerm.STRING || !"a707cc2127b44214c281e34aff0e4e40".equals(((IStrategoString)arg385).stringValue()))
          break Fail1005;
        d_466 = term.getSubterm(1);
        e_466 = term.getSubterm(2);
        f_466 = term.getSubterm(3);
        g_466 = term.getSubterm(4);
        h_466 = term.getSubterm(5);
        term = termFactory.makeTuple(d_466, e_466, f_466, g_466, h_466);
        if(true)
          return term;
      }
      context.push("aux_DefineParentSorts_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Namespace_0_0 extends Strategy 
  { 
    public static bagof_$Namespace_0_0 instance = new bagof_$Namespace_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("bagof_Namespace_0_0");
      Fail1006:
      { 
        TermReference v_470 = new TermReference();
        TermReference w_470 = new TermReference();
        TermReference x_470 = new TermReference();
        if(v_470.value == null)
          v_470.value = term;
        else
          if(v_470.value != term && !v_470.value.match(term))
            break Fail1006;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1006;
        if(w_470.value == null)
          w_470.value = term.getSubterm(0);
        else
          if(w_470.value != term.getSubterm(0) && !w_470.value.match(term.getSubterm(0)))
            break Fail1006;
        if(x_470.value == null)
          x_470.value = term.getSubterm(1);
        else
          if(x_470.value != term.getSubterm(1) && !x_470.value.match(term.getSubterm(1)))
            break Fail1006;
        Success817:
        { 
          Fail1007:
          { 
            IStrategoTerm a_471 = null;
            IStrategoTerm c_471 = null;
            IStrategoTerm d_471 = null;
            c_471 = term;
            a_471 = random_test.const104;
            term = c_471;
            d_471 = c_471;
            if(w_470.value == null || x_470.value == null)
              break Fail1007;
            term = termFactory.annotateTerm(termFactory.makeTuple(w_470.value, x_470.value), checkListAnnos(termFactory, random_test.constCons0));
            term = dr_lookup_rule_0_2.instance.invoke(context, d_471, a_471, term);
            if(term == null)
              break Fail1007;
            if(true)
              break Success817;
          }
          term = random_test.constNil0;
        }
        lifted611 lifted6110 = new lifted611();
        lifted6110.w_470 = w_470;
        lifted6110.x_470 = x_470;
        lifted6110.v_470 = v_470;
        term = filter_1_0.instance.invoke(context, term, lifted6110);
        if(term == null)
          break Fail1006;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Namespace_0_3 extends Strategy 
  { 
    public static aux_$Namespace_0_3 instance = new aux_$Namespace_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm n_471, IStrategoTerm o_471, IStrategoTerm p_471)
    { 
      Fail1008:
      { 
        IStrategoTerm q_471 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1008;
        IStrategoTerm arg386 = term.getSubterm(0);
        if(arg386.getTermType() != IStrategoTerm.STRING || !"29807e2179871800322a2be958c2ece4".equals(((IStrategoString)arg386).stringValue()))
          break Fail1008;
        q_471 = term.getSubterm(1);
        term = q_471;
        if(true)
          return term;
      }
      context.push("aux_Namespace_0_3");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Scope2$Key_0_0 extends Strategy 
  { 
    public static $Scope2$Key_0_0 instance = new $Scope2$Key_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("Scope2Key_0_0");
      Fail1009:
      { 
        TermReference l_475 = new TermReference();
        TermReference m_475 = new TermReference();
        IStrategoTerm q_475 = null;
        if(m_475.value == null)
          m_475.value = term;
        else
          if(m_475.value != term && !m_475.value.match(term))
            break Fail1009;
        if(l_475.value == null)
          l_475.value = term;
        else
          if(l_475.value != term && !l_475.value.match(term))
            break Fail1009;
        q_475 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, q_475, random_test.const123, m_475.value);
        if(term == null)
          break Fail1009;
        lifted612 lifted6120 = new lifted612();
        lifted6120.l_475 = l_475;
        lifted6120.m_475 = m_475;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6120);
        if(term == null)
          break Fail1009;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Scope2$Key_0_2 extends Strategy 
  { 
    public static aux_$Scope2$Key_0_2 instance = new aux_$Scope2$Key_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm r_475, IStrategoTerm s_475)
    { 
      Fail1010:
      { 
        IStrategoTerm t_475 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1010;
        IStrategoTerm arg387 = term.getSubterm(0);
        if(arg387.getTermType() != IStrategoTerm.STRING || !"19a8cadc1549b9cd0f7a0c88cc6f55b3".equals(((IStrategoString)arg387).stringValue()))
          break Fail1010;
        t_475 = term.getSubterm(1);
        term = t_475;
        if(true)
          return term;
      }
      context.push("aux_Scope2Key_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Current$Scope_0_0 extends Strategy 
  { 
    public static bagof_$Current$Scope_0_0 instance = new bagof_$Current$Scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_CurrentScope_0_0");
      Fail1011:
      { 
        TermReference i_479 = new TermReference();
        TermReference j_479 = new TermReference();
        if(j_479.value == null)
          j_479.value = term;
        else
          if(j_479.value != term && !j_479.value.match(term))
            break Fail1011;
        if(i_479.value == null)
          i_479.value = term;
        else
          if(i_479.value != term && !i_479.value.match(term))
            break Fail1011;
        Success818:
        { 
          Fail1012:
          { 
            IStrategoTerm n_479 = null;
            n_479 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, n_479, random_test.const121, j_479.value);
            if(term == null)
              break Fail1012;
            if(true)
              break Success818;
          }
          term = random_test.constNil0;
        }
        lifted613 lifted6130 = new lifted613();
        lifted6130.i_479 = i_479;
        lifted6130.j_479 = j_479;
        term = filter_1_0.instance.invoke(context, term, lifted6130);
        if(term == null)
          break Fail1011;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Current$Scope_0_0 extends Strategy 
  { 
    public static $Current$Scope_0_0 instance = new $Current$Scope_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("CurrentScope_0_0");
      Fail1013:
      { 
        TermReference o_479 = new TermReference();
        TermReference p_479 = new TermReference();
        IStrategoTerm t_479 = null;
        if(p_479.value == null)
          p_479.value = term;
        else
          if(p_479.value != term && !p_479.value.match(term))
            break Fail1013;
        if(o_479.value == null)
          o_479.value = term;
        else
          if(o_479.value != term && !o_479.value.match(term))
            break Fail1013;
        t_479 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, t_479, random_test.const121, p_479.value);
        if(term == null)
          break Fail1013;
        lifted614 lifted6140 = new lifted614();
        lifted6140.o_479 = o_479;
        lifted6140.p_479 = p_479;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6140);
        if(term == null)
          break Fail1013;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Current$Scope_0_2 extends Strategy 
  { 
    public static aux_$Current$Scope_0_2 instance = new aux_$Current$Scope_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm u_479, IStrategoTerm v_479)
    { 
      Fail1014:
      { 
        IStrategoTerm w_479 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1014;
        IStrategoTerm arg388 = term.getSubterm(0);
        if(arg388.getTermType() != IStrategoTerm.STRING || !"a716b9f50b8d0864a4dee2efdf5526fb".equals(((IStrategoString)arg388).stringValue()))
          break Fail1014;
        w_479 = term.getSubterm(1);
        term = w_479;
        if(true)
          return term;
      }
      context.push("aux_CurrentScope_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$N$B$L$Injection_0_0 extends Strategy 
  { 
    public static all_keys_$N$B$L$Injection_0_0 instance = new all_keys_$N$B$L$Injection_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_NBLInjection_0_0");
      Fail1015:
      { 
        IStrategoTerm t_480 = null;
        t_480 = term;
        term = dr_all_keys_0_1.instance.invoke(context, t_480, random_test.const138);
        if(term == null)
          break Fail1015;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Error$Match$Param_0_0 extends Strategy 
  { 
    public static $Error$Match$Param_0_0 instance = new $Error$Match$Param_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("ErrorMatchParam_0_0");
      Fail1016:
      { 
        TermReference g_491 = new TermReference();
        TermReference h_491 = new TermReference();
        TermReference i_491 = new TermReference();
        IStrategoTerm l_491 = null;
        IStrategoTerm n_491 = null;
        IStrategoTerm o_491 = null;
        if(g_491.value == null)
          g_491.value = term;
        else
          if(g_491.value != term && !g_491.value.match(term))
            break Fail1016;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1016;
        if(h_491.value == null)
          h_491.value = term.getSubterm(0);
        else
          if(h_491.value != term.getSubterm(0) && !h_491.value.match(term.getSubterm(0)))
            break Fail1016;
        if(i_491.value == null)
          i_491.value = term.getSubterm(1);
        else
          if(i_491.value != term.getSubterm(1) && !i_491.value.match(term.getSubterm(1)))
            break Fail1016;
        n_491 = term;
        l_491 = random_test.const194;
        term = n_491;
        o_491 = n_491;
        if(h_491.value == null || i_491.value == null)
          break Fail1016;
        term = termFactory.annotateTerm(termFactory.makeTuple(h_491.value, i_491.value), checkListAnnos(termFactory, random_test.constCons0));
        term = dr_lookup_rule_0_2.instance.invoke(context, o_491, l_491, term);
        if(term == null)
          break Fail1016;
        lifted615 lifted6150 = new lifted615();
        lifted6150.h_491 = h_491;
        lifted6150.i_491 = i_491;
        lifted6150.g_491 = g_491;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6150);
        if(term == null)
          break Fail1016;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Error$Match$Param_0_3 extends Strategy 
  { 
    public static aux_$Error$Match$Param_0_3 instance = new aux_$Error$Match$Param_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm p_491, IStrategoTerm q_491, IStrategoTerm r_491)
    { 
      Fail1017:
      { 
        IStrategoTerm s_491 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1017;
        IStrategoTerm arg389 = term.getSubterm(0);
        if(arg389.getTermType() != IStrategoTerm.STRING || !"f12e5dfbbea6f2824ef5d0117b490a9e".equals(((IStrategoString)arg389).stringValue()))
          break Fail1017;
        s_491 = term.getSubterm(1);
        term = s_491;
        if(true)
          return term;
      }
      context.push("aux_ErrorMatchParam_0_3");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Max$Count_0_0 extends Strategy 
  { 
    public static $Max$Count_0_0 instance = new $Max$Count_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("MaxCount_0_0");
      Fail1018:
      { 
        TermReference y_499 = new TermReference();
        IStrategoTerm b_500 = null;
        IStrategoTerm d_500 = null;
        IStrategoTerm e_500 = null;
        if(y_499.value == null)
          y_499.value = term;
        else
          if(y_499.value != term && !y_499.value.match(term))
            break Fail1018;
        d_500 = term;
        b_500 = random_test.const197;
        e_500 = d_500;
        term = dr_lookup_rule_0_2.instance.invoke(context, e_500, b_500, random_test.constCons0);
        if(term == null)
          break Fail1018;
        lifted616 lifted6160 = new lifted616();
        lifted6160.y_499 = y_499;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6160);
        if(term == null)
          break Fail1018;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Max$Count_0_1 extends Strategy 
  { 
    public static aux_$Max$Count_0_1 instance = new aux_$Max$Count_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm f_500)
    { 
      Fail1019:
      { 
        IStrategoTerm g_500 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1019;
        IStrategoTerm arg390 = term.getSubterm(0);
        if(arg390.getTermType() != IStrategoTerm.STRING || !"716d0f58e0e875d0f13d47cd422da5f9".equals(((IStrategoString)arg390).stringValue()))
          break Fail1019;
        g_500 = term.getSubterm(1);
        term = g_500;
        if(true)
          return term;
      }
      context.push("aux_MaxCount_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Max$Iter_0_0 extends Strategy 
  { 
    public static $Max$Iter_0_0 instance = new $Max$Iter_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("MaxIter_0_0");
      Fail1020:
      { 
        TermReference f_504 = new TermReference();
        IStrategoTerm i_504 = null;
        IStrategoTerm k_504 = null;
        IStrategoTerm l_504 = null;
        if(f_504.value == null)
          f_504.value = term;
        else
          if(f_504.value != term && !f_504.value.match(term))
            break Fail1020;
        k_504 = term;
        i_504 = random_test.const200;
        l_504 = k_504;
        term = dr_lookup_rule_0_2.instance.invoke(context, l_504, i_504, random_test.constCons0);
        if(term == null)
          break Fail1020;
        lifted617 lifted6170 = new lifted617();
        lifted6170.f_504 = f_504;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6170);
        if(term == null)
          break Fail1020;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Max$Iter_0_1 extends Strategy 
  { 
    public static aux_$Max$Iter_0_1 instance = new aux_$Max$Iter_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm m_504)
    { 
      Fail1021:
      { 
        IStrategoTerm n_504 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1021;
        IStrategoTerm arg391 = term.getSubterm(0);
        if(arg391.getTermType() != IStrategoTerm.STRING || !"6a01faa7bd2aa4f50d7655df03720220".equals(((IStrategoString)arg391).stringValue()))
          break Fail1021;
        n_504 = term.getSubterm(1);
        term = n_504;
        if(true)
          return term;
      }
      context.push("aux_MaxIter_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Max$Rec_0_0 extends Strategy 
  { 
    public static $Max$Rec_0_0 instance = new $Max$Rec_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("MaxRec_0_0");
      Fail1022:
      { 
        TermReference m_508 = new TermReference();
        IStrategoTerm p_508 = null;
        IStrategoTerm r_508 = null;
        IStrategoTerm s_508 = null;
        if(m_508.value == null)
          m_508.value = term;
        else
          if(m_508.value != term && !m_508.value.match(term))
            break Fail1022;
        r_508 = term;
        p_508 = random_test.const202;
        s_508 = r_508;
        term = dr_lookup_rule_0_2.instance.invoke(context, s_508, p_508, random_test.constCons0);
        if(term == null)
          break Fail1022;
        lifted618 lifted6180 = new lifted618();
        lifted6180.m_508 = m_508;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6180);
        if(term == null)
          break Fail1022;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Max$Rec_0_1 extends Strategy 
  { 
    public static aux_$Max$Rec_0_1 instance = new aux_$Max$Rec_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm t_508)
    { 
      Fail1023:
      { 
        IStrategoTerm u_508 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1023;
        IStrategoTerm arg392 = term.getSubterm(0);
        if(arg392.getTermType() != IStrategoTerm.STRING || !"3e5bb57f445f6fcab904b577fc91c817".equals(((IStrategoString)arg392).stringValue()))
          break Fail1023;
        u_508 = term.getSubterm(1);
        term = u_508;
        if(true)
          return term;
      }
      context.push("aux_MaxRec_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Error$Source$Node$Pattern_0_0 extends Strategy 
  { 
    public static $Error$Source$Node$Pattern_0_0 instance = new $Error$Source$Node$Pattern_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ErrorSourceNodePattern_0_0");
      Fail1024:
      { 
        TermReference p_512 = new TermReference();
        TermReference q_512 = new TermReference();
        IStrategoTerm u_512 = null;
        if(q_512.value == null)
          q_512.value = term;
        else
          if(q_512.value != term && !q_512.value.match(term))
            break Fail1024;
        if(p_512.value == null)
          p_512.value = term;
        else
          if(p_512.value != term && !p_512.value.match(term))
            break Fail1024;
        u_512 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, u_512, random_test.const208, q_512.value);
        if(term == null)
          break Fail1024;
        lifted619 lifted6190 = new lifted619();
        lifted6190.p_512 = p_512;
        lifted6190.q_512 = q_512;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6190);
        if(term == null)
          break Fail1024;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Error$Source$Node$Pattern_0_2 extends Strategy 
  { 
    public static aux_$Error$Source$Node$Pattern_0_2 instance = new aux_$Error$Source$Node$Pattern_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm v_512, IStrategoTerm w_512)
    { 
      Fail1025:
      { 
        IStrategoTerm x_512 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1025;
        IStrategoTerm arg393 = term.getSubterm(0);
        if(arg393.getTermType() != IStrategoTerm.STRING || !"de05d957507371263b5d7c598e512c70".equals(((IStrategoString)arg393).stringValue()))
          break Fail1025;
        x_512 = term.getSubterm(1);
        term = x_512;
        if(true)
          return term;
      }
      context.push("aux_ErrorSourceNodePattern_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Error$Correcting$Action_0_0 extends Strategy 
  { 
    public static $Error$Correcting$Action_0_0 instance = new $Error$Correcting$Action_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ErrorCorrectingAction_0_0");
      Fail1026:
      { 
        TermReference s_516 = new TermReference();
        TermReference t_516 = new TermReference();
        IStrategoTerm x_516 = null;
        if(t_516.value == null)
          t_516.value = term;
        else
          if(t_516.value != term && !t_516.value.match(term))
            break Fail1026;
        if(s_516.value == null)
          s_516.value = term;
        else
          if(s_516.value != term && !s_516.value.match(term))
            break Fail1026;
        x_516 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, x_516, random_test.const206, t_516.value);
        if(term == null)
          break Fail1026;
        lifted620 lifted6200 = new lifted620();
        lifted6200.s_516 = s_516;
        lifted6200.t_516 = t_516;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6200);
        if(term == null)
          break Fail1026;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Error$Correcting$Action_0_2 extends Strategy 
  { 
    public static aux_$Error$Correcting$Action_0_2 instance = new aux_$Error$Correcting$Action_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm y_516, IStrategoTerm z_516)
    { 
      Fail1027:
      { 
        IStrategoTerm a_517 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1027;
        IStrategoTerm arg394 = term.getSubterm(0);
        if(arg394.getTermType() != IStrategoTerm.STRING || !"d33e2d4a9230200ad5cf3bb6d6bf80f8".equals(((IStrategoString)arg394).stringValue()))
          break Fail1027;
        a_517 = term.getSubterm(1);
        term = a_517;
        if(true)
          return term;
      }
      context.push("aux_ErrorCorrectingAction_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$Error$Message$Pattern_0_0 extends Strategy 
  { 
    public static all_keys_$Error$Message$Pattern_0_0 instance = new all_keys_$Error$Message$Pattern_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_ErrorMessagePattern_0_0");
      Fail1028:
      { 
        IStrategoTerm x_517 = null;
        x_517 = term;
        term = dr_all_keys_0_1.instance.invoke(context, x_517, random_test.const204);
        if(term == null)
          break Fail1028;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Error$Message$Pattern_0_0 extends Strategy 
  { 
    public static $Error$Message$Pattern_0_0 instance = new $Error$Message$Pattern_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ErrorMessagePattern_0_0");
      Fail1029:
      { 
        TermReference v_520 = new TermReference();
        TermReference w_520 = new TermReference();
        IStrategoTerm a_521 = null;
        if(w_520.value == null)
          w_520.value = term;
        else
          if(w_520.value != term && !w_520.value.match(term))
            break Fail1029;
        if(v_520.value == null)
          v_520.value = term;
        else
          if(v_520.value != term && !v_520.value.match(term))
            break Fail1029;
        a_521 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, a_521, random_test.const204, w_520.value);
        if(term == null)
          break Fail1029;
        lifted621 lifted6210 = new lifted621();
        lifted6210.v_520 = v_520;
        lifted6210.w_520 = w_520;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6210);
        if(term == null)
          break Fail1029;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Error$Message$Pattern_0_2 extends Strategy 
  { 
    public static aux_$Error$Message$Pattern_0_2 instance = new aux_$Error$Message$Pattern_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm b_521, IStrategoTerm c_521)
    { 
      Fail1030:
      { 
        IStrategoTerm d_521 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1030;
        IStrategoTerm arg395 = term.getSubterm(0);
        if(arg395.getTermType() != IStrategoTerm.STRING || !"b0b830816ded043b6b604cd822388e50".equals(((IStrategoString)arg395).stringValue()))
          break Fail1030;
        d_521 = term.getSubterm(1);
        term = d_521;
        if(true)
          return term;
      }
      context.push("aux_ErrorMessagePattern_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Terminal$Pool$Size_0_0 extends Strategy 
  { 
    public static $Terminal$Pool$Size_0_0 instance = new $Terminal$Pool$Size_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("TerminalPoolSize_0_0");
      Fail1031:
      { 
        TermReference c_525 = new TermReference();
        IStrategoTerm f_525 = null;
        IStrategoTerm h_525 = null;
        IStrategoTerm i_525 = null;
        if(c_525.value == null)
          c_525.value = term;
        else
          if(c_525.value != term && !c_525.value.match(term))
            break Fail1031;
        h_525 = term;
        f_525 = random_test.const210;
        i_525 = h_525;
        term = dr_lookup_rule_0_2.instance.invoke(context, i_525, f_525, random_test.constCons0);
        if(term == null)
          break Fail1031;
        lifted622 lifted6220 = new lifted622();
        lifted6220.c_525 = c_525;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6220);
        if(term == null)
          break Fail1031;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Terminal$Pool$Size_0_1 extends Strategy 
  { 
    public static aux_$Terminal$Pool$Size_0_1 instance = new aux_$Terminal$Pool$Size_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm j_525)
    { 
      Fail1032:
      { 
        IStrategoTerm k_525 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1032;
        IStrategoTerm arg396 = term.getSubterm(0);
        if(arg396.getTermType() != IStrategoTerm.STRING || !"c6dece83570595c50b251eeb1f8296be".equals(((IStrategoString)arg396).stringValue()))
          break Fail1032;
        k_525 = term.getSubterm(1);
        term = k_525;
        if(true)
          return term;
      }
      context.push("aux_TerminalPoolSize_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Number$Of$Runs_0_0 extends Strategy 
  { 
    public static $Number$Of$Runs_0_0 instance = new $Number$Of$Runs_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("NumberOfRuns_0_0");
      Fail1033:
      { 
        TermReference j_529 = new TermReference();
        IStrategoTerm m_529 = null;
        IStrategoTerm o_529 = null;
        IStrategoTerm p_529 = null;
        if(j_529.value == null)
          j_529.value = term;
        else
          if(j_529.value != term && !j_529.value.match(term))
            break Fail1033;
        o_529 = term;
        m_529 = random_test.const212;
        p_529 = o_529;
        term = dr_lookup_rule_0_2.instance.invoke(context, p_529, m_529, random_test.constCons0);
        if(term == null)
          break Fail1033;
        lifted623 lifted6230 = new lifted623();
        lifted6230.j_529 = j_529;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6230);
        if(term == null)
          break Fail1033;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Number$Of$Runs_0_1 extends Strategy 
  { 
    public static aux_$Number$Of$Runs_0_1 instance = new aux_$Number$Of$Runs_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm q_529)
    { 
      Fail1034:
      { 
        IStrategoTerm r_529 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1034;
        IStrategoTerm arg397 = term.getSubterm(0);
        if(arg397.getTermType() != IStrategoTerm.STRING || !"e67c14690cc9dbd3a15d4a5e2e55f5e5".equals(((IStrategoString)arg397).stringValue()))
          break Fail1034;
        r_529 = term.getSubterm(1);
        term = r_529;
        if(true)
          return term;
      }
      context.push("aux_NumberOfRuns_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Ignore$Sorts_0_0 extends Strategy 
  { 
    public static $Ignore$Sorts_0_0 instance = new $Ignore$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("IgnoreSorts_0_0");
      Fail1035:
      { 
        TermReference h_546 = new TermReference();
        TermReference i_546 = new TermReference();
        IStrategoTerm m_546 = null;
        if(i_546.value == null)
          i_546.value = term;
        else
          if(i_546.value != term && !i_546.value.match(term))
            break Fail1035;
        if(h_546.value == null)
          h_546.value = term;
        else
          if(h_546.value != term && !h_546.value.match(term))
            break Fail1035;
        m_546 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, m_546, random_test.const220, i_546.value);
        if(term == null)
          break Fail1035;
        lifted624 lifted6240 = new lifted624();
        lifted6240.h_546 = h_546;
        lifted6240.i_546 = i_546;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6240);
        if(term == null)
          break Fail1035;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Ignore$Sorts_0_2 extends Strategy 
  { 
    public static aux_$Ignore$Sorts_0_2 instance = new aux_$Ignore$Sorts_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm n_546, IStrategoTerm o_546)
    { 
      Fail1036:
      { 
        IStrategoTerm p_546 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1036;
        IStrategoTerm arg398 = term.getSubterm(0);
        if(arg398.getTermType() != IStrategoTerm.STRING || !"3448bd6cca8033dd5c5f22a19b9fa896".equals(((IStrategoString)arg398).stringValue()))
          break Fail1036;
        p_546 = term.getSubterm(1);
        term = p_546;
        if(true)
          return term;
      }
      context.push("aux_IgnoreSorts_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Xeger$Count_0_0 extends Strategy 
  { 
    public static $Xeger$Count_0_0 instance = new $Xeger$Count_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("XegerCount_0_0");
      Fail1037:
      { 
        TermReference v_554 = new TermReference();
        IStrategoTerm y_554 = null;
        IStrategoTerm a_555 = null;
        IStrategoTerm b_555 = null;
        if(v_554.value == null)
          v_554.value = term;
        else
          if(v_554.value != term && !v_554.value.match(term))
            break Fail1037;
        a_555 = term;
        y_554 = random_test.const282;
        b_555 = a_555;
        term = dr_lookup_rule_0_2.instance.invoke(context, b_555, y_554, random_test.constCons0);
        if(term == null)
          break Fail1037;
        lifted625 lifted6250 = new lifted625();
        lifted6250.v_554 = v_554;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6250);
        if(term == null)
          break Fail1037;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Xeger$Count_0_1 extends Strategy 
  { 
    public static aux_$Xeger$Count_0_1 instance = new aux_$Xeger$Count_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm c_555)
    { 
      Fail1038:
      { 
        IStrategoTerm d_555 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1038;
        IStrategoTerm arg399 = term.getSubterm(0);
        if(arg399.getTermType() != IStrategoTerm.STRING || !"3655ebb6e8cd63c195fd52919e4ec36a".equals(((IStrategoString)arg399).stringValue()))
          break Fail1038;
        d_555 = term.getSubterm(1);
        term = d_555;
        if(true)
          return term;
      }
      context.push("aux_XegerCount_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Terminals_0_0 extends Strategy 
  { 
    public static bagof_$Terminals_0_0 instance = new bagof_$Terminals_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_Terminals_0_0");
      Fail1039:
      { 
        TermReference s_558 = new TermReference();
        TermReference t_558 = new TermReference();
        if(t_558.value == null)
          t_558.value = term;
        else
          if(t_558.value != term && !t_558.value.match(term))
            break Fail1039;
        if(s_558.value == null)
          s_558.value = term;
        else
          if(s_558.value != term && !s_558.value.match(term))
            break Fail1039;
        Success819:
        { 
          Fail1040:
          { 
            IStrategoTerm x_558 = null;
            x_558 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, x_558, random_test.const285, t_558.value);
            if(term == null)
              break Fail1040;
            if(true)
              break Success819;
          }
          term = random_test.constNil0;
        }
        lifted626 lifted6260 = new lifted626();
        lifted6260.s_558 = s_558;
        lifted6260.t_558 = t_558;
        term = filter_1_0.instance.invoke(context, term, lifted6260);
        if(term == null)
          break Fail1039;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Terminals_0_2 extends Strategy 
  { 
    public static aux_$Terminals_0_2 instance = new aux_$Terminals_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm e_559, IStrategoTerm f_559)
    { 
      Fail1041:
      { 
        IStrategoTerm g_559 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1041;
        IStrategoTerm arg400 = term.getSubterm(0);
        if(arg400.getTermType() != IStrategoTerm.STRING || !"4a9661844fb136d71a707952cd97200f".equals(((IStrategoString)arg400).stringValue()))
          break Fail1041;
        g_559 = term.getSubterm(1);
        term = g_559;
        if(true)
          return term;
      }
      context.push("aux_Terminals_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class lex_to_dr_$Count_0_0 extends Strategy 
  { 
    public static lex_to_dr_$Count_0_0 instance = new lex_to_dr_$Count_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("lex_to_dr_Count_0_0");
      Fail1042:
      { 
        TermReference f_563 = new TermReference();
        IStrategoTerm i_563 = null;
        IStrategoTerm k_563 = null;
        IStrategoTerm l_563 = null;
        if(f_563.value == null)
          f_563.value = term;
        else
          if(f_563.value != term && !f_563.value.match(term))
            break Fail1042;
        k_563 = term;
        i_563 = random_test.const287;
        l_563 = k_563;
        term = dr_lookup_rule_0_2.instance.invoke(context, l_563, i_563, random_test.constCons0);
        if(term == null)
          break Fail1042;
        lifted627 lifted6270 = new lifted627();
        lifted6270.f_563 = f_563;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6270);
        if(term == null)
          break Fail1042;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_lex_to_dr_$Count_0_1 extends Strategy 
  { 
    public static aux_lex_to_dr_$Count_0_1 instance = new aux_lex_to_dr_$Count_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm m_563)
    { 
      Fail1043:
      { 
        IStrategoTerm n_563 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1043;
        IStrategoTerm arg401 = term.getSubterm(0);
        if(arg401.getTermType() != IStrategoTerm.STRING || !"5ba3a675e39f5606ed5a2eef7564ed33".equals(((IStrategoString)arg401).stringValue()))
          break Fail1043;
        n_563 = term.getSubterm(1);
        term = n_563;
        if(true)
          return term;
      }
      context.push("aux_lex_to_dr_Count_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Cons$Count_0_0 extends Strategy 
  { 
    public static $Cons$Count_0_0 instance = new $Cons$Count_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ConsCount_0_0");
      Fail1044:
      { 
        TermReference m_567 = new TermReference();
        IStrategoTerm p_567 = null;
        IStrategoTerm r_567 = null;
        IStrategoTerm s_567 = null;
        if(m_567.value == null)
          m_567.value = term;
        else
          if(m_567.value != term && !m_567.value.match(term))
            break Fail1044;
        r_567 = term;
        p_567 = random_test.const305;
        s_567 = r_567;
        term = dr_lookup_rule_0_2.instance.invoke(context, s_567, p_567, random_test.constCons0);
        if(term == null)
          break Fail1044;
        lifted628 lifted6280 = new lifted628();
        lifted6280.m_567 = m_567;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6280);
        if(term == null)
          break Fail1044;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Cons$Count_0_1 extends Strategy 
  { 
    public static aux_$Cons$Count_0_1 instance = new aux_$Cons$Count_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm t_567)
    { 
      Fail1045:
      { 
        IStrategoTerm u_567 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1045;
        IStrategoTerm arg402 = term.getSubterm(0);
        if(arg402.getTermType() != IStrategoTerm.STRING || !"04faa4572cdeaca89425bd450a3b6e8d".equals(((IStrategoString)arg402).stringValue()))
          break Fail1045;
        u_567 = term.getSubterm(1);
        term = u_567;
        if(true)
          return term;
      }
      context.push("aux_ConsCount_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Prod$Weight_0_0 extends Strategy 
  { 
    public static $Prod$Weight_0_0 instance = new $Prod$Weight_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ProdWeight_0_0");
      Fail1046:
      { 
        TermReference t_571 = new TermReference();
        IStrategoTerm w_571 = null;
        IStrategoTerm y_571 = null;
        IStrategoTerm z_571 = null;
        if(t_571.value == null)
          t_571.value = term;
        else
          if(t_571.value != term && !t_571.value.match(term))
            break Fail1046;
        if(term.getTermType() != IStrategoTerm.STRING || !"echt niet".equals(((IStrategoString)term).stringValue()))
          break Fail1046;
        y_571 = term;
        w_571 = random_test.const301;
        z_571 = y_571;
        term = dr_lookup_rule_0_2.instance.invoke(context, z_571, w_571, random_test.const303);
        if(term == null)
          break Fail1046;
        lifted629 lifted6290 = new lifted629();
        lifted6290.t_571 = t_571;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6290);
        if(term == null)
          break Fail1046;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Prod$Weight_0_1 extends Strategy 
  { 
    public static aux_$Prod$Weight_0_1 instance = new aux_$Prod$Weight_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm a_572)
    { 
      Fail1047:
      { 
        if(term.getTermType() != IStrategoTerm.STRING || !"f72a5b434ce176f667d38c7389d5dd50".equals(((IStrategoString)term).stringValue()))
          break Fail1047;
        term = random_test.const186;
        if(true)
          return term;
      }
      context.push("aux_ProdWeight_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Shrink$Sort_0_0 extends Strategy 
  { 
    public static bagof_$Shrink$Sort_0_0 instance = new bagof_$Shrink$Sort_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_ShrinkSort_0_0");
      Fail1048:
      { 
        TermReference p_575 = new TermReference();
        TermReference q_575 = new TermReference();
        if(q_575.value == null)
          q_575.value = term;
        else
          if(q_575.value != term && !q_575.value.match(term))
            break Fail1048;
        if(p_575.value == null)
          p_575.value = term;
        else
          if(p_575.value != term && !p_575.value.match(term))
            break Fail1048;
        Success820:
        { 
          Fail1049:
          { 
            IStrategoTerm u_575 = null;
            u_575 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, u_575, random_test.const325, q_575.value);
            if(term == null)
              break Fail1049;
            if(true)
              break Success820;
          }
          term = random_test.constNil0;
        }
        lifted630 lifted6300 = new lifted630();
        lifted6300.p_575 = p_575;
        lifted6300.q_575 = q_575;
        term = filter_1_0.instance.invoke(context, term, lifted6300);
        if(term == null)
          break Fail1048;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Shrink$Sort_0_2 extends Strategy 
  { 
    public static aux_$Shrink$Sort_0_2 instance = new aux_$Shrink$Sort_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm b_576, IStrategoTerm c_576)
    { 
      Fail1050:
      { 
        IStrategoTerm d_576 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1050;
        IStrategoTerm arg403 = term.getSubterm(0);
        if(arg403.getTermType() != IStrategoTerm.STRING || !"54c63850a86ddda2c48c2c548b8d267e".equals(((IStrategoString)arg403).stringValue()))
          break Fail1050;
        d_576 = term.getSubterm(1);
        term = d_576;
        if(true)
          return term;
      }
      context.push("aux_ShrinkSort_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Chance$Of$Failure_0_0 extends Strategy 
  { 
    public static $Chance$Of$Failure_0_0 instance = new $Chance$Of$Failure_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ChanceOfFailure_0_0");
      Fail1051:
      { 
        TermReference c_580 = new TermReference();
        IStrategoTerm f_580 = null;
        IStrategoTerm h_580 = null;
        IStrategoTerm i_580 = null;
        if(c_580.value == null)
          c_580.value = term;
        else
          if(c_580.value != term && !c_580.value.match(term))
            break Fail1051;
        h_580 = term;
        f_580 = random_test.const362;
        i_580 = h_580;
        term = dr_lookup_rule_0_2.instance.invoke(context, i_580, f_580, random_test.constCons0);
        if(term == null)
          break Fail1051;
        lifted631 lifted6310 = new lifted631();
        lifted6310.c_580 = c_580;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6310);
        if(term == null)
          break Fail1051;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Chance$Of$Failure_0_1 extends Strategy 
  { 
    public static aux_$Chance$Of$Failure_0_1 instance = new aux_$Chance$Of$Failure_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm j_580)
    { 
      Fail1052:
      { 
        IStrategoTerm k_580 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1052;
        IStrategoTerm arg404 = term.getSubterm(0);
        if(arg404.getTermType() != IStrategoTerm.STRING || !"62ce95a088baea8ed88b95690537813a".equals(((IStrategoString)arg404).stringValue()))
          break Fail1052;
        k_580 = term.getSubterm(1);
        term = k_580;
        if(true)
          return term;
      }
      context.push("aux_ChanceOfFailure_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Non$Injectable_0_0 extends Strategy 
  { 
    public static $Non$Injectable_0_0 instance = new $Non$Injectable_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("NonInjectable_0_0");
      Fail1053:
      { 
        IStrategoTerm term952 = term;
        Success821:
        { 
          Fail1054:
          { 
            TermReference a_606 = new TermReference();
            TermReference b_606 = new TermReference();
            TermReference c_606 = new TermReference();
            TermReference d_606 = new TermReference();
            TermReference e_606 = new TermReference();
            TermReference f_606 = new TermReference();
            IStrategoTerm i_606 = null;
            IStrategoTerm k_606 = null;
            IStrategoTerm l_606 = null;
            if(f_606.value == null)
              f_606.value = term;
            else
              if(f_606.value != term && !f_606.value.match(term))
                break Fail1054;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail1054;
            IStrategoTerm arg405 = term.getSubterm(0);
            if(arg405.getTermType() != IStrategoTerm.TUPLE || arg405.getSubtermCount() != 2)
              break Fail1054;
            IStrategoTerm arg406 = arg405.getSubterm(0);
            if(arg406.getTermType() != IStrategoTerm.STRING || !"ForCountStmt".equals(((IStrategoString)arg406).stringValue()))
              break Fail1054;
            IStrategoList annos12 = arg406.getAnnotations();
            if(a_606.value == null)
              a_606.value = annos12;
            else
              if(a_606.value != annos12 && !a_606.value.match(annos12))
                break Fail1054;
            IStrategoTerm arg407 = arg405.getSubterm(1);
            if(arg407.getTermType() != IStrategoTerm.INT || 4 != ((IStrategoInt)arg407).intValue())
              break Fail1054;
            IStrategoList annos13 = arg407.getAnnotations();
            if(b_606.value == null)
              b_606.value = annos13;
            else
              if(b_606.value != annos13 && !b_606.value.match(annos13))
                break Fail1054;
            IStrategoList annos11 = arg405.getAnnotations();
            if(c_606.value == null)
              c_606.value = annos11;
            else
              if(c_606.value != annos11 && !c_606.value.match(annos11))
                break Fail1054;
            IStrategoTerm arg408 = term.getSubterm(1);
            if(arg408.getTermType() != IStrategoTerm.STRING || !"Var".equals(((IStrategoString)arg408).stringValue()))
              break Fail1054;
            IStrategoList annos14 = arg408.getAnnotations();
            if(d_606.value == null)
              d_606.value = annos14;
            else
              if(d_606.value != annos14 && !d_606.value.match(annos14))
                break Fail1054;
            IStrategoList annos10 = term.getAnnotations();
            if(e_606.value == null)
              e_606.value = annos10;
            else
              if(e_606.value != annos10 && !e_606.value.match(annos10))
                break Fail1054;
            k_606 = term;
            i_606 = random_test.const329;
            l_606 = k_606;
            term = dr_lookup_rule_0_2.instance.invoke(context, l_606, i_606, random_test.const360);
            if(term == null)
              break Fail1054;
            lifted632 lifted6320 = new lifted632();
            lifted6320.a_606 = a_606;
            lifted6320.b_606 = b_606;
            lifted6320.c_606 = c_606;
            lifted6320.d_606 = d_606;
            lifted6320.e_606 = e_606;
            lifted6320.f_606 = f_606;
            term = fetch_elem_1_0.instance.invoke(context, term, lifted6320);
            if(term == null)
              break Fail1054;
            if(true)
              break Success821;
          }
          term = term952;
          IStrategoTerm term953 = term;
          Success822:
          { 
            Fail1055:
            { 
              TermReference o_605 = new TermReference();
              TermReference p_605 = new TermReference();
              TermReference q_605 = new TermReference();
              TermReference r_605 = new TermReference();
              TermReference s_605 = new TermReference();
              TermReference t_605 = new TermReference();
              IStrategoTerm w_605 = null;
              IStrategoTerm y_605 = null;
              IStrategoTerm z_605 = null;
              if(t_605.value == null)
                t_605.value = term;
              else
                if(t_605.value != term && !t_605.value.match(term))
                  break Fail1055;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail1055;
              IStrategoTerm arg409 = term.getSubterm(0);
              if(arg409.getTermType() != IStrategoTerm.TUPLE || arg409.getSubtermCount() != 2)
                break Fail1055;
              IStrategoTerm arg410 = arg409.getSubterm(0);
              if(arg410.getTermType() != IStrategoTerm.STRING || !"ForCount".equals(((IStrategoString)arg410).stringValue()))
                break Fail1055;
              IStrategoList annos17 = arg410.getAnnotations();
              if(o_605.value == null)
                o_605.value = annos17;
              else
                if(o_605.value != annos17 && !o_605.value.match(annos17))
                  break Fail1055;
              IStrategoTerm arg411 = arg409.getSubterm(1);
              if(arg411.getTermType() != IStrategoTerm.INT || 5 != ((IStrategoInt)arg411).intValue())
                break Fail1055;
              IStrategoList annos18 = arg411.getAnnotations();
              if(p_605.value == null)
                p_605.value = annos18;
              else
                if(p_605.value != annos18 && !p_605.value.match(annos18))
                  break Fail1055;
              IStrategoList annos16 = arg409.getAnnotations();
              if(q_605.value == null)
                q_605.value = annos16;
              else
                if(q_605.value != annos16 && !q_605.value.match(annos16))
                  break Fail1055;
              IStrategoTerm arg412 = term.getSubterm(1);
              if(arg412.getTermType() != IStrategoTerm.STRING || !"Var".equals(((IStrategoString)arg412).stringValue()))
                break Fail1055;
              IStrategoList annos19 = arg412.getAnnotations();
              if(r_605.value == null)
                r_605.value = annos19;
              else
                if(r_605.value != annos19 && !r_605.value.match(annos19))
                  break Fail1055;
              IStrategoList annos15 = term.getAnnotations();
              if(s_605.value == null)
                s_605.value = annos15;
              else
                if(s_605.value != annos15 && !s_605.value.match(annos15))
                  break Fail1055;
              y_605 = term;
              w_605 = random_test.const329;
              z_605 = y_605;
              term = dr_lookup_rule_0_2.instance.invoke(context, z_605, w_605, random_test.const353);
              if(term == null)
                break Fail1055;
              lifted633 lifted6330 = new lifted633();
              lifted6330.o_605 = o_605;
              lifted6330.p_605 = p_605;
              lifted6330.q_605 = q_605;
              lifted6330.r_605 = r_605;
              lifted6330.s_605 = s_605;
              lifted6330.t_605 = t_605;
              term = fetch_elem_1_0.instance.invoke(context, term, lifted6330);
              if(term == null)
                break Fail1055;
              if(true)
                break Success822;
            }
            term = term953;
            IStrategoTerm term954 = term;
            Success823:
            { 
              Fail1056:
              { 
                TermReference c_605 = new TermReference();
                TermReference d_605 = new TermReference();
                TermReference e_605 = new TermReference();
                TermReference f_605 = new TermReference();
                TermReference g_605 = new TermReference();
                TermReference h_605 = new TermReference();
                IStrategoTerm k_605 = null;
                IStrategoTerm m_605 = null;
                IStrategoTerm n_605 = null;
                if(h_605.value == null)
                  h_605.value = term;
                else
                  if(h_605.value != term && !h_605.value.match(term))
                    break Fail1056;
                if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                  break Fail1056;
                IStrategoTerm arg413 = term.getSubterm(0);
                if(arg413.getTermType() != IStrategoTerm.TUPLE || arg413.getSubtermCount() != 2)
                  break Fail1056;
                IStrategoTerm arg414 = arg413.getSubterm(0);
                if(arg414.getTermType() != IStrategoTerm.STRING || !"ForCount".equals(((IStrategoString)arg414).stringValue()))
                  break Fail1056;
                IStrategoList annos22 = arg414.getAnnotations();
                if(c_605.value == null)
                  c_605.value = annos22;
                else
                  if(c_605.value != annos22 && !c_605.value.match(annos22))
                    break Fail1056;
                IStrategoTerm arg415 = arg413.getSubterm(1);
                if(arg415.getTermType() != IStrategoTerm.INT || 4 != ((IStrategoInt)arg415).intValue())
                  break Fail1056;
                IStrategoList annos23 = arg415.getAnnotations();
                if(d_605.value == null)
                  d_605.value = annos23;
                else
                  if(d_605.value != annos23 && !d_605.value.match(annos23))
                    break Fail1056;
                IStrategoList annos21 = arg413.getAnnotations();
                if(e_605.value == null)
                  e_605.value = annos21;
                else
                  if(e_605.value != annos21 && !e_605.value.match(annos21))
                    break Fail1056;
                IStrategoTerm arg416 = term.getSubterm(1);
                if(arg416.getTermType() != IStrategoTerm.STRING || !"Var".equals(((IStrategoString)arg416).stringValue()))
                  break Fail1056;
                IStrategoList annos24 = arg416.getAnnotations();
                if(f_605.value == null)
                  f_605.value = annos24;
                else
                  if(f_605.value != annos24 && !f_605.value.match(annos24))
                    break Fail1056;
                IStrategoList annos20 = term.getAnnotations();
                if(g_605.value == null)
                  g_605.value = annos20;
                else
                  if(g_605.value != annos20 && !g_605.value.match(annos20))
                    break Fail1056;
                m_605 = term;
                k_605 = random_test.const329;
                n_605 = m_605;
                term = dr_lookup_rule_0_2.instance.invoke(context, n_605, k_605, random_test.const348);
                if(term == null)
                  break Fail1056;
                lifted634 lifted6340 = new lifted634();
                lifted6340.c_605 = c_605;
                lifted6340.d_605 = d_605;
                lifted6340.e_605 = e_605;
                lifted6340.f_605 = f_605;
                lifted6340.g_605 = g_605;
                lifted6340.h_605 = h_605;
                term = fetch_elem_1_0.instance.invoke(context, term, lifted6340);
                if(term == null)
                  break Fail1056;
                if(true)
                  break Success823;
              }
              term = term954;
              TermReference q_604 = new TermReference();
              TermReference r_604 = new TermReference();
              TermReference s_604 = new TermReference();
              TermReference t_604 = new TermReference();
              TermReference u_604 = new TermReference();
              TermReference v_604 = new TermReference();
              IStrategoTerm y_604 = null;
              IStrategoTerm a_605 = null;
              IStrategoTerm b_605 = null;
              if(v_604.value == null)
                v_604.value = term;
              else
                if(v_604.value != term && !v_604.value.match(term))
                  break Fail1053;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail1053;
              IStrategoTerm arg417 = term.getSubterm(0);
              if(arg417.getTermType() != IStrategoTerm.TUPLE || arg417.getSubtermCount() != 2)
                break Fail1053;
              IStrategoTerm arg418 = arg417.getSubterm(0);
              if(arg418.getTermType() != IStrategoTerm.STRING || !"ForExp".equals(((IStrategoString)arg418).stringValue()))
                break Fail1053;
              IStrategoList annos27 = arg418.getAnnotations();
              if(q_604.value == null)
                q_604.value = annos27;
              else
                if(q_604.value != annos27 && !q_604.value.match(annos27))
                  break Fail1053;
              IStrategoTerm arg419 = arg417.getSubterm(1);
              if(arg419.getTermType() != IStrategoTerm.INT || 5 != ((IStrategoInt)arg419).intValue())
                break Fail1053;
              IStrategoList annos28 = arg419.getAnnotations();
              if(r_604.value == null)
                r_604.value = annos28;
              else
                if(r_604.value != annos28 && !r_604.value.match(annos28))
                  break Fail1053;
              IStrategoList annos26 = arg417.getAnnotations();
              if(s_604.value == null)
                s_604.value = annos26;
              else
                if(s_604.value != annos26 && !s_604.value.match(annos26))
                  break Fail1053;
              IStrategoTerm arg420 = term.getSubterm(1);
              if(arg420.getTermType() != IStrategoTerm.STRING || !"Var".equals(((IStrategoString)arg420).stringValue()))
                break Fail1053;
              IStrategoList annos29 = arg420.getAnnotations();
              if(t_604.value == null)
                t_604.value = annos29;
              else
                if(t_604.value != annos29 && !t_604.value.match(annos29))
                  break Fail1053;
              IStrategoList annos25 = term.getAnnotations();
              if(u_604.value == null)
                u_604.value = annos25;
              else
                if(u_604.value != annos25 && !u_604.value.match(annos25))
                  break Fail1053;
              a_605 = term;
              y_604 = random_test.const329;
              b_605 = a_605;
              term = dr_lookup_rule_0_2.instance.invoke(context, b_605, y_604, random_test.const339);
              if(term == null)
                break Fail1053;
              lifted635 lifted6350 = new lifted635();
              lifted6350.q_604 = q_604;
              lifted6350.r_604 = r_604;
              lifted6350.s_604 = s_604;
              lifted6350.t_604 = t_604;
              lifted6350.u_604 = u_604;
              lifted6350.v_604 = v_604;
              term = fetch_elem_1_0.instance.invoke(context, term, lifted6350);
              if(term == null)
                break Fail1053;
            }
          }
        }
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Non$Injectable_0_6 extends Strategy 
  { 
    public static aux_$Non$Injectable_0_6 instance = new aux_$Non$Injectable_0_6();

    public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm k_706, IStrategoTerm l_706, IStrategoTerm m_706, IStrategoTerm n_706, IStrategoTerm o_706, IStrategoTerm p_706)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1057:
      { 
        IStrategoTerm term955 = term;
        Success824:
        { 
          Fail1058:
          { 
            if(term.getTermType() != IStrategoTerm.STRING || !"3ec1936960274cd2386e4d831c36685e".equals(((IStrategoString)term).stringValue()))
              break Fail1058;
            term = termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(random_test.const355, checkListAnnos(termFactory, k_706)), termFactory.annotateTerm(random_test.const343, checkListAnnos(termFactory, l_706))), checkListAnnos(termFactory, m_706)), termFactory.annotateTerm(random_test.const336, checkListAnnos(termFactory, n_706))), checkListAnnos(termFactory, o_706));
            if(true)
              break Success824;
          }
          term = term955;
          IStrategoTerm term956 = term;
          Success825:
          { 
            Fail1059:
            { 
              if(term.getTermType() != IStrategoTerm.STRING || !"26c321e708ee3c908bfacbb9e48f4f93".equals(((IStrategoString)term).stringValue()))
                break Fail1059;
              term = termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(random_test.const341, checkListAnnos(termFactory, k_706)), termFactory.annotateTerm(random_test.const332, checkListAnnos(termFactory, l_706))), checkListAnnos(termFactory, m_706)), termFactory.annotateTerm(random_test.const336, checkListAnnos(termFactory, n_706))), checkListAnnos(termFactory, o_706));
              if(true)
                break Success825;
            }
            term = term956;
            IStrategoTerm term957 = term;
            Success826:
            { 
              Fail1060:
              { 
                if(term.getTermType() != IStrategoTerm.STRING || !"1ffa474f6bdf1f8fdec5547b4d2afb93".equals(((IStrategoString)term).stringValue()))
                  break Fail1060;
                term = termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(random_test.const341, checkListAnnos(termFactory, k_706)), termFactory.annotateTerm(random_test.const343, checkListAnnos(termFactory, l_706))), checkListAnnos(termFactory, m_706)), termFactory.annotateTerm(random_test.const336, checkListAnnos(termFactory, n_706))), checkListAnnos(termFactory, o_706));
                if(true)
                  break Success826;
              }
              term = term957;
              if(term.getTermType() != IStrategoTerm.STRING || !"0d199a2cbdd2fcc735551787f70cffbb".equals(((IStrategoString)term).stringValue()))
                break Fail1057;
              term = termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(termFactory.makeTuple(termFactory.annotateTerm(random_test.const330, checkListAnnos(termFactory, k_706)), termFactory.annotateTerm(random_test.const332, checkListAnnos(termFactory, l_706))), checkListAnnos(termFactory, m_706)), termFactory.annotateTerm(random_test.const336, checkListAnnos(termFactory, n_706))), checkListAnnos(termFactory, o_706));
            }
          }
        }
        if(true)
          return term;
      }
      context.push("aux_NonInjectable_0_6");
      context.popOnFailure();
      return null;
    }

    @Override public IStrategoTerm invokeDynamic(Context context, IStrategoTerm term, Strategy[] sargs, IStrategoTerm[] targs)
    { 
      if(sargs == null || targs == null || sargs.length != 0 || targs.length != 6)
        throw new IllegalArgumentException("Illegal arguments for " + getName());
      return invoke(context, term, targs[0], targs[1], targs[2], targs[3], targs[4], targs[5]);
    }
  }

  @SuppressWarnings("all") public static class $Item$Count_0_0 extends Strategy 
  { 
    public static $Item$Count_0_0 instance = new $Item$Count_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ItemCount_0_0");
      Fail1061:
      { 
        TermReference p_611 = new TermReference();
        IStrategoTerm s_611 = null;
        IStrategoTerm u_611 = null;
        IStrategoTerm v_611 = null;
        if(p_611.value == null)
          p_611.value = term;
        else
          if(p_611.value != term && !p_611.value.match(term))
            break Fail1061;
        u_611 = term;
        s_611 = random_test.const410;
        v_611 = u_611;
        term = dr_lookup_rule_0_2.instance.invoke(context, v_611, s_611, random_test.constCons0);
        if(term == null)
          break Fail1061;
        lifted636 lifted6360 = new lifted636();
        lifted6360.p_611 = p_611;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6360);
        if(term == null)
          break Fail1061;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Item$Count_0_1 extends Strategy 
  { 
    public static aux_$Item$Count_0_1 instance = new aux_$Item$Count_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm w_611)
    { 
      Fail1062:
      { 
        IStrategoTerm x_611 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1062;
        IStrategoTerm arg421 = term.getSubterm(0);
        if(arg421.getTermType() != IStrategoTerm.STRING || !"898bdb61c01849bf871e5b4c26f2ea19".equals(((IStrategoString)arg421).stringValue()))
          break Fail1062;
        x_611 = term.getSubterm(1);
        term = x_611;
        if(true)
          return term;
      }
      context.push("aux_ItemCount_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Loop$Iterator_0_0 extends Strategy 
  { 
    public static $Loop$Iterator_0_0 instance = new $Loop$Iterator_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("LoopIterator_0_0");
      Fail1063:
      { 
        TermReference w_615 = new TermReference();
        IStrategoTerm z_615 = null;
        IStrategoTerm b_616 = null;
        IStrategoTerm c_616 = null;
        if(w_615.value == null)
          w_615.value = term;
        else
          if(w_615.value != term && !w_615.value.match(term))
            break Fail1063;
        b_616 = term;
        z_615 = random_test.const422;
        c_616 = b_616;
        term = dr_lookup_rule_0_2.instance.invoke(context, c_616, z_615, random_test.constCons0);
        if(term == null)
          break Fail1063;
        lifted637 lifted6370 = new lifted637();
        lifted6370.w_615 = w_615;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6370);
        if(term == null)
          break Fail1063;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Loop$Iterator_0_1 extends Strategy 
  { 
    public static aux_$Loop$Iterator_0_1 instance = new aux_$Loop$Iterator_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm d_616)
    { 
      Fail1064:
      { 
        IStrategoTerm e_616 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1064;
        IStrategoTerm arg422 = term.getSubterm(0);
        if(arg422.getTermType() != IStrategoTerm.STRING || !"cb75f42c4441461007f5441a2a142117".equals(((IStrategoString)arg422).stringValue()))
          break Fail1064;
        e_616 = term.getSubterm(1);
        term = e_616;
        if(true)
          return term;
      }
      context.push("aux_LoopIterator_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Fix$Runtag_0_0 extends Strategy 
  { 
    public static $Fix$Runtag_0_0 instance = new $Fix$Runtag_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("FixRuntag_0_0");
      Fail1065:
      { 
        TermReference d_620 = new TermReference();
        IStrategoTerm g_620 = null;
        IStrategoTerm i_620 = null;
        IStrategoTerm j_620 = null;
        if(d_620.value == null)
          d_620.value = term;
        else
          if(d_620.value != term && !d_620.value.match(term))
            break Fail1065;
        i_620 = term;
        g_620 = random_test.const425;
        j_620 = i_620;
        term = dr_lookup_rule_0_2.instance.invoke(context, j_620, g_620, random_test.constCons0);
        if(term == null)
          break Fail1065;
        lifted638 lifted6380 = new lifted638();
        lifted6380.d_620 = d_620;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6380);
        if(term == null)
          break Fail1065;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Fix$Runtag_0_1 extends Strategy 
  { 
    public static aux_$Fix$Runtag_0_1 instance = new aux_$Fix$Runtag_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm k_620)
    { 
      Fail1066:
      { 
        IStrategoTerm l_620 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1066;
        IStrategoTerm arg423 = term.getSubterm(0);
        if(arg423.getTermType() != IStrategoTerm.STRING || !"de839153517e0fdbe73297f30682f9a0".equals(((IStrategoString)arg423).stringValue()))
          break Fail1066;
        l_620 = term.getSubterm(1);
        term = l_620;
        if(true)
          return term;
      }
      context.push("aux_FixRuntag_0_1");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$S$D$F$Start_0_0 extends Strategy 
  { 
    public static all_keys_$S$D$F$Start_0_0 instance = new all_keys_$S$D$F$Start_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_SDFStart_0_0");
      Fail1067:
      { 
        IStrategoTerm i_621 = null;
        i_621 = term;
        term = dr_all_keys_0_1.instance.invoke(context, i_621, random_test.const427);
        if(term == null)
          break Fail1067;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $All$Cons$Count_0_0 extends Strategy 
  { 
    public static $All$Cons$Count_0_0 instance = new $All$Cons$Count_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("AllConsCount_0_0");
      Fail1068:
      { 
        TermReference z_628 = new TermReference();
        IStrategoTerm d_629 = null;
        IStrategoTerm f_629 = null;
        IStrategoTerm g_629 = null;
        if(z_628.value == null)
          z_628.value = term;
        else
          if(z_628.value != term && !z_628.value.match(term))
            break Fail1068;
        term = all_keys_$Cons$Key_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1068;
        term = nub_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1068;
        term = length_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1068;
        f_629 = term;
        d_629 = random_test.const432;
        g_629 = f_629;
        term = dr_lookup_rule_0_2.instance.invoke(context, g_629, d_629, random_test.const273);
        if(term == null)
          break Fail1068;
        lifted639 lifted6390 = new lifted639();
        lifted6390.z_628 = z_628;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6390);
        if(term == null)
          break Fail1068;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$All$Cons$Count_0_1 extends Strategy 
  { 
    public static aux_$All$Cons$Count_0_1 instance = new aux_$All$Cons$Count_0_1();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm h_629)
    { 
      context.push("aux_AllConsCount_0_1");
      Fail1069:
      { 
        if(term.getTermType() != IStrategoTerm.STRING || !"98db4464c2cccbcc12d02a4889cb974a".equals(((IStrategoString)term).stringValue()))
          break Fail1069;
        term = all_keys_$Cons$Key_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1069;
        term = nub_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1069;
        term = length_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1069;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$Priority_0_0 extends Strategy 
  { 
    public static all_keys_$Priority_0_0 instance = new all_keys_$Priority_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_Priority_0_0");
      Fail1070:
      { 
        IStrategoTerm g_630 = null;
        g_630 = term;
        term = dr_all_keys_0_1.instance.invoke(context, g_630, random_test.const442);
        if(term == null)
          break Fail1070;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Priority_0_0 extends Strategy 
  { 
    public static bagof_$Priority_0_0 instance = new bagof_$Priority_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("bagof_Priority_0_0");
      Fail1071:
      { 
        TermReference i_634 = new TermReference();
        TermReference j_634 = new TermReference();
        TermReference k_634 = new TermReference();
        TermReference l_634 = new TermReference();
        if(i_634.value == null)
          i_634.value = term;
        else
          if(i_634.value != term && !i_634.value.match(term))
            break Fail1071;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail1071;
        if(j_634.value == null)
          j_634.value = term.getSubterm(0);
        else
          if(j_634.value != term.getSubterm(0) && !j_634.value.match(term.getSubterm(0)))
            break Fail1071;
        if(k_634.value == null)
          k_634.value = term.getSubterm(1);
        else
          if(k_634.value != term.getSubterm(1) && !k_634.value.match(term.getSubterm(1)))
            break Fail1071;
        if(l_634.value == null)
          l_634.value = term.getSubterm(2);
        else
          if(l_634.value != term.getSubterm(2) && !l_634.value.match(term.getSubterm(2)))
            break Fail1071;
        Success827:
        { 
          Fail1072:
          { 
            IStrategoTerm o_634 = null;
            IStrategoTerm q_634 = null;
            IStrategoTerm r_634 = null;
            q_634 = term;
            o_634 = random_test.const442;
            term = q_634;
            r_634 = q_634;
            if(j_634.value == null || (k_634.value == null || l_634.value == null))
              break Fail1072;
            term = termFactory.annotateTerm(termFactory.makeTuple(j_634.value, k_634.value, l_634.value), checkListAnnos(termFactory, random_test.constCons0));
            term = dr_lookup_rule_0_2.instance.invoke(context, r_634, o_634, term);
            if(term == null)
              break Fail1072;
            if(true)
              break Success827;
          }
          term = random_test.constNil0;
        }
        lifted640 lifted6400 = new lifted640();
        lifted6400.j_634 = j_634;
        lifted6400.k_634 = k_634;
        lifted6400.l_634 = l_634;
        lifted6400.i_634 = i_634;
        term = filter_1_0.instance.invoke(context, term, lifted6400);
        if(term == null)
          break Fail1071;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Priority_0_4 extends Strategy 
  { 
    public static aux_$Priority_0_4 instance = new aux_$Priority_0_4();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm c_635, IStrategoTerm d_635, IStrategoTerm e_635, IStrategoTerm f_635)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1073:
      { 
        IStrategoTerm g_635 = null;
        IStrategoTerm h_635 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail1073;
        IStrategoTerm arg424 = term.getSubterm(0);
        if(arg424.getTermType() != IStrategoTerm.STRING || !"a94d5e483b04bd6f7dea6e96077a2823".equals(((IStrategoString)arg424).stringValue()))
          break Fail1073;
        g_635 = term.getSubterm(1);
        h_635 = term.getSubterm(2);
        term = termFactory.makeTuple(g_635, h_635);
        if(true)
          return term;
      }
      context.push("aux_Priority_0_4");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Modules$Read_0_0 extends Strategy 
  { 
    public static $Modules$Read_0_0 instance = new $Modules$Read_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ModulesRead_0_0");
      Fail1074:
      { 
        TermReference c_639 = new TermReference();
        TermReference d_639 = new TermReference();
        IStrategoTerm h_639 = null;
        if(d_639.value == null)
          d_639.value = term;
        else
          if(d_639.value != term && !d_639.value.match(term))
            break Fail1074;
        if(c_639.value == null)
          c_639.value = term;
        else
          if(c_639.value != term && !c_639.value.match(term))
            break Fail1074;
        h_639 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, h_639, random_test.const445, d_639.value);
        if(term == null)
          break Fail1074;
        lifted641 lifted6410 = new lifted641();
        lifted6410.c_639 = c_639;
        lifted6410.d_639 = d_639;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6410);
        if(term == null)
          break Fail1074;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Modules$Read_0_2 extends Strategy 
  { 
    public static aux_$Modules$Read_0_2 instance = new aux_$Modules$Read_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm i_639, IStrategoTerm j_639)
    { 
      Fail1075:
      { 
        IStrategoTerm k_639 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1075;
        IStrategoTerm arg425 = term.getSubterm(0);
        if(arg425.getTermType() != IStrategoTerm.STRING || !"f1c7ef52cbe396fd1e7a9635a8531fce".equals(((IStrategoString)arg425).stringValue()))
          break Fail1075;
        k_639 = term.getSubterm(1);
        term = k_639;
        if(true)
          return term;
      }
      context.push("aux_ModulesRead_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$Lex$Sorts_0_0 extends Strategy 
  { 
    public static all_keys_$Lex$Sorts_0_0 instance = new all_keys_$Lex$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_LexSorts_0_0");
      Fail1076:
      { 
        IStrategoTerm k_644 = null;
        k_644 = term;
        term = dr_all_keys_0_1.instance.invoke(context, k_644, random_test.const454);
        if(term == null)
          break Fail1076;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Lex$Sorts_0_0 extends Strategy 
  { 
    public static bagof_$Lex$Sorts_0_0 instance = new bagof_$Lex$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_LexSorts_0_0");
      Fail1077:
      { 
        TermReference c_647 = new TermReference();
        TermReference d_647 = new TermReference();
        if(d_647.value == null)
          d_647.value = term;
        else
          if(d_647.value != term && !d_647.value.match(term))
            break Fail1077;
        if(c_647.value == null)
          c_647.value = term;
        else
          if(c_647.value != term && !c_647.value.match(term))
            break Fail1077;
        Success828:
        { 
          Fail1078:
          { 
            IStrategoTerm h_647 = null;
            h_647 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, h_647, random_test.const454, d_647.value);
            if(term == null)
              break Fail1078;
            if(true)
              break Success828;
          }
          term = random_test.constNil0;
        }
        lifted642 lifted6420 = new lifted642();
        lifted6420.c_647 = c_647;
        lifted6420.d_647 = d_647;
        term = filter_1_0.instance.invoke(context, term, lifted6420);
        if(term == null)
          break Fail1077;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Lex$Sorts_0_0 extends Strategy 
  { 
    public static $Lex$Sorts_0_0 instance = new $Lex$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("LexSorts_0_0");
      Fail1079:
      { 
        TermReference i_647 = new TermReference();
        TermReference j_647 = new TermReference();
        IStrategoTerm n_647 = null;
        if(j_647.value == null)
          j_647.value = term;
        else
          if(j_647.value != term && !j_647.value.match(term))
            break Fail1079;
        if(i_647.value == null)
          i_647.value = term;
        else
          if(i_647.value != term && !i_647.value.match(term))
            break Fail1079;
        n_647 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, n_647, random_test.const454, j_647.value);
        if(term == null)
          break Fail1079;
        lifted643 lifted6430 = new lifted643();
        lifted6430.i_647 = i_647;
        lifted6430.j_647 = j_647;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6430);
        if(term == null)
          break Fail1079;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Lex$Sorts_0_2 extends Strategy 
  { 
    public static aux_$Lex$Sorts_0_2 instance = new aux_$Lex$Sorts_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm o_647, IStrategoTerm p_647)
    { 
      Fail1080:
      { 
        IStrategoTerm q_647 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1080;
        IStrategoTerm arg426 = term.getSubterm(0);
        if(arg426.getTermType() != IStrategoTerm.STRING || !"4e038c5b61a9db81cfdae62c6bed0dc0".equals(((IStrategoString)arg426).stringValue()))
          break Fail1080;
        q_647 = term.getSubterm(1);
        term = q_647;
        if(true)
          return term;
      }
      context.push("aux_LexSorts_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Cons$Lex_0_0 extends Strategy 
  { 
    public static $Cons$Lex_0_0 instance = new $Cons$Lex_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ConsLex_0_0");
      Fail1081:
      { 
        TermReference l_651 = new TermReference();
        TermReference m_651 = new TermReference();
        IStrategoTerm q_651 = null;
        if(m_651.value == null)
          m_651.value = term;
        else
          if(m_651.value != term && !m_651.value.match(term))
            break Fail1081;
        if(l_651.value == null)
          l_651.value = term;
        else
          if(l_651.value != term && !l_651.value.match(term))
            break Fail1081;
        q_651 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, q_651, random_test.const461, m_651.value);
        if(term == null)
          break Fail1081;
        lifted644 lifted6440 = new lifted644();
        lifted6440.l_651 = l_651;
        lifted6440.m_651 = m_651;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6440);
        if(term == null)
          break Fail1081;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Cons$Lex_0_2 extends Strategy 
  { 
    public static aux_$Cons$Lex_0_2 instance = new aux_$Cons$Lex_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm r_651, IStrategoTerm s_651)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1082:
      { 
        IStrategoTerm t_651 = null;
        IStrategoTerm u_651 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail1082;
        IStrategoTerm arg427 = term.getSubterm(0);
        if(arg427.getTermType() != IStrategoTerm.STRING || !"bedf4bb47878ec0803106bf68ba11695".equals(((IStrategoString)arg427).stringValue()))
          break Fail1082;
        t_651 = term.getSubterm(1);
        u_651 = term.getSubterm(2);
        term = termFactory.makeTuple(t_651, u_651);
        if(true)
          return term;
      }
      context.push("aux_ConsLex_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Lex$Cons_0_0 extends Strategy 
  { 
    public static $Lex$Cons_0_0 instance = new $Lex$Cons_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("LexCons_0_0");
      Fail1083:
      { 
        TermReference r_656 = new TermReference();
        TermReference s_656 = new TermReference();
        TermReference t_656 = new TermReference();
        IStrategoTerm w_656 = null;
        IStrategoTerm y_656 = null;
        IStrategoTerm z_656 = null;
        if(r_656.value == null)
          r_656.value = term;
        else
          if(r_656.value != term && !r_656.value.match(term))
            break Fail1083;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1083;
        if(s_656.value == null)
          s_656.value = term.getSubterm(0);
        else
          if(s_656.value != term.getSubterm(0) && !s_656.value.match(term.getSubterm(0)))
            break Fail1083;
        if(t_656.value == null)
          t_656.value = term.getSubterm(1);
        else
          if(t_656.value != term.getSubterm(1) && !t_656.value.match(term.getSubterm(1)))
            break Fail1083;
        y_656 = term;
        w_656 = random_test.const459;
        term = y_656;
        z_656 = y_656;
        if(s_656.value == null || t_656.value == null)
          break Fail1083;
        term = termFactory.annotateTerm(termFactory.makeTuple(s_656.value, t_656.value), checkListAnnos(termFactory, random_test.constCons0));
        term = dr_lookup_rule_0_2.instance.invoke(context, z_656, w_656, term);
        if(term == null)
          break Fail1083;
        lifted645 lifted6450 = new lifted645();
        lifted6450.s_656 = s_656;
        lifted6450.t_656 = t_656;
        lifted6450.r_656 = r_656;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6450);
        if(term == null)
          break Fail1083;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Lex$Cons_0_3 extends Strategy 
  { 
    public static aux_$Lex$Cons_0_3 instance = new aux_$Lex$Cons_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm a_657, IStrategoTerm b_657, IStrategoTerm c_657)
    { 
      Fail1084:
      { 
        IStrategoTerm d_657 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1084;
        IStrategoTerm arg428 = term.getSubterm(0);
        if(arg428.getTermType() != IStrategoTerm.STRING || !"36369641d789d13ba4c5ef686f73821b".equals(((IStrategoString)arg428).stringValue()))
          break Fail1084;
        d_657 = term.getSubterm(1);
        term = d_657;
        if(true)
          return term;
      }
      context.push("aux_LexCons_0_3");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Lex$Reject_0_0 extends Strategy 
  { 
    public static bagof_$Lex$Reject_0_0 instance = new bagof_$Lex$Reject_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_LexReject_0_0");
      Fail1085:
      { 
        TermReference s_660 = new TermReference();
        TermReference t_660 = new TermReference();
        if(t_660.value == null)
          t_660.value = term;
        else
          if(t_660.value != term && !t_660.value.match(term))
            break Fail1085;
        if(s_660.value == null)
          s_660.value = term;
        else
          if(s_660.value != term && !s_660.value.match(term))
            break Fail1085;
        Success829:
        { 
          Fail1086:
          { 
            IStrategoTerm x_660 = null;
            x_660 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, x_660, random_test.const464, t_660.value);
            if(term == null)
              break Fail1086;
            if(true)
              break Success829;
          }
          term = random_test.constNil0;
        }
        lifted646 lifted6460 = new lifted646();
        lifted6460.s_660 = s_660;
        lifted6460.t_660 = t_660;
        term = filter_1_0.instance.invoke(context, term, lifted6460);
        if(term == null)
          break Fail1085;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Lex$Reject_0_2 extends Strategy 
  { 
    public static aux_$Lex$Reject_0_2 instance = new aux_$Lex$Reject_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm e_661, IStrategoTerm f_661)
    { 
      Fail1087:
      { 
        IStrategoTerm g_661 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1087;
        IStrategoTerm arg429 = term.getSubterm(0);
        if(arg429.getTermType() != IStrategoTerm.STRING || !"fd988e82a862e9aeb20303762a91df8e".equals(((IStrategoString)arg429).stringValue()))
          break Fail1087;
        g_661 = term.getSubterm(1);
        term = g_661;
        if(true)
          return term;
      }
      context.push("aux_LexReject_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$C$F$Sorts_0_0 extends Strategy 
  { 
    public static all_keys_$C$F$Sorts_0_0 instance = new all_keys_$C$F$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_CFSorts_0_0");
      Fail1088:
      { 
        IStrategoTerm q_671 = null;
        q_671 = term;
        term = dr_all_keys_0_1.instance.invoke(context, q_671, random_test.const466);
        if(term == null)
          break Fail1088;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$C$F$Sorts_0_0 extends Strategy 
  { 
    public static bagof_$C$F$Sorts_0_0 instance = new bagof_$C$F$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_CFSorts_0_0");
      Fail1089:
      { 
        TermReference i_674 = new TermReference();
        TermReference j_674 = new TermReference();
        if(j_674.value == null)
          j_674.value = term;
        else
          if(j_674.value != term && !j_674.value.match(term))
            break Fail1089;
        if(i_674.value == null)
          i_674.value = term;
        else
          if(i_674.value != term && !i_674.value.match(term))
            break Fail1089;
        Success830:
        { 
          Fail1090:
          { 
            IStrategoTerm n_674 = null;
            n_674 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, n_674, random_test.const466, j_674.value);
            if(term == null)
              break Fail1090;
            if(true)
              break Success830;
          }
          term = random_test.constNil0;
        }
        lifted647 lifted6470 = new lifted647();
        lifted6470.i_674 = i_674;
        lifted6470.j_674 = j_674;
        term = filter_1_0.instance.invoke(context, term, lifted6470);
        if(term == null)
          break Fail1089;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $C$F$Sorts_0_0 extends Strategy 
  { 
    public static $C$F$Sorts_0_0 instance = new $C$F$Sorts_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("CFSorts_0_0");
      Fail1091:
      { 
        TermReference o_674 = new TermReference();
        TermReference p_674 = new TermReference();
        IStrategoTerm t_674 = null;
        if(p_674.value == null)
          p_674.value = term;
        else
          if(p_674.value != term && !p_674.value.match(term))
            break Fail1091;
        if(o_674.value == null)
          o_674.value = term;
        else
          if(o_674.value != term && !o_674.value.match(term))
            break Fail1091;
        t_674 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, t_674, random_test.const466, p_674.value);
        if(term == null)
          break Fail1091;
        lifted648 lifted6480 = new lifted648();
        lifted6480.o_674 = o_674;
        lifted6480.p_674 = p_674;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6480);
        if(term == null)
          break Fail1091;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$C$F$Sorts_0_2 extends Strategy 
  { 
    public static aux_$C$F$Sorts_0_2 instance = new aux_$C$F$Sorts_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm u_674, IStrategoTerm v_674)
    { 
      Fail1092:
      { 
        IStrategoTerm w_674 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1092;
        IStrategoTerm arg430 = term.getSubterm(0);
        if(arg430.getTermType() != IStrategoTerm.STRING || !"087502491ccb004cbaf8d928b7531ad3".equals(((IStrategoString)arg430).stringValue()))
          break Fail1092;
        w_674 = term.getSubterm(1);
        term = w_674;
        if(true)
          return term;
      }
      context.push("aux_CFSorts_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class all_keys_$Cons$Key_0_0 extends Strategy 
  { 
    public static all_keys_$Cons$Key_0_0 instance = new all_keys_$Cons$Key_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("all_keys_ConsKey_0_0");
      Fail1093:
      { 
        IStrategoTerm x_679 = null;
        x_679 = term;
        term = dr_all_keys_0_1.instance.invoke(context, x_679, random_test.const479);
        if(term == null)
          break Fail1093;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Cons$Key_0_0 extends Strategy 
  { 
    public static $Cons$Key_0_0 instance = new $Cons$Key_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ConsKey_0_0");
      Fail1094:
      { 
        TermReference u_682 = new TermReference();
        TermReference v_682 = new TermReference();
        IStrategoTerm z_682 = null;
        if(v_682.value == null)
          v_682.value = term;
        else
          if(v_682.value != term && !v_682.value.match(term))
            break Fail1094;
        if(u_682.value == null)
          u_682.value = term;
        else
          if(u_682.value != term && !u_682.value.match(term))
            break Fail1094;
        z_682 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, z_682, random_test.const479, v_682.value);
        if(term == null)
          break Fail1094;
        lifted649 lifted6490 = new lifted649();
        lifted6490.u_682 = u_682;
        lifted6490.v_682 = v_682;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6490);
        if(term == null)
          break Fail1094;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Cons$Key_0_2 extends Strategy 
  { 
    public static aux_$Cons$Key_0_2 instance = new aux_$Cons$Key_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm a_683, IStrategoTerm b_683)
    { 
      Fail1095:
      { 
        IStrategoTerm c_683 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1095;
        IStrategoTerm arg431 = term.getSubterm(0);
        if(arg431.getTermType() != IStrategoTerm.STRING || !"4bcec20c127efcb6f36e3444d360b560".equals(((IStrategoString)arg431).stringValue()))
          break Fail1095;
        c_683 = term.getSubterm(1);
        term = c_683;
        if(true)
          return term;
      }
      context.push("aux_ConsKey_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Cons$C$F_0_0 extends Strategy 
  { 
    public static bagof_$Cons$C$F_0_0 instance = new bagof_$Cons$C$F_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_ConsCF_0_0");
      Fail1096:
      { 
        TermReference r_686 = new TermReference();
        TermReference s_686 = new TermReference();
        if(s_686.value == null)
          s_686.value = term;
        else
          if(s_686.value != term && !s_686.value.match(term))
            break Fail1096;
        if(r_686.value == null)
          r_686.value = term;
        else
          if(r_686.value != term && !r_686.value.match(term))
            break Fail1096;
        Success831:
        { 
          Fail1097:
          { 
            IStrategoTerm w_686 = null;
            w_686 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, w_686, random_test.const477, s_686.value);
            if(term == null)
              break Fail1097;
            if(true)
              break Success831;
          }
          term = random_test.constNil0;
        }
        lifted650 lifted6500 = new lifted650();
        lifted6500.r_686 = r_686;
        lifted6500.s_686 = s_686;
        term = filter_1_0.instance.invoke(context, term, lifted6500);
        if(term == null)
          break Fail1096;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Cons$C$F_0_0 extends Strategy 
  { 
    public static $Cons$C$F_0_0 instance = new $Cons$C$F_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("ConsCF_0_0");
      Fail1098:
      { 
        TermReference x_686 = new TermReference();
        TermReference y_686 = new TermReference();
        IStrategoTerm c_687 = null;
        if(y_686.value == null)
          y_686.value = term;
        else
          if(y_686.value != term && !y_686.value.match(term))
            break Fail1098;
        if(x_686.value == null)
          x_686.value = term;
        else
          if(x_686.value != term && !x_686.value.match(term))
            break Fail1098;
        c_687 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, c_687, random_test.const477, y_686.value);
        if(term == null)
          break Fail1098;
        lifted651 lifted6510 = new lifted651();
        lifted6510.x_686 = x_686;
        lifted6510.y_686 = y_686;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6510);
        if(term == null)
          break Fail1098;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Cons$C$F_0_2 extends Strategy 
  { 
    public static aux_$Cons$C$F_0_2 instance = new aux_$Cons$C$F_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm d_687, IStrategoTerm e_687)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1099:
      { 
        IStrategoTerm f_687 = null;
        IStrategoTerm g_687 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail1099;
        IStrategoTerm arg432 = term.getSubterm(0);
        if(arg432.getTermType() != IStrategoTerm.STRING || !"e6ce20aabf618e2a4bb8bbae86f973f8".equals(((IStrategoString)arg432).stringValue()))
          break Fail1099;
        f_687 = term.getSubterm(1);
        g_687 = term.getSubterm(2);
        term = termFactory.makeTuple(f_687, g_687);
        if(true)
          return term;
      }
      context.push("aux_ConsCF_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $C$F$Cons_0_0 extends Strategy 
  { 
    public static $C$F$Cons_0_0 instance = new $C$F$Cons_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("CFCons_0_0");
      Fail1100:
      { 
        TermReference d_692 = new TermReference();
        TermReference e_692 = new TermReference();
        TermReference f_692 = new TermReference();
        IStrategoTerm i_692 = null;
        IStrategoTerm k_692 = null;
        IStrategoTerm l_692 = null;
        if(d_692.value == null)
          d_692.value = term;
        else
          if(d_692.value != term && !d_692.value.match(term))
            break Fail1100;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1100;
        if(e_692.value == null)
          e_692.value = term.getSubterm(0);
        else
          if(e_692.value != term.getSubterm(0) && !e_692.value.match(term.getSubterm(0)))
            break Fail1100;
        if(f_692.value == null)
          f_692.value = term.getSubterm(1);
        else
          if(f_692.value != term.getSubterm(1) && !f_692.value.match(term.getSubterm(1)))
            break Fail1100;
        k_692 = term;
        i_692 = random_test.const475;
        term = k_692;
        l_692 = k_692;
        if(e_692.value == null || f_692.value == null)
          break Fail1100;
        term = termFactory.annotateTerm(termFactory.makeTuple(e_692.value, f_692.value), checkListAnnos(termFactory, random_test.constCons0));
        term = dr_lookup_rule_0_2.instance.invoke(context, l_692, i_692, term);
        if(term == null)
          break Fail1100;
        lifted652 lifted6520 = new lifted652();
        lifted6520.e_692 = e_692;
        lifted6520.f_692 = f_692;
        lifted6520.d_692 = d_692;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6520);
        if(term == null)
          break Fail1100;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$C$F$Cons_0_3 extends Strategy 
  { 
    public static aux_$C$F$Cons_0_3 instance = new aux_$C$F$Cons_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm m_692, IStrategoTerm n_692, IStrategoTerm o_692)
    { 
      Fail1101:
      { 
        IStrategoTerm p_692 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1101;
        IStrategoTerm arg433 = term.getSubterm(0);
        if(arg433.getTermType() != IStrategoTerm.STRING || !"b570a07b2f5fa71aa7edd7e59ba75f8d".equals(((IStrategoString)arg433).stringValue()))
          break Fail1101;
        p_692 = term.getSubterm(1);
        term = p_692;
        if(true)
          return term;
      }
      context.push("aux_CFCons_0_3");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Special$A$S$T$Term_0_0 extends Strategy 
  { 
    public static $Special$A$S$T$Term_0_0 instance = new $Special$A$S$T$Term_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      context.push("SpecialASTTerm_0_0");
      Fail1102:
      { 
        TermReference m_697 = new TermReference();
        TermReference n_697 = new TermReference();
        TermReference o_697 = new TermReference();
        IStrategoTerm r_697 = null;
        IStrategoTerm t_697 = null;
        IStrategoTerm u_697 = null;
        if(m_697.value == null)
          m_697.value = term;
        else
          if(m_697.value != term && !m_697.value.match(term))
            break Fail1102;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1102;
        if(n_697.value == null)
          n_697.value = term.getSubterm(0);
        else
          if(n_697.value != term.getSubterm(0) && !n_697.value.match(term.getSubterm(0)))
            break Fail1102;
        if(o_697.value == null)
          o_697.value = term.getSubterm(1);
        else
          if(o_697.value != term.getSubterm(1) && !o_697.value.match(term.getSubterm(1)))
            break Fail1102;
        t_697 = term;
        r_697 = random_test.const483;
        term = t_697;
        u_697 = t_697;
        if(n_697.value == null || o_697.value == null)
          break Fail1102;
        term = termFactory.annotateTerm(termFactory.makeTuple(n_697.value, o_697.value), checkListAnnos(termFactory, random_test.constCons0));
        term = dr_lookup_rule_0_2.instance.invoke(context, u_697, r_697, term);
        if(term == null)
          break Fail1102;
        lifted653 lifted6530 = new lifted653();
        lifted6530.n_697 = n_697;
        lifted6530.o_697 = o_697;
        lifted6530.m_697 = m_697;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6530);
        if(term == null)
          break Fail1102;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Special$A$S$T$Term_0_3 extends Strategy 
  { 
    public static aux_$Special$A$S$T$Term_0_3 instance = new aux_$Special$A$S$T$Term_0_3();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm v_697, IStrategoTerm w_697, IStrategoTerm x_697)
    { 
      Fail1103:
      { 
        IStrategoTerm y_697 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1103;
        IStrategoTerm arg434 = term.getSubterm(0);
        if(arg434.getTermType() != IStrategoTerm.STRING || !"090f497326e1019608211242a0a184bc".equals(((IStrategoString)arg434).stringValue()))
          break Fail1103;
        y_697 = term.getSubterm(1);
        term = y_697;
        if(true)
          return term;
      }
      context.push("aux_SpecialASTTerm_0_3");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class bagof_$Terminal$Path_0_0 extends Strategy 
  { 
    public static bagof_$Terminal$Path_0_0 instance = new bagof_$Terminal$Path_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("bagof_TerminalPath_0_0");
      Fail1104:
      { 
        TermReference n_701 = new TermReference();
        TermReference o_701 = new TermReference();
        if(o_701.value == null)
          o_701.value = term;
        else
          if(o_701.value != term && !o_701.value.match(term))
            break Fail1104;
        if(n_701.value == null)
          n_701.value = term;
        else
          if(n_701.value != term && !n_701.value.match(term))
            break Fail1104;
        Success832:
        { 
          Fail1105:
          { 
            IStrategoTerm s_701 = null;
            s_701 = term;
            term = dr_lookup_rule_0_2.instance.invoke(context, s_701, random_test.const485, o_701.value);
            if(term == null)
              break Fail1105;
            if(true)
              break Success832;
          }
          term = random_test.constNil0;
        }
        lifted654 lifted6540 = new lifted654();
        lifted6540.n_701 = n_701;
        lifted6540.o_701 = o_701;
        term = filter_1_0.instance.invoke(context, term, lifted6540);
        if(term == null)
          break Fail1104;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class $Terminal$Path_0_0 extends Strategy 
  { 
    public static $Terminal$Path_0_0 instance = new $Terminal$Path_0_0();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      context.push("TerminalPath_0_0");
      Fail1106:
      { 
        TermReference t_701 = new TermReference();
        TermReference u_701 = new TermReference();
        IStrategoTerm y_701 = null;
        if(u_701.value == null)
          u_701.value = term;
        else
          if(u_701.value != term && !u_701.value.match(term))
            break Fail1106;
        if(t_701.value == null)
          t_701.value = term;
        else
          if(t_701.value != term && !t_701.value.match(term))
            break Fail1106;
        y_701 = term;
        term = dr_lookup_rule_0_2.instance.invoke(context, y_701, random_test.const485, u_701.value);
        if(term == null)
          break Fail1106;
        lifted655 lifted6550 = new lifted655();
        lifted6550.t_701 = t_701;
        lifted6550.u_701 = u_701;
        term = fetch_elem_1_0.instance.invoke(context, term, lifted6550);
        if(term == null)
          break Fail1106;
        context.popOnSuccess();
        if(true)
          return term;
      }
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") public static class aux_$Terminal$Path_0_2 extends Strategy 
  { 
    public static aux_$Terminal$Path_0_2 instance = new aux_$Terminal$Path_0_2();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term, IStrategoTerm z_701, IStrategoTerm a_702)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1107:
      { 
        IStrategoTerm b_702 = null;
        IStrategoTerm c_702 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail1107;
        IStrategoTerm arg435 = term.getSubterm(0);
        if(arg435.getTermType() != IStrategoTerm.STRING || !"8e239b1709dac54fc92b003601d3dca3".equals(((IStrategoString)arg435).stringValue()))
          break Fail1107;
        b_702 = term.getSubterm(1);
        c_702 = term.getSubterm(2);
        term = termFactory.makeTuple(b_702, c_702);
        if(true)
          return term;
      }
      context.push("aux_TerminalPath_0_2");
      context.popOnFailure();
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted655 extends Strategy 
  { 
    TermReference t_701;

    TermReference u_701;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1108:
      { 
        term = aux_$Terminal$Path_0_2.instance.invoke(context, term, t_701.value, u_701.value);
        if(term == null)
          break Fail1108;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted654 extends Strategy 
  { 
    TermReference n_701;

    TermReference o_701;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1109:
      { 
        term = aux_$Terminal$Path_0_2.instance.invoke(context, term, n_701.value, o_701.value);
        if(term == null)
          break Fail1109;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted653 extends Strategy 
  { 
    TermReference n_697;

    TermReference o_697;

    TermReference m_697;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1110:
      { 
        term = aux_$Special$A$S$T$Term_0_3.instance.invoke(context, term, n_697.value, o_697.value, m_697.value);
        if(term == null)
          break Fail1110;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted652 extends Strategy 
  { 
    TermReference e_692;

    TermReference f_692;

    TermReference d_692;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1111:
      { 
        term = aux_$C$F$Cons_0_3.instance.invoke(context, term, e_692.value, f_692.value, d_692.value);
        if(term == null)
          break Fail1111;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted651 extends Strategy 
  { 
    TermReference x_686;

    TermReference y_686;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1112:
      { 
        term = aux_$Cons$C$F_0_2.instance.invoke(context, term, x_686.value, y_686.value);
        if(term == null)
          break Fail1112;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted650 extends Strategy 
  { 
    TermReference r_686;

    TermReference s_686;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1113:
      { 
        term = aux_$Cons$C$F_0_2.instance.invoke(context, term, r_686.value, s_686.value);
        if(term == null)
          break Fail1113;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted649 extends Strategy 
  { 
    TermReference u_682;

    TermReference v_682;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1114:
      { 
        term = aux_$Cons$Key_0_2.instance.invoke(context, term, u_682.value, v_682.value);
        if(term == null)
          break Fail1114;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted648 extends Strategy 
  { 
    TermReference o_674;

    TermReference p_674;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1115:
      { 
        term = aux_$C$F$Sorts_0_2.instance.invoke(context, term, o_674.value, p_674.value);
        if(term == null)
          break Fail1115;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted647 extends Strategy 
  { 
    TermReference i_674;

    TermReference j_674;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1116:
      { 
        term = aux_$C$F$Sorts_0_2.instance.invoke(context, term, i_674.value, j_674.value);
        if(term == null)
          break Fail1116;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted646 extends Strategy 
  { 
    TermReference s_660;

    TermReference t_660;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1117:
      { 
        term = aux_$Lex$Reject_0_2.instance.invoke(context, term, s_660.value, t_660.value);
        if(term == null)
          break Fail1117;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted645 extends Strategy 
  { 
    TermReference s_656;

    TermReference t_656;

    TermReference r_656;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1118:
      { 
        term = aux_$Lex$Cons_0_3.instance.invoke(context, term, s_656.value, t_656.value, r_656.value);
        if(term == null)
          break Fail1118;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted644 extends Strategy 
  { 
    TermReference l_651;

    TermReference m_651;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1119:
      { 
        term = aux_$Cons$Lex_0_2.instance.invoke(context, term, l_651.value, m_651.value);
        if(term == null)
          break Fail1119;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted643 extends Strategy 
  { 
    TermReference i_647;

    TermReference j_647;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1120:
      { 
        term = aux_$Lex$Sorts_0_2.instance.invoke(context, term, i_647.value, j_647.value);
        if(term == null)
          break Fail1120;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted642 extends Strategy 
  { 
    TermReference c_647;

    TermReference d_647;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1121:
      { 
        term = aux_$Lex$Sorts_0_2.instance.invoke(context, term, c_647.value, d_647.value);
        if(term == null)
          break Fail1121;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted641 extends Strategy 
  { 
    TermReference c_639;

    TermReference d_639;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1122:
      { 
        term = aux_$Modules$Read_0_2.instance.invoke(context, term, c_639.value, d_639.value);
        if(term == null)
          break Fail1122;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted640 extends Strategy 
  { 
    TermReference j_634;

    TermReference k_634;

    TermReference l_634;

    TermReference i_634;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1123:
      { 
        term = aux_$Priority_0_4.instance.invoke(context, term, j_634.value, k_634.value, l_634.value, i_634.value);
        if(term == null)
          break Fail1123;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted639 extends Strategy 
  { 
    TermReference z_628;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1124:
      { 
        term = aux_$All$Cons$Count_0_1.instance.invoke(context, term, z_628.value);
        if(term == null)
          break Fail1124;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted638 extends Strategy 
  { 
    TermReference d_620;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1125:
      { 
        term = aux_$Fix$Runtag_0_1.instance.invoke(context, term, d_620.value);
        if(term == null)
          break Fail1125;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted637 extends Strategy 
  { 
    TermReference w_615;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1126:
      { 
        term = aux_$Loop$Iterator_0_1.instance.invoke(context, term, w_615.value);
        if(term == null)
          break Fail1126;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted636 extends Strategy 
  { 
    TermReference p_611;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1127:
      { 
        term = aux_$Item$Count_0_1.instance.invoke(context, term, p_611.value);
        if(term == null)
          break Fail1127;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted635 extends Strategy 
  { 
    TermReference q_604;

    TermReference r_604;

    TermReference s_604;

    TermReference t_604;

    TermReference u_604;

    TermReference v_604;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1128:
      { 
        term = aux_$Non$Injectable_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{q_604.value, r_604.value, s_604.value, t_604.value, u_604.value, v_604.value});
        if(term == null)
          break Fail1128;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted634 extends Strategy 
  { 
    TermReference c_605;

    TermReference d_605;

    TermReference e_605;

    TermReference f_605;

    TermReference g_605;

    TermReference h_605;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1129:
      { 
        term = aux_$Non$Injectable_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{c_605.value, d_605.value, e_605.value, f_605.value, g_605.value, h_605.value});
        if(term == null)
          break Fail1129;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted633 extends Strategy 
  { 
    TermReference o_605;

    TermReference p_605;

    TermReference q_605;

    TermReference r_605;

    TermReference s_605;

    TermReference t_605;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1130:
      { 
        term = aux_$Non$Injectable_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{o_605.value, p_605.value, q_605.value, r_605.value, s_605.value, t_605.value});
        if(term == null)
          break Fail1130;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted632 extends Strategy 
  { 
    TermReference a_606;

    TermReference b_606;

    TermReference c_606;

    TermReference d_606;

    TermReference e_606;

    TermReference f_606;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1131:
      { 
        term = aux_$Non$Injectable_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{a_606.value, b_606.value, c_606.value, d_606.value, e_606.value, f_606.value});
        if(term == null)
          break Fail1131;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted631 extends Strategy 
  { 
    TermReference c_580;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1132:
      { 
        term = aux_$Chance$Of$Failure_0_1.instance.invoke(context, term, c_580.value);
        if(term == null)
          break Fail1132;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted630 extends Strategy 
  { 
    TermReference p_575;

    TermReference q_575;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1133:
      { 
        term = aux_$Shrink$Sort_0_2.instance.invoke(context, term, p_575.value, q_575.value);
        if(term == null)
          break Fail1133;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted629 extends Strategy 
  { 
    TermReference t_571;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1134:
      { 
        term = aux_$Prod$Weight_0_1.instance.invoke(context, term, t_571.value);
        if(term == null)
          break Fail1134;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted628 extends Strategy 
  { 
    TermReference m_567;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1135:
      { 
        term = aux_$Cons$Count_0_1.instance.invoke(context, term, m_567.value);
        if(term == null)
          break Fail1135;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted627 extends Strategy 
  { 
    TermReference f_563;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1136:
      { 
        term = aux_lex_to_dr_$Count_0_1.instance.invoke(context, term, f_563.value);
        if(term == null)
          break Fail1136;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted626 extends Strategy 
  { 
    TermReference s_558;

    TermReference t_558;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1137:
      { 
        term = aux_$Terminals_0_2.instance.invoke(context, term, s_558.value, t_558.value);
        if(term == null)
          break Fail1137;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted625 extends Strategy 
  { 
    TermReference v_554;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1138:
      { 
        term = aux_$Xeger$Count_0_1.instance.invoke(context, term, v_554.value);
        if(term == null)
          break Fail1138;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted624 extends Strategy 
  { 
    TermReference h_546;

    TermReference i_546;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1139:
      { 
        term = aux_$Ignore$Sorts_0_2.instance.invoke(context, term, h_546.value, i_546.value);
        if(term == null)
          break Fail1139;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted623 extends Strategy 
  { 
    TermReference j_529;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1140:
      { 
        term = aux_$Number$Of$Runs_0_1.instance.invoke(context, term, j_529.value);
        if(term == null)
          break Fail1140;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted622 extends Strategy 
  { 
    TermReference c_525;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1141:
      { 
        term = aux_$Terminal$Pool$Size_0_1.instance.invoke(context, term, c_525.value);
        if(term == null)
          break Fail1141;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted621 extends Strategy 
  { 
    TermReference v_520;

    TermReference w_520;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1142:
      { 
        term = aux_$Error$Message$Pattern_0_2.instance.invoke(context, term, v_520.value, w_520.value);
        if(term == null)
          break Fail1142;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted620 extends Strategy 
  { 
    TermReference s_516;

    TermReference t_516;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1143:
      { 
        term = aux_$Error$Correcting$Action_0_2.instance.invoke(context, term, s_516.value, t_516.value);
        if(term == null)
          break Fail1143;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted619 extends Strategy 
  { 
    TermReference p_512;

    TermReference q_512;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1144:
      { 
        term = aux_$Error$Source$Node$Pattern_0_2.instance.invoke(context, term, p_512.value, q_512.value);
        if(term == null)
          break Fail1144;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted618 extends Strategy 
  { 
    TermReference m_508;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1145:
      { 
        term = aux_$Max$Rec_0_1.instance.invoke(context, term, m_508.value);
        if(term == null)
          break Fail1145;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted617 extends Strategy 
  { 
    TermReference f_504;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1146:
      { 
        term = aux_$Max$Iter_0_1.instance.invoke(context, term, f_504.value);
        if(term == null)
          break Fail1146;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted616 extends Strategy 
  { 
    TermReference y_499;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1147:
      { 
        term = aux_$Max$Count_0_1.instance.invoke(context, term, y_499.value);
        if(term == null)
          break Fail1147;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted615 extends Strategy 
  { 
    TermReference h_491;

    TermReference i_491;

    TermReference g_491;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1148:
      { 
        term = aux_$Error$Match$Param_0_3.instance.invoke(context, term, h_491.value, i_491.value, g_491.value);
        if(term == null)
          break Fail1148;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted614 extends Strategy 
  { 
    TermReference o_479;

    TermReference p_479;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1149:
      { 
        term = aux_$Current$Scope_0_2.instance.invoke(context, term, o_479.value, p_479.value);
        if(term == null)
          break Fail1149;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted613 extends Strategy 
  { 
    TermReference i_479;

    TermReference j_479;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1150:
      { 
        term = aux_$Current$Scope_0_2.instance.invoke(context, term, i_479.value, j_479.value);
        if(term == null)
          break Fail1150;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted612 extends Strategy 
  { 
    TermReference l_475;

    TermReference m_475;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1151:
      { 
        term = aux_$Scope2$Key_0_2.instance.invoke(context, term, l_475.value, m_475.value);
        if(term == null)
          break Fail1151;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted611 extends Strategy 
  { 
    TermReference w_470;

    TermReference x_470;

    TermReference v_470;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1152:
      { 
        term = aux_$Namespace_0_3.instance.invoke(context, term, w_470.value, x_470.value, v_470.value);
        if(term == null)
          break Fail1152;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted610 extends Strategy 
  { 
    TermReference p_465;

    TermReference q_465;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1153:
      { 
        term = aux_$Define$Parent$Sorts_0_2.instance.invoke(context, term, p_465.value, q_465.value);
        if(term == null)
          break Fail1153;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted609 extends Strategy 
  { 
    TermReference r_461;

    TermReference s_461;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1154:
      { 
        term = aux_$N$B$L$Key2$Define_0_2.instance.invoke(context, term, r_461.value, s_461.value);
        if(term == null)
          break Fail1154;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted608 extends Strategy 
  { 
    TermReference j_457;

    TermReference k_457;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1155:
      { 
        term = aux_$N$B$L$Namespace2$Def$Key_0_2.instance.invoke(context, term, j_457.value, k_457.value);
        if(term == null)
          break Fail1155;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted607 extends Strategy 
  { 
    TermReference f_453;

    TermReference g_453;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1156:
      { 
        term = aux_$N$B$L$Key2$Refer_0_2.instance.invoke(context, term, f_453.value, g_453.value);
        if(term == null)
          break Fail1156;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted606 extends Strategy 
  { 
    TermReference b_437;

    TermReference c_437;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1157:
      { 
        term = aux_$N$B$L$Key2$Scope_0_2.instance.invoke(context, term, b_437.value, c_437.value);
        if(term == null)
          break Fail1157;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted605 extends Strategy 
  { 
    TermReference v_436;

    TermReference w_436;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1158:
      { 
        term = aux_$N$B$L$Key2$Scope_0_2.instance.invoke(context, term, v_436.value, w_436.value);
        if(term == null)
          break Fail1158;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted604 extends Strategy 
  { 
    TermReference z_432;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1159:
      { 
        term = aux_$Shrink$Error_0_1.instance.invoke(context, term, z_432.value);
        if(term == null)
          break Fail1159;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted603 extends Strategy 
  { 
    TermReference s_428;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1160:
      { 
        term = aux_$Language_0_1.instance.invoke(context, term, s_428.value);
        if(term == null)
          break Fail1160;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted602 extends Strategy 
  { 
    TermReference n_386;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1161:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1161;
        if(n_386.value == null)
          n_386.value = term.getSubterm(1);
        else
          if(n_386.value != term.getSubterm(1) && !n_386.value.match(term.getSubterm(1)))
            break Fail1161;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted601 extends Strategy 
  { 
    TermReference n_386;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1162:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1162;
        if(n_386.value == null)
          n_386.value = term.getSubterm(1);
        else
          if(n_386.value != term.getSubterm(1) && !n_386.value.match(term.getSubterm(1)))
            break Fail1162;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted599 extends Strategy 
  { 
    public static final lifted599 instance = new lifted599();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1163:
      { 
        term = oncetd_1_0.instance.invoke(context, term, lifted600.instance);
        if(term == null)
          break Fail1163;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted600 extends Strategy 
  { 
    public static final lifted600 instance = new lifted600();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1164:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1164;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted598 extends Strategy 
  { 
    public static final lifted598 instance = new lifted598();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1165:
      { 
        IStrategoTerm p_385 = null;
        IStrategoTerm q_385 = null;
        IStrategoTerm r_385 = null;
        IStrategoTerm term932 = term;
        Success833:
        { 
          Fail1166:
          { 
            IStrategoTerm s_385 = null;
            s_385 = term;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
              break Fail1166;
            IStrategoTerm arg369 = term.getSubterm(0);
            if(arg369.getTermType() != IStrategoTerm.TUPLE || arg369.getSubtermCount() != 2)
              break Fail1166;
            p_385 = arg369.getSubterm(0);
            q_385 = arg369.getSubterm(1);
            r_385 = term.getSubterm(1);
            term = s_385;
            { 
              term = termFactory.makeTuple(p_385, r_385, q_385);
              if(true)
                break Success833;
            }
          }
          term = term932;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted597 extends Strategy 
  { 
    TermReference d_385;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1167:
      { 
        IStrategoTerm e_385 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1167;
        e_385 = term.getSubterm(1);
        if(d_385.value == null)
          break Fail1167;
        term = termFactory.makeTuple(e_385, d_385.value);
        term = geq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1167;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted590 extends Strategy 
  { 
    TermReference y_384;

    TermReference z_384;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1168:
      { 
        TermReference b_385 = new TermReference();
        lifted591 lifted5910 = new lifted591();
        lifted5910.b_385 = b_385;
        term = oncetd_1_0.instance.invoke(context, term, lifted5910);
        if(term == null)
          break Fail1168;
        lifted593 lifted5930 = new lifted593();
        lifted592 lifted5920 = new lifted592();
        lifted5930.b_385 = b_385;
        lifted5930.y_384 = y_384;
        lifted5930.z_384 = z_384;
        lifted5920.b_385 = b_385;
        term = or_2_0.instance.invoke(context, term, lifted5920, lifted5930);
        if(term == null)
          break Fail1168;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted591 extends Strategy 
  { 
    TermReference b_385;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1169:
      { 
        term = recognize_sort_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1169;
        if(b_385.value == null)
          b_385.value = term;
        else
          if(b_385.value != term && !b_385.value.match(term))
            break Fail1169;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted593 extends Strategy 
  { 
    TermReference b_385;

    TermReference y_384;

    TermReference z_384;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1170:
      { 
        if(b_385.value == null)
          break Fail1170;
        term = b_385.value;
        if(y_384.value == null)
          y_384.value = term;
        else
          if(y_384.value != term && !y_384.value.match(term))
            break Fail1170;
        if(y_384.value == null || z_384.value == null)
          break Fail1170;
        term = termFactory.makeTuple(y_384.value, z_384.value);
        term = $Greater$Terminal$Level_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1170;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted592 extends Strategy 
  { 
    TermReference b_385;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1171:
      { 
        IStrategoTerm term929 = term;
        Success834:
        { 
          Fail1172:
          { 
            if(b_385.value == null)
              break Fail1172;
            term = $Lex$Sorts_0_0.instance.invoke(context, b_385.value);
            if(term == null)
              break Fail1172;
            { 
              if(true)
                break Fail1171;
              if(true)
                break Success834;
            }
          }
          term = term929;
        }
        IStrategoTerm term930 = term;
        Success835:
        { 
          Fail1173:
          { 
            if(b_385.value == null)
              break Fail1173;
            term = $Terminal$Path_0_0.instance.invoke(context, b_385.value);
            if(term == null)
              break Fail1173;
            { 
              if(true)
                break Fail1171;
              if(true)
                break Success835;
            }
          }
          term = term930;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted585 extends Strategy 
  { 
    public static final lifted585 instance = new lifted585();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1174:
      { 
        term = and_2_0.instance.invoke(context, term, lifted586.instance, lifted587.instance);
        if(term == null)
          break Fail1174;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted587 extends Strategy 
  { 
    public static final lifted587 instance = new lifted587();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1175:
      { 
        term = and_2_0.instance.invoke(context, term, lifted588.instance, lifted589.instance);
        if(term == null)
          break Fail1175;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted589 extends Strategy 
  { 
    public static final lifted589 instance = new lifted589();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1176:
      { 
        IStrategoTerm term928 = term;
        Success836:
        { 
          Fail1177:
          { 
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consopt_1 != ((IStrategoAppl)term).getConstructor())
              break Fail1177;
            { 
              if(true)
                break Fail1176;
              if(true)
                break Success836;
            }
          }
          term = term928;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted588 extends Strategy 
  { 
    public static final lifted588 instance = new lifted588();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1178:
      { 
        IStrategoTerm term927 = term;
        Success837:
        { 
          Fail1179:
          { 
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consiter_star_sep_2 != ((IStrategoAppl)term).getConstructor())
              break Fail1179;
            { 
              if(true)
                break Fail1178;
              if(true)
                break Success837;
            }
          }
          term = term927;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted586 extends Strategy 
  { 
    public static final lifted586 instance = new lifted586();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1180:
      { 
        IStrategoTerm term926 = term;
        Success838:
        { 
          Fail1181:
          { 
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consiter_star_1 != ((IStrategoAppl)term).getConstructor())
              break Fail1181;
            { 
              if(true)
                break Fail1180;
              if(true)
                break Success838;
            }
          }
          term = term926;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted595 extends Strategy 
  { 
    TermReference y_384;

    TermReference a_385;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1182:
      { 
        if(y_384.value == null)
          break Fail1182;
        term = bagof_$Terminal$Path_0_0.instance.invoke(context, y_384.value);
        if(term == null)
          break Fail1182;
        lifted596 lifted5960 = new lifted596();
        lifted5960.a_385 = a_385;
        term = filter_1_0.instance.invoke(context, term, lifted5960);
        if(term == null)
          break Fail1182;
        if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
          break Fail1182;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted596 extends Strategy 
  { 
    TermReference a_385;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1183:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1183;
        if(a_385.value == null)
          a_385.value = term.getSubterm(0);
        else
          if(a_385.value != term.getSubterm(0) && !a_385.value.match(term.getSubterm(0)))
            break Fail1183;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted594 extends Strategy 
  { 
    TermReference y_384;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1184:
      { 
        IStrategoTerm term925 = term;
        Success839:
        { 
          Fail1185:
          { 
            if(y_384.value == null)
              break Fail1185;
            term = $Terminal$Path_0_0.instance.invoke(context, y_384.value);
            if(term == null)
              break Fail1185;
            { 
              if(true)
                break Fail1184;
              if(true)
                break Success839;
            }
          }
          term = term925;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted584 extends Strategy 
  { 
    TermReference n_384;

    TermReference l_384;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1186:
      { 
        IStrategoTerm q_384 = null;
        q_384 = term;
        Success840:
        { 
          Fail1187:
          { 
            IStrategoTerm r_384 = null;
            r_384 = term;
            term = is_terminal_path_0_2.instance.invoke(context, q_384, n_384.value, l_384.value);
            if(term == null)
              break Fail1187;
            term = r_384;
            { 
              if(n_384.value == null || l_384.value == null)
                break Fail1186;
              term = (IStrategoTerm)termFactory.makeListCons(termFactory.makeTuple(n_384.value, q_384, l_384.value), (IStrategoList)random_test.constNil0);
              if(true)
                break Success840;
            }
          }
          term = random_test.constNil0;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted583 extends Strategy 
  { 
    public static final lifted583 instance = new lifted583();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1188:
      { 
        IStrategoTerm g_382 = null;
        IStrategoTerm h_382 = null;
        IStrategoTerm i_382 = null;
        IStrategoTerm j_382 = null;
        IStrategoTerm m_382 = null;
        IStrategoTerm o_382 = null;
        IStrategoTerm p_382 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail1188;
        g_382 = term.getSubterm(0);
        h_382 = term.getSubterm(1);
        i_382 = term.getSubterm(2);
        j_382 = term;
        o_382 = term;
        m_382 = random_test.const485;
        p_382 = o_382;
        term = termFactory.makeTuple(random_test.const486, h_382, i_382);
        term = dr_add_rule_0_3.instance.invoke(context, p_382, m_382, g_382, term);
        if(term == null)
          break Fail1188;
        term = j_382;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted582 extends Strategy 
  { 
    TermReference b_382;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1189:
      { 
        term = find_terminal_path_0_1.instance.invoke(context, term, b_382.value);
        if(term == null)
          break Fail1189;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted575 extends Strategy 
  { 
    TermReference q_377;

    TermReference r_377;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1190:
      { 
        IStrategoTerm s_377 = null;
        IStrategoTerm t_377 = null;
        IStrategoTerm u_377 = null;
        IStrategoTerm w_377 = null;
        IStrategoTerm x_377 = null;
        s_377 = term;
        t_377 = term;
        w_377 = term;
        u_377 = random_test.const473;
        term = w_377;
        x_377 = w_377;
        if(q_377.value == null || r_377.value == null)
          break Fail1190;
        term = termFactory.makeTuple(random_test.const474, q_377.value, r_377.value);
        term = dr_add_rule_0_3.instance.invoke(context, x_377, u_377, s_377, term);
        if(term == null)
          break Fail1190;
        term = t_377;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted572 extends Strategy 
  { 
    TermReference o_376;

    TermReference p_376;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1191:
      { 
        term = check_cf_attrs_0_2.instance.invoke(context, term, o_376.value, p_376.value);
        if(term == null)
          break Fail1191;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted567 extends Strategy 
  { 
    TermReference k_376;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1192:
      { 
        IStrategoTerm term896 = term;
        Success841:
        { 
          Fail1193:
          { 
            lifted569 lifted5690 = new lifted569();
            lifted568 lifted5680 = new lifted568();
            lifted5690.k_376 = k_376;
            lifted5680.k_376 = k_376;
            term = or_2_0.instance.invoke(context, term, lifted5680, lifted5690);
            if(term == null)
              break Fail1193;
            { 
              if(true)
                break Fail1192;
              if(true)
                break Success841;
            }
          }
          term = term896;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted569 extends Strategy 
  { 
    TermReference k_376;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1194:
      { 
        if(k_376.value == null)
          break Fail1194;
        term = oncetd_1_0.instance.invoke(context, k_376.value, lifted570.instance);
        if(term == null)
          break Fail1194;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted570 extends Strategy 
  { 
    public static final lifted570 instance = new lifted570();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1195:
      { 
        IStrategoTerm cons35 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(cons35.getTermType() != IStrategoTerm.STRING || !"deprecated".equals(((IStrategoString)cons35).stringValue()))
          break Fail1195;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted568 extends Strategy 
  { 
    TermReference k_376;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1196:
      { 
        if(k_376.value == null)
          break Fail1196;
        term = termFactory.makeTuple(random_test.constCons72, k_376.value);
        term = subseteq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1196;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted566 extends Strategy 
  { 
    TermReference n_376;

    TermReference k_376;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1197:
      { 
        if(n_376.value == null)
          break Fail1197;
        term = n_376.value;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consattrs_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1197;
        if(k_376.value == null)
          k_376.value = term.getSubterm(0);
        else
          if(k_376.value != term.getSubterm(0) && !k_376.value.match(term.getSubterm(0)))
            break Fail1197;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted563 extends Strategy 
  { 
    public static final lifted563 instance = new lifted563();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1198:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consreject_0 != ((IStrategoAppl)term).getConstructor())
          break Fail1198;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted564 extends Strategy 
  { 
    TermReference y_373;

    TermReference z_373;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1199:
      { 
        lifted565 lifted5650 = new lifted565();
        lifted5650.y_373 = y_373;
        lifted5650.z_373 = z_373;
        term = oncetd_1_0.instance.invoke(context, term, lifted5650);
        if(term == null)
          break Fail1199;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted565 extends Strategy 
  { 
    TermReference y_373;

    TermReference z_373;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1200:
      { 
        term = check_lex_attrs_0_2.instance.invoke(context, term, y_373.value, z_373.value);
        if(term == null)
          break Fail1200;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted561 extends Strategy 
  { 
    public static final lifted561 instance = new lifted561();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1201:
      { 
        IStrategoTerm cons34 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(cons34.getTermType() != IStrategoTerm.STRING || !"deprecated".equals(((IStrategoString)cons34).stringValue()))
          break Fail1201;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted556 extends Strategy 
  { 
    public static final lifted556 instance = new lifted556();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1202:
      { 
        IStrategoTerm v_372 = null;
        IStrategoTerm w_372 = null;
        IStrategoTerm x_372 = null;
        IStrategoTerm y_372 = null;
        IStrategoTerm d_373 = null;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consprod_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1202;
        w_372 = term.getSubterm(0);
        x_372 = term.getSubterm(1);
        y_372 = term.getSubterm(2);
        term = sometd_1_0.instance.invoke(context, w_372, remove_cflex_sugar_0_0.instance);
        if(term == null)
          break Fail1202;
        d_373 = term;
        term = sometd_1_0.instance.invoke(context, x_372, remove_cflex_sugar_0_0.instance);
        if(term == null)
          break Fail1202;
        term = termFactory.makeAppl(random_test._consprod_3, new IStrategoTerm[]{d_373, term, y_372});
        v_372 = term;
        Success842:
        { 
          Fail1203:
          { 
            IStrategoTerm z_372 = null;
            z_372 = term;
            term = oncetd_1_0.instance.invoke(context, x_372, lifted559.instance);
            if(term == null)
              break Fail1203;
            term = z_372;
            { 
              term = declare_cf_0_0.instance.invoke(context, v_372);
              if(term == null)
                break Fail1202;
              if(true)
                break Success842;
            }
          }
          term = declare_lex_0_0.instance.invoke(context, v_372);
          if(term == null)
            break Fail1202;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted559 extends Strategy 
  { 
    public static final lifted559 instance = new lifted559();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1204:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conscf_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1204;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted554 extends Strategy 
  { 
    public static final lifted554 instance = new lifted554();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1205:
      { 
        term = try_1_0.instance.invoke(context, term, declare_cf_0_0.instance);
        if(term == null)
          break Fail1205;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted553 extends Strategy 
  { 
    TermReference v_705;

    TermReference w_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1206:
      { 
        if(v_705.value == null)
          v_705.value = term;
        else
          if(v_705.value != term && !v_705.value.match(term))
            break Fail1206;
        if(w_705.value == null)
          break Fail1206;
        term = w_705.value;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted552 extends Strategy 
  { 
    TermReference v_705;

    TermReference w_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1207:
      { 
        if(v_705.value == null)
          v_705.value = term;
        else
          if(v_705.value != term && !v_705.value.match(term))
            break Fail1207;
        if(w_705.value == null)
          break Fail1207;
        term = w_705.value;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted550 extends Strategy 
  { 
    TermReference w_370;

    TermReference x_370;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1208:
      { 
        lifted551 lifted5510 = new lifted551();
        lifted5510.w_370 = w_370;
        lifted5510.x_370 = x_370;
        term = try_1_0.instance.invoke(context, term, lifted5510);
        if(term == null)
          break Fail1208;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted551 extends Strategy 
  { 
    TermReference w_370;

    TermReference x_370;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1209:
      { 
        term = replace_param_0_2.instance.invoke(context, term, w_370.value, x_370.value);
        if(term == null)
          break Fail1209;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted549 extends Strategy 
  { 
    TermReference e_370;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1210:
      { 
        term = rename_module_0_1.instance.invoke(context, term, e_370.value);
        if(term == null)
          break Fail1210;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted548 extends Strategy 
  { 
    TermReference p_367;

    TermReference q_367;

    TermReference r_367;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1211:
      { 
        term = param_rewrite_sdf_0_2.instance.invoke(context, term, p_367.value, q_367.value);
        if(term == null)
          break Fail1211;
        if(r_367.value == null)
          r_367.value = term;
        else
          if(r_367.value != term && !r_367.value.match(term))
            break Fail1211;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted547 extends Strategy 
  { 
    TermReference j_367;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1212:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1212;
        IStrategoTerm arg346 = term.getSubterm(0);
        if(arg346.getTermType() != IStrategoTerm.APPL || random_test._consunparameterized_1 != ((IStrategoAppl)arg346).getConstructor())
          break Fail1212;
        if(j_367.value == null)
          j_367.value = arg346.getSubterm(0);
        else
          if(j_367.value != arg346.getSubterm(0) && !j_367.value.match(arg346.getSubterm(0)))
            break Fail1212;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted546 extends Strategy 
  { 
    TermReference g_368;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1213:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1213;
        IStrategoTerm arg340 = term.getSubterm(0);
        if(arg340.getTermType() != IStrategoTerm.APPL || random_test._consunparameterized_1 != ((IStrategoAppl)arg340).getConstructor())
          break Fail1213;
        if(g_368.value == null)
          g_368.value = arg340.getSubterm(0);
        else
          if(g_368.value != arg340.getSubterm(0) && !g_368.value.match(arg340.getSubterm(0)))
            break Fail1213;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted545 extends Strategy 
  { 
    TermReference a_369;

    TermReference b_369;

    TermReference c_369;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1214:
      { 
        term = param_rewrite_sdf_0_2.instance.invoke(context, term, a_369.value, b_369.value);
        if(term == null)
          break Fail1214;
        if(c_369.value == null)
          c_369.value = term;
        else
          if(c_369.value != term && !c_369.value.match(term))
            break Fail1214;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted544 extends Strategy 
  { 
    TermReference w_368;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1215:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1215;
        IStrategoTerm arg330 = term.getSubterm(0);
        if(arg330.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_2 != ((IStrategoAppl)arg330).getConstructor())
          break Fail1215;
        if(w_368.value == null)
          w_368.value = arg330.getSubterm(0);
        else
          if(w_368.value != arg330.getSubterm(0) && !w_368.value.match(arg330.getSubterm(0)))
            break Fail1215;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted543 extends Strategy 
  { 
    TermReference r_369;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1216:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1216;
        IStrategoTerm arg325 = term.getSubterm(0);
        if(arg325.getTermType() != IStrategoTerm.APPL || random_test._consunparameterized_1 != ((IStrategoAppl)arg325).getConstructor())
          break Fail1216;
        if(r_369.value == null)
          r_369.value = arg325.getSubterm(0);
        else
          if(r_369.value != arg325.getSubterm(0) && !r_369.value.match(arg325.getSubterm(0)))
            break Fail1216;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted539 extends Strategy 
  { 
    public static final lifted539 instance = new lifted539();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1217:
      { 
        term = sometd_1_0.instance.invoke(context, term, read_priorities_0_0.instance);
        if(term == null)
          break Fail1217;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted537 extends Strategy 
  { 
    public static final lifted537 instance = new lifted537();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1218:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consexports_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1218;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted541 extends Strategy 
  { 
    TermReference f_366;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1219:
      { 
        IStrategoTerm q_366 = null;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consimports_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1219;
        q_366 = term.getSubterm(0);
        term = q_366;
        lifted542 lifted5420 = new lifted542();
        lifted5420.f_366 = f_366;
        term = map_1_0.instance.invoke(context, term, lifted5420);
        if(term == null)
          break Fail1219;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted542 extends Strategy 
  { 
    TermReference f_366;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1220:
      { 
        term = read_imports_0_1.instance.invoke(context, term, f_366.value);
        if(term == null)
          break Fail1220;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted531 extends Strategy 
  { 
    TermReference v_363;

    TermReference w_363;

    TermReference x_363;

    TermReference y_363;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1221:
      { 
        TermReference a_364 = new TermReference();
        TermReference b_364 = new TermReference();
        TermReference c_364 = new TermReference();
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consprod_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1221;
        if(a_364.value == null)
          a_364.value = term.getSubterm(0);
        else
          if(a_364.value != term.getSubterm(0) && !a_364.value.match(term.getSubterm(0)))
            break Fail1221;
        if(b_364.value == null)
          b_364.value = term.getSubterm(1);
        else
          if(b_364.value != term.getSubterm(1) && !b_364.value.match(term.getSubterm(1)))
            break Fail1221;
        if(b_364.value == null)
          break Fail1221;
        term = recognize_sort_0_0.instance.invoke(context, b_364.value);
        if(term == null)
          break Fail1221;
        if(c_364.value == null)
          c_364.value = term;
        else
          if(c_364.value != term && !c_364.value.match(term))
            break Fail1221;
        if(v_363.value == null)
          break Fail1221;
        term = v_363.value;
        lifted532 lifted5320 = new lifted532();
        lifted5320.a_364 = a_364;
        lifted5320.c_364 = c_364;
        term = map_1_0.instance.invoke(context, term, lifted5320);
        if(term == null)
          break Fail1221;
        IStrategoTerm term855 = term;
        Success843:
        { 
          Fail1222:
          { 
            IStrategoTerm f_364 = null;
            f_364 = term;
            if(y_363.value == null)
              break Fail1222;
            term = y_363.value;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail1222;
            if(w_363.value == null)
              w_363.value = ((IStrategoList)term).head();
            else
              if(w_363.value != ((IStrategoList)term).head() && !w_363.value.match(((IStrategoList)term).head()))
                break Fail1222;
            IStrategoTerm arg321 = ((IStrategoList)term).tail();
            if(arg321.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg321).isEmpty())
              break Fail1222;
            term = f_364;
            { 
              IStrategoTerm o_364 = null;
              IStrategoTerm p_364 = null;
              p_364 = term;
              if(b_364.value == null)
                break Fail1221;
              term = recognize_sort_0_0.instance.invoke(context, b_364.value);
              if(term == null)
                break Fail1221;
              o_364 = term;
              term = p_364;
              if(c_364.value == null || (x_363.value == null || a_364.value == null))
                break Fail1221;
              term = termFactory.makeTuple(a_364.value, c_364.value, x_363.value, a_364.value, o_364);
              term = write_$Priority_rule_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1221;
              if(true)
                break Success843;
            }
          }
          term = term855;
          if(y_363.value == null)
            break Fail1221;
          term = y_363.value;
          lifted533 lifted5330 = new lifted533();
          lifted5330.b_364 = b_364;
          lifted5330.a_364 = a_364;
          lifted5330.c_364 = c_364;
          lifted5330.x_363 = x_363;
          term = map_1_0.instance.invoke(context, term, lifted5330);
          if(term == null)
            break Fail1221;
        }
        if(a_364.value == null || b_364.value == null)
          break Fail1221;
        term = termFactory.makeTuple(a_364.value, b_364.value);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted533 extends Strategy 
  { 
    TermReference b_364;

    TermReference a_364;

    TermReference c_364;

    TermReference x_363;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1223:
      { 
        TermReference g_364 = new TermReference();
        TermReference h_364 = new TermReference();
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consprod_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1223;
        if(g_364.value == null)
          g_364.value = term.getSubterm(0);
        else
          if(g_364.value != term.getSubterm(0) && !g_364.value.match(term.getSubterm(0)))
            break Fail1223;
        if(h_364.value == null)
          h_364.value = term.getSubterm(1);
        else
          if(h_364.value != term.getSubterm(1) && !h_364.value.match(term.getSubterm(1)))
            break Fail1223;
        IStrategoTerm term856 = term;
        Success844:
        { 
          Fail1224:
          { 
            IStrategoTerm i_364 = null;
            i_364 = term;
            IStrategoTerm term857 = term;
            Success845:
            { 
              Fail1225:
              { 
                lifted535 lifted5350 = new lifted535();
                lifted534 lifted5340 = new lifted534();
                lifted5350.h_364 = h_364;
                lifted5350.b_364 = b_364;
                lifted5340.g_364 = g_364;
                lifted5340.a_364 = a_364;
                term = and_2_0.instance.invoke(context, term, lifted5340, lifted5350);
                if(term == null)
                  break Fail1225;
                { 
                  if(true)
                    break Fail1224;
                  if(true)
                    break Success845;
                }
              }
              term = term857;
            }
            term = i_364;
            { 
              IStrategoTerm q_364 = null;
              IStrategoTerm r_364 = null;
              r_364 = term;
              if(h_364.value == null)
                break Fail1223;
              term = recognize_sort_0_0.instance.invoke(context, h_364.value);
              if(term == null)
                break Fail1223;
              q_364 = term;
              term = r_364;
              if(a_364.value == null || (c_364.value == null || (x_363.value == null || g_364.value == null)))
                break Fail1223;
              term = termFactory.makeTuple(a_364.value, c_364.value, x_363.value, g_364.value, q_364);
              term = write_$Priority_rule_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1223;
              if(true)
                break Success844;
            }
          }
          term = term856;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted535 extends Strategy 
  { 
    TermReference h_364;

    TermReference b_364;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1226:
      { 
        if(h_364.value == null)
          break Fail1226;
        term = h_364.value;
        if(b_364.value == null)
          b_364.value = term;
        else
          if(b_364.value != term && !b_364.value.match(term))
            break Fail1226;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted534 extends Strategy 
  { 
    TermReference g_364;

    TermReference a_364;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1227:
      { 
        if(g_364.value == null)
          break Fail1227;
        term = g_364.value;
        if(a_364.value == null)
          a_364.value = term;
        else
          if(a_364.value != term && !a_364.value.match(term))
            break Fail1227;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted532 extends Strategy 
  { 
    TermReference a_364;

    TermReference c_364;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1228:
      { 
        IStrategoTerm d_364 = null;
        IStrategoTerm e_364 = null;
        IStrategoTerm m_364 = null;
        IStrategoTerm n_364 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1228;
        d_364 = term.getSubterm(0);
        e_364 = term.getSubterm(1);
        n_364 = term;
        term = recognize_sort_0_0.instance.invoke(context, e_364);
        if(term == null)
          break Fail1228;
        m_364 = term;
        term = n_364;
        if(a_364.value == null || c_364.value == null)
          break Fail1228;
        term = termFactory.makeTuple(a_364.value, c_364.value, random_test.const291, d_364, m_364);
        term = write_$Priority_rule_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1228;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted529 extends Strategy 
  { 
    TermReference x_364;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1229:
      { 
        TermReference a_365 = new TermReference();
        IStrategoTerm b_365 = null;
        TermReference c_365 = new TermReference();
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consprod_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1229;
        if(a_365.value == null)
          a_365.value = term.getSubterm(0);
        else
          if(a_365.value != term.getSubterm(0) && !a_365.value.match(term.getSubterm(0)))
            break Fail1229;
        b_365 = term.getSubterm(1);
        term = recognize_sort_0_0.instance.invoke(context, b_365);
        if(term == null)
          break Fail1229;
        if(c_365.value == null)
          c_365.value = term;
        else
          if(c_365.value != term && !c_365.value.match(term))
            break Fail1229;
        if(x_364.value == null)
          break Fail1229;
        term = x_364.value;
        lifted530 lifted5300 = new lifted530();
        lifted5300.a_365 = a_365;
        lifted5300.c_365 = c_365;
        term = map_1_0.instance.invoke(context, term, lifted5300);
        if(term == null)
          break Fail1229;
        if(a_365.value == null)
          break Fail1229;
        term = termFactory.makeTuple(a_365.value, b_365);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted530 extends Strategy 
  { 
    TermReference a_365;

    TermReference c_365;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1230:
      { 
        IStrategoTerm d_365 = null;
        IStrategoTerm e_365 = null;
        IStrategoTerm i_365 = null;
        IStrategoTerm j_365 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1230;
        d_365 = term.getSubterm(0);
        e_365 = term.getSubterm(1);
        j_365 = term;
        term = recognize_sort_0_0.instance.invoke(context, e_365);
        if(term == null)
          break Fail1230;
        i_365 = term;
        term = j_365;
        if(a_365.value == null || c_365.value == null)
          break Fail1230;
        term = termFactory.makeTuple(a_365.value, c_365.value, random_test.const291, d_365, i_365);
        term = write_$Priority_rule_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1230;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted528 extends Strategy 
  { 
    TermReference t_365;

    TermReference u_365;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1231:
      { 
        IStrategoTerm v_365 = null;
        IStrategoTerm w_365 = null;
        IStrategoTerm a_366 = null;
        IStrategoTerm b_366 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1231;
        v_365 = term.getSubterm(0);
        w_365 = term.getSubterm(1);
        b_366 = term;
        term = recognize_sort_0_0.instance.invoke(context, w_365);
        if(term == null)
          break Fail1231;
        a_366 = term;
        term = b_366;
        if(t_365.value == null || u_365.value == null)
          break Fail1231;
        term = termFactory.makeTuple(t_365.value, u_365.value, random_test.const291, v_365, a_366);
        term = write_$Priority_rule_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1231;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted525 extends Strategy 
  { 
    TermReference g_362;

    TermReference h_362;

    TermReference i_362;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1232:
      { 
        IStrategoTerm m_362 = null;
        IStrategoTerm n_362 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1232;
        m_362 = term.getSubterm(0);
        n_362 = term.getSubterm(1);
        IStrategoTerm term843 = term;
        Success846:
        { 
          Fail1233:
          { 
            IStrategoTerm p_362 = null;
            p_362 = term;
            term = n_362;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)term).getConstructor())
              break Fail1233;
            term = p_362;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const435);
              if(term == null)
                break Fail1232;
              if(true)
                break Success846;
            }
          }
          term = term843;
        }
        IStrategoTerm term844 = term;
        Success847:
        { 
          Fail1234:
          { 
            IStrategoTerm q_362 = null;
            q_362 = term;
            term = n_362;
            if(term.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_sort_2 != ((IStrategoAppl)term).getConstructor())
              break Fail1234;
            term = q_362;
            { 
              term = debug_0_0.instance.invoke(context, random_test.const436);
              if(term == null)
                break Fail1232;
              if(true)
                break Success847;
            }
          }
          term = term844;
        }
        term = termFactory.makeTuple(m_362, n_362, random_test.const291);
        term = bagof_$Priority_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1232;
        lifted526 lifted5260 = new lifted526();
        lifted5260.g_362 = g_362;
        lifted5260.h_362 = h_362;
        lifted5260.i_362 = i_362;
        term = filter_1_0.instance.invoke(context, term, lifted5260);
        if(term == null)
          break Fail1232;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted526 extends Strategy 
  { 
    TermReference g_362;

    TermReference h_362;

    TermReference i_362;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1235:
      { 
        TermReference r_362 = new TermReference();
        TermReference s_362 = new TermReference();
        IStrategoTerm t_362 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1235;
        if(r_362.value == null)
          r_362.value = term.getSubterm(0);
        else
          if(r_362.value != term.getSubterm(0) && !r_362.value.match(term.getSubterm(0)))
            break Fail1235;
        if(s_362.value == null)
          s_362.value = term.getSubterm(1);
        else
          if(s_362.value != term.getSubterm(1) && !s_362.value.match(term.getSubterm(1)))
            break Fail1235;
        t_362 = term;
        if(g_362.value == null)
          break Fail1235;
        term = g_362.value;
        lifted527 lifted5270 = new lifted527();
        lifted5270.r_362 = r_362;
        lifted5270.s_362 = s_362;
        term = filter_1_0.instance.invoke(context, term, lifted5270);
        if(term == null)
          break Fail1235;
        if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
          break Fail1235;
        term = t_362;
        if(h_362.value == null || (i_362.value == null || (r_362.value == null || s_362.value == null)))
          break Fail1235;
        term = termFactory.makeTuple(h_362.value, i_362.value, r_362.value, s_362.value);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted527 extends Strategy 
  { 
    TermReference r_362;

    TermReference s_362;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1236:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1236;
        if(r_362.value == null)
          r_362.value = term.getSubterm(0);
        else
          if(r_362.value != term.getSubterm(0) && !r_362.value.match(term.getSubterm(0)))
            break Fail1236;
        if(s_362.value == null)
          s_362.value = term.getSubterm(1);
        else
          if(s_362.value != term.getSubterm(1) && !s_362.value.match(term.getSubterm(1)))
            break Fail1236;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted524 extends Strategy 
  { 
    public static final lifted524 instance = new lifted524();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1237:
      { 
        IStrategoTerm x_361 = null;
        IStrategoTerm y_361 = null;
        IStrategoTerm z_361 = null;
        IStrategoTerm a_362 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 4)
          break Fail1237;
        x_361 = term.getSubterm(0);
        z_361 = term.getSubterm(1);
        y_361 = term.getSubterm(2);
        a_362 = term.getSubterm(3);
        term = termFactory.makeTuple(x_361, z_361, random_test.const291, y_361, a_362);
        term = write_$Priority_rule_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1237;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted523 extends Strategy 
  { 
    public static final lifted523 instance = new lifted523();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1238:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
          break Fail1238;
        IStrategoTerm arg304 = term.getSubterm(2);
        if(arg304.getTermType() != IStrategoTerm.STRING || !">".equals(((IStrategoString)arg304).stringValue()))
          break Fail1238;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted522 extends Strategy 
  { 
    public static final lifted522 instance = new lifted522();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1239:
      { 
        IStrategoTerm o_361 = null;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conschain_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1239;
        o_361 = term.getSubterm(0);
        term = read_priority_0_0.instance.invoke(context, o_361);
        if(term == null)
          break Fail1239;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted518 extends Strategy 
  { 
    TermReference u_360;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1240:
      { 
        lifted520 lifted5200 = new lifted520();
        lifted519 lifted5190 = new lifted519();
        lifted5200.u_360 = u_360;
        lifted5190.u_360 = u_360;
        term = or_2_0.instance.invoke(context, term, lifted5190, lifted5200);
        if(term == null)
          break Fail1240;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted520 extends Strategy 
  { 
    TermReference u_360;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1241:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1241;
        IStrategoTerm arg297 = term.getSubterm(0);
        if(arg297.getTermType() != IStrategoTerm.APPL || random_test._consparameterized_2 != ((IStrategoAppl)arg297).getConstructor())
          break Fail1241;
        if(u_360.value == null)
          u_360.value = arg297.getSubterm(0);
        else
          if(u_360.value != arg297.getSubterm(0) && !u_360.value.match(arg297.getSubterm(0)))
            break Fail1241;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted519 extends Strategy 
  { 
    TermReference u_360;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1242:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consmodule_3 != ((IStrategoAppl)term).getConstructor())
          break Fail1242;
        IStrategoTerm arg294 = term.getSubterm(0);
        if(arg294.getTermType() != IStrategoTerm.APPL || random_test._consunparameterized_1 != ((IStrategoAppl)arg294).getConstructor())
          break Fail1242;
        if(u_360.value == null)
          u_360.value = arg294.getSubterm(0);
        else
          if(u_360.value != arg294.getSubterm(0) && !u_360.value.match(arg294.getSubterm(0)))
            break Fail1242;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted517 extends Strategy 
  { 
    TermReference i_360;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1243:
      { 
        IStrategoTerm j_360 = null;
        IStrategoTerm n_360 = null;
        IStrategoTerm p_360 = null;
        IStrategoTerm q_360 = null;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1243;
        if(i_360.value == null)
          i_360.value = term.getSubterm(0);
        else
          if(i_360.value != term.getSubterm(0) && !i_360.value.match(term.getSubterm(0)))
            break Fail1243;
        j_360 = term;
        p_360 = term;
        n_360 = random_test.const427;
        term = p_360;
        q_360 = p_360;
        if(i_360.value == null)
          break Fail1243;
        term = termFactory.makeTuple(random_test.const428, i_360.value);
        term = dr_set_rule_0_3.instance.invoke(context, q_360, n_360, i_360.value, term);
        if(term == null)
          break Fail1243;
        term = j_360;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted512 extends Strategy 
  { 
    public static final lifted512 instance = new lifted512();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1244:
      { 
        IStrategoTerm g_351 = null;
        IStrategoTerm i_351 = null;
        i_351 = term;
        g_351 = term;
        term = i_351;
        term = $Snd_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1244;
        term = inc_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1244;
        term = termFactory.makeTuple(g_351, term);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted510 extends Strategy 
  { 
    TermReference h_349;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1245:
      { 
        IStrategoTerm s_350 = null;
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consPP_Table_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1245;
        s_350 = term.getSubterm(0);
        term = reverse_0_0.instance.invoke(context, s_350);
        if(term == null)
          break Fail1245;
        lifted511 lifted5110 = new lifted511();
        lifted5110.h_349 = h_349;
        term = map_1_0.instance.invoke(context, term, lifted5110);
        if(term == null)
          break Fail1245;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted511 extends Strategy 
  { 
    TermReference h_349;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1246:
      { 
        term = pptable_desugar_entry_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1246;
        term = pptable_store_entry_0_1.instance.invoke(context, term, h_349.value);
        if(term == null)
          break Fail1246;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class write_test_0_5_fragment_0 extends Strategy 
  { 
    TermReference z_342;

    TermReference a_343;

    TermReference x_342;

    TermReference y_342;

    TermReference v_347;

    TermReference h_343;

    TermReference i_343;

    TermReference f_343;

    TermReference g_343;

    TermReference w_347;

    TermReference r_347;

    TermReference s_347;

    TermReference t_347;

    TermReference q_347;

    TermReference p_347;

    TermReference o_339;

    TermReference u_339;

    TermReference k_343;

    TermReference j_343;

    TermReference r_343;

    TermReference s_343;

    TermReference p_343;

    TermReference q_343;

    TermReference c_348;

    TermReference u_343;

    TermReference t_343;

    TermReference b_344;

    TermReference c_344;

    TermReference z_343;

    TermReference a_344;

    TermReference d_348;

    TermReference j_344;

    TermReference k_344;

    TermReference h_344;

    TermReference i_344;

    TermReference e_348;

    TermReference z_347;

    TermReference a_348;

    TermReference b_348;

    TermReference y_347;

    TermReference x_347;

    TermReference p_339;

    TermReference g_348;

    TermReference f_348;

    TermReference v_339;

    TermReference w_339;

    TermReference i_348;

    TermReference h_348;

    TermReference j_345;

    TermReference k_345;

    TermReference h_345;

    TermReference i_345;

    TermReference t_348;

    TermReference m_345;

    TermReference l_345;

    TermReference t_345;

    TermReference u_345;

    TermReference r_345;

    TermReference s_345;

    TermReference u_348;

    TermReference r_348;

    TermReference s_348;

    TermReference q_348;

    TermReference p_348;

    TermReference x_339;

    TermReference w_348;

    TermReference v_348;

    TermReference y_339;

    TermReference z_339;

    TermReference w_345;

    TermReference v_345;

    TermReference d_346;

    TermReference e_346;

    TermReference b_346;

    TermReference c_346;

    TermReference c_349;

    TermReference g_346;

    TermReference f_346;

    TermReference n_346;

    TermReference o_346;

    TermReference l_346;

    TermReference m_346;

    TermReference d_349;

    TermReference m_339;

    TermReference v_346;

    TermReference w_346;

    TermReference t_346;

    TermReference u_346;

    TermReference e_349;

    TermReference z_348;

    TermReference a_349;

    TermReference b_349;

    TermReference y_348;

    TermReference x_348;

    TermReference a_340;

    TermReference b_340;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1247:
      { 
        if(z_342.value == null)
          break Fail1247;
        term = z_342.value;
        if(a_343.value == null)
          a_343.value = term;
        else
          if(a_343.value != term && !a_343.value.match(term))
            break Fail1247;
        term = random_test.const372;
        if(y_342.value == null)
          y_342.value = term;
        else
          if(y_342.value != term && !y_342.value.match(term))
            break Fail1247;
        if(a_343.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, a_343.value, x_342.value, y_342.value);
        if(term == null)
          break Fail1247;
        if(s_347.value == null)
          s_347.value = term;
        else
          if(s_347.value != term && !s_347.value.match(term))
            break Fail1247;
        if(v_347.value == null)
          break Fail1247;
        term = v_347.value;
        if(w_347.value == null)
          w_347.value = term;
        else
          if(w_347.value != term && !w_347.value.match(term))
            break Fail1247;
        if(m_339.value == null)
          break Fail1247;
        term = m_339.value;
        IStrategoTerm term723 = term;
        Success848:
        { 
          Fail1248:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1248;
            if(true)
              break Success848;
          }
          term = term723;
          IStrategoTerm term724 = term;
          Success849:
          { 
            Fail1249:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1249;
              if(true)
                break Success849;
            }
            term = term724;
            IStrategoTerm term725 = term;
            Success850:
            { 
              Fail1250:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1250;
                if(true)
                  break Success850;
              }
              term = term725;
              IStrategoTerm term726 = term;
              Success851:
              { 
                Fail1251:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1251;
                  if(true)
                    break Success851;
                }
                term = term726;
                IStrategoTerm b_343 = null;
                IStrategoTerm c_343 = null;
                IStrategoTerm e_343 = null;
                b_343 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                c_343 = ((IStrategoList)term).tail();
                e_343 = c_343;
                term = report_failure_0_2.instance.invoke(context, e_343, random_test.const392, b_343);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(h_343.value == null)
          h_343.value = term;
        else
          if(h_343.value != term && !h_343.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(f_343.value == null)
          f_343.value = term;
        else
          if(f_343.value != term && !f_343.value.match(term))
            break Fail1247;
        if(h_343.value == null)
          break Fail1247;
        term = h_343.value;
        if(i_343.value == null)
          i_343.value = term;
        else
          if(i_343.value != term && !i_343.value.match(term))
            break Fail1247;
        term = random_test.const393;
        if(g_343.value == null)
          g_343.value = term;
        else
          if(g_343.value != term && !g_343.value.match(term))
            break Fail1247;
        if(i_343.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, i_343.value, f_343.value, g_343.value);
        if(term == null)
          break Fail1247;
        if(t_347.value == null)
          t_347.value = term;
        else
          if(t_347.value != term && !t_347.value.match(term))
            break Fail1247;
        if(w_347.value == null)
          break Fail1247;
        term = w_347.value;
        if(r_347.value == null || (s_347.value == null || t_347.value == null))
          break Fail1247;
        term = (IStrategoTerm)termFactory.makeListCons(r_347.value, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(s_347.value, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(t_347.value, (IStrategoList)random_test.constCons65)))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(p_347.value == null)
          p_347.value = term;
        else
          if(p_347.value != term && !p_347.value.match(term))
            break Fail1247;
        if(q_347.value == null)
          break Fail1247;
        term = q_347.value;
        if(p_347.value == null)
          break Fail1247;
        term = termFactory.annotateTerm(p_347.value, checkListAnnos(termFactory, random_test.constNil0));
        if(u_339.value == null)
          u_339.value = term;
        else
          if(u_339.value != term && !u_339.value.match(term))
            break Fail1247;
        if(o_339.value == null)
          break Fail1247;
        term = write_log_0_1.instance.invoke(context, o_339.value, u_339.value);
        if(term == null)
          break Fail1247;
        if(y_347.value == null)
          y_347.value = term;
        else
          if(y_347.value != term && !y_347.value.match(term))
            break Fail1247;
        if(c_348.value == null)
          c_348.value = term;
        else
          if(c_348.value != term && !c_348.value.match(term))
            break Fail1247;
        if(k_343.value == null)
          k_343.value = term;
        else
          if(k_343.value != term && !k_343.value.match(term))
            break Fail1247;
        term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(j_343.value == null)
          j_343.value = term;
        else
          if(j_343.value != term && !j_343.value.match(term))
            break Fail1247;
        if(k_343.value == null)
          break Fail1247;
        term = k_343.value;
        if(j_343.value == null)
          break Fail1247;
        term = j_343.value;
        IStrategoTerm term727 = term;
        Success852:
        { 
          Fail1252:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1252;
            if(true)
              break Success852;
          }
          term = term727;
          IStrategoTerm term728 = term;
          Success853:
          { 
            Fail1253:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1253;
              if(true)
                break Success853;
            }
            term = term728;
            IStrategoTerm term729 = term;
            Success854:
            { 
              Fail1254:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1254;
                if(true)
                  break Success854;
              }
              term = term729;
              IStrategoTerm term730 = term;
              Success855:
              { 
                Fail1255:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1255;
                  if(true)
                    break Success855;
                }
                term = term730;
                IStrategoTerm l_343 = null;
                IStrategoTerm m_343 = null;
                IStrategoTerm o_343 = null;
                l_343 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                m_343 = ((IStrategoList)term).tail();
                o_343 = m_343;
                term = report_failure_0_2.instance.invoke(context, o_343, random_test.const392, l_343);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(r_343.value == null)
          r_343.value = term;
        else
          if(r_343.value != term && !r_343.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(p_343.value == null)
          p_343.value = term;
        else
          if(p_343.value != term && !p_343.value.match(term))
            break Fail1247;
        if(r_343.value == null)
          break Fail1247;
        term = r_343.value;
        if(s_343.value == null)
          s_343.value = term;
        else
          if(s_343.value != term && !s_343.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(q_343.value == null)
          q_343.value = term;
        else
          if(q_343.value != term && !q_343.value.match(term))
            break Fail1247;
        if(s_343.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, s_343.value, p_343.value, q_343.value);
        if(term == null)
          break Fail1247;
        if(z_347.value == null)
          z_347.value = term;
        else
          if(z_347.value != term && !z_347.value.match(term))
            break Fail1247;
        if(c_348.value == null)
          break Fail1247;
        term = c_348.value;
        if(d_348.value == null)
          d_348.value = term;
        else
          if(d_348.value != term && !d_348.value.match(term))
            break Fail1247;
        if(u_343.value == null)
          u_343.value = term;
        else
          if(u_343.value != term && !u_343.value.match(term))
            break Fail1247;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(t_343.value == null)
          t_343.value = term;
        else
          if(t_343.value != term && !t_343.value.match(term))
            break Fail1247;
        if(u_343.value == null)
          break Fail1247;
        term = u_343.value;
        if(t_343.value == null)
          break Fail1247;
        term = t_343.value;
        IStrategoTerm term731 = term;
        Success856:
        { 
          Fail1256:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1256;
            if(true)
              break Success856;
          }
          term = term731;
          IStrategoTerm term732 = term;
          Success857:
          { 
            Fail1257:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1257;
              if(true)
                break Success857;
            }
            term = term732;
            IStrategoTerm term733 = term;
            Success858:
            { 
              Fail1258:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1258;
                if(true)
                  break Success858;
              }
              term = term733;
              IStrategoTerm term734 = term;
              Success859:
              { 
                Fail1259:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1259;
                  if(true)
                    break Success859;
                }
                term = term734;
                IStrategoTerm v_343 = null;
                IStrategoTerm w_343 = null;
                IStrategoTerm y_343 = null;
                v_343 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                w_343 = ((IStrategoList)term).tail();
                y_343 = w_343;
                term = report_failure_0_2.instance.invoke(context, y_343, random_test.const392, v_343);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(b_344.value == null)
          b_344.value = term;
        else
          if(b_344.value != term && !b_344.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(z_343.value == null)
          z_343.value = term;
        else
          if(z_343.value != term && !z_343.value.match(term))
            break Fail1247;
        if(b_344.value == null)
          break Fail1247;
        term = b_344.value;
        if(c_344.value == null)
          c_344.value = term;
        else
          if(c_344.value != term && !c_344.value.match(term))
            break Fail1247;
        term = random_test.const372;
        if(a_344.value == null)
          a_344.value = term;
        else
          if(a_344.value != term && !a_344.value.match(term))
            break Fail1247;
        if(c_344.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, c_344.value, z_343.value, a_344.value);
        if(term == null)
          break Fail1247;
        if(a_348.value == null)
          a_348.value = term;
        else
          if(a_348.value != term && !a_348.value.match(term))
            break Fail1247;
        if(d_348.value == null)
          break Fail1247;
        term = d_348.value;
        if(e_348.value == null)
          e_348.value = term;
        else
          if(e_348.value != term && !e_348.value.match(term))
            break Fail1247;
        if(m_339.value == null)
          break Fail1247;
        term = m_339.value;
        IStrategoTerm term735 = term;
        Success860:
        { 
          Fail1260:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1260;
            if(true)
              break Success860;
          }
          term = term735;
          IStrategoTerm term736 = term;
          Success861:
          { 
            Fail1261:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1261;
              if(true)
                break Success861;
            }
            term = term736;
            IStrategoTerm term737 = term;
            Success862:
            { 
              Fail1262:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1262;
                if(true)
                  break Success862;
              }
              term = term737;
              IStrategoTerm term738 = term;
              Success863:
              { 
                Fail1263:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1263;
                  if(true)
                    break Success863;
                }
                term = term738;
                IStrategoTerm d_344 = null;
                IStrategoTerm e_344 = null;
                IStrategoTerm g_344 = null;
                d_344 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                e_344 = ((IStrategoList)term).tail();
                g_344 = e_344;
                term = report_failure_0_2.instance.invoke(context, g_344, random_test.const392, d_344);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(j_344.value == null)
          j_344.value = term;
        else
          if(j_344.value != term && !j_344.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(h_344.value == null)
          h_344.value = term;
        else
          if(h_344.value != term && !h_344.value.match(term))
            break Fail1247;
        if(j_344.value == null)
          break Fail1247;
        term = j_344.value;
        if(k_344.value == null)
          k_344.value = term;
        else
          if(k_344.value != term && !k_344.value.match(term))
            break Fail1247;
        term = random_test.const393;
        if(i_344.value == null)
          i_344.value = term;
        else
          if(i_344.value != term && !i_344.value.match(term))
            break Fail1247;
        if(k_344.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, k_344.value, h_344.value, i_344.value);
        if(term == null)
          break Fail1247;
        if(b_348.value == null)
          b_348.value = term;
        else
          if(b_348.value != term && !b_348.value.match(term))
            break Fail1247;
        if(e_348.value == null)
          break Fail1247;
        term = e_348.value;
        if(z_347.value == null || (a_348.value == null || b_348.value == null))
          break Fail1247;
        term = (IStrategoTerm)termFactory.makeListCons(z_347.value, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(a_348.value, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(b_348.value, (IStrategoList)random_test.constCons66)))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(x_347.value == null)
          x_347.value = term;
        else
          if(x_347.value != term && !x_347.value.match(term))
            break Fail1247;
        if(y_347.value == null)
          break Fail1247;
        term = y_347.value;
        if(x_347.value == null)
          break Fail1247;
        term = termFactory.annotateTerm(x_347.value, checkListAnnos(termFactory, random_test.constNil0));
        if(w_339.value == null)
          w_339.value = term;
        else
          if(w_339.value != term && !w_339.value.match(term))
            break Fail1247;
        if(p_339.value == null)
          break Fail1247;
        term = pp_aterm_box_0_0.instance.invoke(context, p_339.value);
        if(term == null)
          break Fail1247;
        if(g_348.value == null)
          g_348.value = term;
        else
          if(g_348.value != term && !g_348.value.match(term))
            break Fail1247;
        term = random_test.const398;
        if(f_348.value == null)
          f_348.value = term;
        else
          if(f_348.value != term && !f_348.value.match(term))
            break Fail1247;
        if(g_348.value == null)
          break Fail1247;
        term = box2text_string_0_1.instance.invoke(context, g_348.value, f_348.value);
        if(term == null)
          break Fail1247;
        if(v_339.value == null)
          v_339.value = term;
        else
          if(v_339.value != term && !v_339.value.match(term))
            break Fail1247;
        if(v_339.value == null)
          break Fail1247;
        term = write_log_0_1.instance.invoke(context, v_339.value, w_339.value);
        if(term == null)
          break Fail1247;
        if(i_348.value == null)
          i_348.value = term;
        else
          if(i_348.value != term && !i_348.value.match(term))
            break Fail1247;
        term = all_keys_$Covered$Cons_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        term = map_1_0.instance.invoke(context, term, lifted509.instance);
        if(term == null)
          break Fail1247;
        if(h_348.value == null)
          h_348.value = term;
        else
          if(h_348.value != term && !h_348.value.match(term))
            break Fail1247;
        if(i_348.value == null)
          break Fail1247;
        term = i_348.value;
        if(h_348.value == null)
          break Fail1247;
        term = h_348.value;
        if(x_339.value == null)
          x_339.value = term;
        else
          if(x_339.value != term && !x_339.value.match(term))
            break Fail1247;
        if(q_348.value == null)
          q_348.value = term;
        else
          if(q_348.value != term && !q_348.value.match(term))
            break Fail1247;
        if(t_348.value == null)
          t_348.value = term;
        else
          if(t_348.value != term && !t_348.value.match(term))
            break Fail1247;
        if(x_339.value == null)
          break Fail1247;
        term = length_0_0.instance.invoke(context, x_339.value);
        if(term == null)
          break Fail1247;
        IStrategoTerm term747 = term;
        Success864:
        { 
          Fail1264:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1264;
            if(true)
              break Success864;
          }
          term = term747;
          IStrategoTerm term748 = term;
          Success865:
          { 
            Fail1265:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1265;
              if(true)
                break Success865;
            }
            term = term748;
            IStrategoTerm term749 = term;
            Success866:
            { 
              Fail1266:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1266;
                if(true)
                  break Success866;
              }
              term = term749;
              IStrategoTerm term750 = term;
              Success867:
              { 
                Fail1267:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1267;
                  if(true)
                    break Success867;
                }
                term = term750;
                IStrategoTerm d_345 = null;
                IStrategoTerm e_345 = null;
                IStrategoTerm g_345 = null;
                d_345 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                e_345 = ((IStrategoList)term).tail();
                g_345 = e_345;
                term = report_failure_0_2.instance.invoke(context, g_345, random_test.const392, d_345);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(j_345.value == null)
          j_345.value = term;
        else
          if(j_345.value != term && !j_345.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(h_345.value == null)
          h_345.value = term;
        else
          if(h_345.value != term && !h_345.value.match(term))
            break Fail1247;
        if(j_345.value == null)
          break Fail1247;
        term = j_345.value;
        if(k_345.value == null)
          k_345.value = term;
        else
          if(k_345.value != term && !k_345.value.match(term))
            break Fail1247;
        term = random_test.const9;
        if(i_345.value == null)
          i_345.value = term;
        else
          if(i_345.value != term && !i_345.value.match(term))
            break Fail1247;
        if(k_345.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, k_345.value, h_345.value, i_345.value);
        if(term == null)
          break Fail1247;
        if(r_348.value == null)
          r_348.value = term;
        else
          if(r_348.value != term && !r_348.value.match(term))
            break Fail1247;
        if(t_348.value == null)
          break Fail1247;
        term = t_348.value;
        if(u_348.value == null)
          u_348.value = term;
        else
          if(u_348.value != term && !u_348.value.match(term))
            break Fail1247;
        if(m_345.value == null)
          m_345.value = term;
        else
          if(m_345.value != term && !m_345.value.match(term))
            break Fail1247;
        term = $All$Cons$Count_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(l_345.value == null)
          l_345.value = term;
        else
          if(l_345.value != term && !l_345.value.match(term))
            break Fail1247;
        if(m_345.value == null)
          break Fail1247;
        term = m_345.value;
        if(l_345.value == null)
          break Fail1247;
        term = l_345.value;
        IStrategoTerm term751 = term;
        Success868:
        { 
          Fail1268:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1268;
            if(true)
              break Success868;
          }
          term = term751;
          IStrategoTerm term752 = term;
          Success869:
          { 
            Fail1269:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1269;
              if(true)
                break Success869;
            }
            term = term752;
            IStrategoTerm term753 = term;
            Success870:
            { 
              Fail1270:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1270;
                if(true)
                  break Success870;
              }
              term = term753;
              IStrategoTerm term754 = term;
              Success871:
              { 
                Fail1271:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1271;
                  if(true)
                    break Success871;
                }
                term = term754;
                IStrategoTerm n_345 = null;
                IStrategoTerm o_345 = null;
                IStrategoTerm q_345 = null;
                n_345 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                o_345 = ((IStrategoList)term).tail();
                q_345 = o_345;
                term = report_failure_0_2.instance.invoke(context, q_345, random_test.const392, n_345);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(t_345.value == null)
          t_345.value = term;
        else
          if(t_345.value != term && !t_345.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(r_345.value == null)
          r_345.value = term;
        else
          if(r_345.value != term && !r_345.value.match(term))
            break Fail1247;
        if(t_345.value == null)
          break Fail1247;
        term = t_345.value;
        if(u_345.value == null)
          u_345.value = term;
        else
          if(u_345.value != term && !u_345.value.match(term))
            break Fail1247;
        term = random_test.const400;
        if(s_345.value == null)
          s_345.value = term;
        else
          if(s_345.value != term && !s_345.value.match(term))
            break Fail1247;
        if(u_345.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, u_345.value, r_345.value, s_345.value);
        if(term == null)
          break Fail1247;
        if(s_348.value == null)
          s_348.value = term;
        else
          if(s_348.value != term && !s_348.value.match(term))
            break Fail1247;
        if(u_348.value == null)
          break Fail1247;
        term = u_348.value;
        if(r_348.value == null || s_348.value == null)
          break Fail1247;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const401, termFactory.makeListCons(r_348.value, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(s_348.value, (IStrategoList)random_test.constNil0))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(p_348.value == null)
          p_348.value = term;
        else
          if(p_348.value != term && !p_348.value.match(term))
            break Fail1247;
        if(q_348.value == null)
          break Fail1247;
        term = q_348.value;
        if(p_348.value == null)
          break Fail1247;
        term = termFactory.annotateTerm(p_348.value, checkListAnnos(termFactory, random_test.constNil0));
        if(y_339.value == null)
          y_339.value = term;
        else
          if(y_339.value != term && !y_339.value.match(term))
            break Fail1247;
        if(x_339.value == null)
          break Fail1247;
        term = x_339.value;
        if(w_348.value == null)
          w_348.value = term;
        else
          if(w_348.value != term && !w_348.value.match(term))
            break Fail1247;
        term = random_test.const18;
        if(v_348.value == null)
          v_348.value = term;
        else
          if(v_348.value != term && !v_348.value.match(term))
            break Fail1247;
        if(w_348.value == null)
          break Fail1247;
        term = separate_by_0_1.instance.invoke(context, w_348.value, v_348.value);
        if(term == null)
          break Fail1247;
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(z_339.value == null)
          z_339.value = term;
        else
          if(z_339.value != term && !z_339.value.match(term))
            break Fail1247;
        if(y_339.value == null || z_339.value == null)
          break Fail1247;
        term = (IStrategoTerm)termFactory.makeListCons(y_339.value, termFactory.makeListCons(random_test.const402, termFactory.makeListCons(z_339.value, (IStrategoList)random_test.constNil0)));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(a_340.value == null)
          a_340.value = term;
        else
          if(a_340.value != term && !a_340.value.match(term))
            break Fail1247;
        if(y_348.value == null)
          y_348.value = term;
        else
          if(y_348.value != term && !y_348.value.match(term))
            break Fail1247;
        if(c_349.value == null)
          c_349.value = term;
        else
          if(c_349.value != term && !c_349.value.match(term))
            break Fail1247;
        if(w_345.value == null)
          w_345.value = term;
        else
          if(w_345.value != term && !w_345.value.match(term))
            break Fail1247;
        term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(v_345.value == null)
          v_345.value = term;
        else
          if(v_345.value != term && !v_345.value.match(term))
            break Fail1247;
        if(w_345.value == null)
          break Fail1247;
        term = w_345.value;
        if(v_345.value == null)
          break Fail1247;
        term = v_345.value;
        IStrategoTerm term755 = term;
        Success872:
        { 
          Fail1272:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1272;
            if(true)
              break Success872;
          }
          term = term755;
          IStrategoTerm term756 = term;
          Success873:
          { 
            Fail1273:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1273;
              if(true)
                break Success873;
            }
            term = term756;
            IStrategoTerm term757 = term;
            Success874:
            { 
              Fail1274:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1274;
                if(true)
                  break Success874;
              }
              term = term757;
              IStrategoTerm term758 = term;
              Success875:
              { 
                Fail1275:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1275;
                  if(true)
                    break Success875;
                }
                term = term758;
                IStrategoTerm x_345 = null;
                IStrategoTerm y_345 = null;
                IStrategoTerm a_346 = null;
                x_345 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                y_345 = ((IStrategoList)term).tail();
                a_346 = y_345;
                term = report_failure_0_2.instance.invoke(context, a_346, random_test.const392, x_345);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(d_346.value == null)
          d_346.value = term;
        else
          if(d_346.value != term && !d_346.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(b_346.value == null)
          b_346.value = term;
        else
          if(b_346.value != term && !b_346.value.match(term))
            break Fail1247;
        if(d_346.value == null)
          break Fail1247;
        term = d_346.value;
        if(e_346.value == null)
          e_346.value = term;
        else
          if(e_346.value != term && !e_346.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(c_346.value == null)
          c_346.value = term;
        else
          if(c_346.value != term && !c_346.value.match(term))
            break Fail1247;
        if(e_346.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, e_346.value, b_346.value, c_346.value);
        if(term == null)
          break Fail1247;
        if(z_348.value == null)
          z_348.value = term;
        else
          if(z_348.value != term && !z_348.value.match(term))
            break Fail1247;
        if(c_349.value == null)
          break Fail1247;
        term = c_349.value;
        if(d_349.value == null)
          d_349.value = term;
        else
          if(d_349.value != term && !d_349.value.match(term))
            break Fail1247;
        if(g_346.value == null)
          g_346.value = term;
        else
          if(g_346.value != term && !g_346.value.match(term))
            break Fail1247;
        term = $Language_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(f_346.value == null)
          f_346.value = term;
        else
          if(f_346.value != term && !f_346.value.match(term))
            break Fail1247;
        if(g_346.value == null)
          break Fail1247;
        term = g_346.value;
        if(f_346.value == null)
          break Fail1247;
        term = f_346.value;
        IStrategoTerm term759 = term;
        Success876:
        { 
          Fail1276:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1276;
            if(true)
              break Success876;
          }
          term = term759;
          IStrategoTerm term760 = term;
          Success877:
          { 
            Fail1277:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1277;
              if(true)
                break Success877;
            }
            term = term760;
            IStrategoTerm term761 = term;
            Success878:
            { 
              Fail1278:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1278;
                if(true)
                  break Success878;
              }
              term = term761;
              IStrategoTerm term762 = term;
              Success879:
              { 
                Fail1279:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1279;
                  if(true)
                    break Success879;
                }
                term = term762;
                IStrategoTerm h_346 = null;
                IStrategoTerm i_346 = null;
                IStrategoTerm k_346 = null;
                h_346 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                i_346 = ((IStrategoList)term).tail();
                k_346 = i_346;
                term = report_failure_0_2.instance.invoke(context, k_346, random_test.const392, h_346);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(n_346.value == null)
          n_346.value = term;
        else
          if(n_346.value != term && !n_346.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(l_346.value == null)
          l_346.value = term;
        else
          if(l_346.value != term && !l_346.value.match(term))
            break Fail1247;
        if(n_346.value == null)
          break Fail1247;
        term = n_346.value;
        if(o_346.value == null)
          o_346.value = term;
        else
          if(o_346.value != term && !o_346.value.match(term))
            break Fail1247;
        term = random_test.const372;
        if(m_346.value == null)
          m_346.value = term;
        else
          if(m_346.value != term && !m_346.value.match(term))
            break Fail1247;
        if(o_346.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, o_346.value, l_346.value, m_346.value);
        if(term == null)
          break Fail1247;
        if(a_349.value == null)
          a_349.value = term;
        else
          if(a_349.value != term && !a_349.value.match(term))
            break Fail1247;
        if(d_349.value == null)
          break Fail1247;
        term = d_349.value;
        if(e_349.value == null)
          e_349.value = term;
        else
          if(e_349.value != term && !e_349.value.match(term))
            break Fail1247;
        if(m_339.value == null)
          break Fail1247;
        term = m_339.value;
        IStrategoTerm term763 = term;
        Success880:
        { 
          Fail1280:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1280;
            if(true)
              break Success880;
          }
          term = term763;
          IStrategoTerm term764 = term;
          Success881:
          { 
            Fail1281:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1281;
              if(true)
                break Success881;
            }
            term = term764;
            IStrategoTerm term765 = term;
            Success882:
            { 
              Fail1282:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1282;
                if(true)
                  break Success882;
              }
              term = term765;
              IStrategoTerm term766 = term;
              Success883:
              { 
                Fail1283:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1283;
                  if(true)
                    break Success883;
                }
                term = term766;
                IStrategoTerm p_346 = null;
                IStrategoTerm q_346 = null;
                IStrategoTerm s_346 = null;
                p_346 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1247;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1247;
                q_346 = ((IStrategoList)term).tail();
                s_346 = q_346;
                term = report_failure_0_2.instance.invoke(context, s_346, random_test.const392, p_346);
                if(term == null)
                  break Fail1247;
              }
            }
          }
        }
        if(v_346.value == null)
          v_346.value = term;
        else
          if(v_346.value != term && !v_346.value.match(term))
            break Fail1247;
        term = random_test.const8;
        if(t_346.value == null)
          t_346.value = term;
        else
          if(t_346.value != term && !t_346.value.match(term))
            break Fail1247;
        if(v_346.value == null)
          break Fail1247;
        term = v_346.value;
        if(w_346.value == null)
          w_346.value = term;
        else
          if(w_346.value != term && !w_346.value.match(term))
            break Fail1247;
        term = random_test.const393;
        if(u_346.value == null)
          u_346.value = term;
        else
          if(u_346.value != term && !u_346.value.match(term))
            break Fail1247;
        if(w_346.value == null)
          break Fail1247;
        term = string_replace_0_2.instance.invoke(context, w_346.value, t_346.value, u_346.value);
        if(term == null)
          break Fail1247;
        if(b_349.value == null)
          b_349.value = term;
        else
          if(b_349.value != term && !b_349.value.match(term))
            break Fail1247;
        if(e_349.value == null)
          break Fail1247;
        term = e_349.value;
        if(z_348.value == null || (a_349.value == null || b_349.value == null))
          break Fail1247;
        term = (IStrategoTerm)termFactory.makeListCons(z_348.value, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(a_349.value, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(b_349.value, (IStrategoList)random_test.constCons67)))));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1247;
        if(x_348.value == null)
          x_348.value = term;
        else
          if(x_348.value != term && !x_348.value.match(term))
            break Fail1247;
        if(y_348.value == null)
          break Fail1247;
        term = y_348.value;
        if(x_348.value == null)
          break Fail1247;
        term = termFactory.annotateTerm(x_348.value, checkListAnnos(termFactory, random_test.constNil0));
        if(b_340.value == null)
          b_340.value = term;
        else
          if(b_340.value != term && !b_340.value.match(term))
            break Fail1247;
        if(a_340.value == null)
          break Fail1247;
        term = write_log_0_1.instance.invoke(context, a_340.value, b_340.value);
        if(term == null)
          break Fail1247;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted509 extends Strategy 
  { 
    public static final lifted509 instance = new lifted509();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1284:
      { 
        IStrategoTerm l_344 = null;
        IStrategoTerm m_344 = null;
        IStrategoTerm l_348 = null;
        IStrategoTerm r_344 = null;
        IStrategoTerm t_344 = null;
        IStrategoTerm u_344 = null;
        IStrategoTerm z_344 = null;
        IStrategoTerm b_345 = null;
        IStrategoTerm c_345 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1284;
        l_344 = term.getSubterm(0);
        m_344 = term.getSubterm(1);
        term = l_344;
        IStrategoTerm term739 = term;
        Success884:
        { 
          Fail1285:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1285;
            if(true)
              break Success884;
          }
          term = term739;
          IStrategoTerm term740 = term;
          Success885:
          { 
            Fail1286:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1286;
              if(true)
                break Success885;
            }
            term = term740;
            IStrategoTerm term741 = term;
            Success886:
            { 
              Fail1287:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1287;
                if(true)
                  break Success886;
              }
              term = term741;
              IStrategoTerm term742 = term;
              Success887:
              { 
                Fail1288:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1288;
                  if(true)
                    break Success887;
                }
                term = term742;
                IStrategoTerm n_344 = null;
                IStrategoTerm o_344 = null;
                IStrategoTerm q_344 = null;
                n_344 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1284;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1284;
                o_344 = ((IStrategoList)term).tail();
                q_344 = o_344;
                term = report_failure_0_2.instance.invoke(context, q_344, random_test.const392, n_344);
                if(term == null)
                  break Fail1284;
              }
            }
          }
        }
        t_344 = term;
        r_344 = random_test.const8;
        u_344 = t_344;
        term = string_replace_0_2.instance.invoke(context, u_344, r_344, random_test.const8);
        if(term == null)
          break Fail1284;
        l_348 = term;
        term = write_to_string_0_0.instance.invoke(context, m_344);
        if(term == null)
          break Fail1284;
        IStrategoTerm term743 = term;
        Success888:
        { 
          Fail1289:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1289;
            if(true)
              break Success888;
          }
          term = term743;
          IStrategoTerm term744 = term;
          Success889:
          { 
            Fail1290:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1290;
              if(true)
                break Success889;
            }
            term = term744;
            IStrategoTerm term745 = term;
            Success890:
            { 
              Fail1291:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1291;
                if(true)
                  break Success890;
              }
              term = term745;
              IStrategoTerm term746 = term;
              Success891:
              { 
                Fail1292:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1292;
                  if(true)
                    break Success891;
                }
                term = term746;
                IStrategoTerm v_344 = null;
                IStrategoTerm w_344 = null;
                IStrategoTerm y_344 = null;
                v_344 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1284;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1284;
                w_344 = ((IStrategoList)term).tail();
                y_344 = w_344;
                term = report_failure_0_2.instance.invoke(context, y_344, random_test.const392, v_344);
                if(term == null)
                  break Fail1284;
              }
            }
          }
        }
        b_345 = term;
        z_344 = random_test.const8;
        c_345 = b_345;
        term = string_replace_0_2.instance.invoke(context, c_345, z_344, random_test.const399);
        if(term == null)
          break Fail1284;
        term = (IStrategoTerm)termFactory.makeListCons(l_348, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1284;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted508 extends Strategy 
  { 
    public static final lifted508 instance = new lifted508();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1293:
      { 
        term = random_test.const388;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted507 extends Strategy 
  { 
    public static final lifted507 instance = new lifted507();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1294:
      { 
        term = random_test.const387;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted506 extends Strategy 
  { 
    public static final lifted506 instance = new lifted506();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1295:
      { 
        term = random_test.const370;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted505 extends Strategy 
  { 
    public static final lifted505 instance = new lifted505();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1296:
      { 
        term = random_test.const381;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted504 extends Strategy 
  { 
    public static final lifted504 instance = new lifted504();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1297:
      { 
        term = random_test.const370;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted496 extends Strategy 
  { 
    TermReference a_328;

    TermReference b_328;

    TermReference c_328;

    TermReference d_328;

    TermReference e_328;

    TermReference f_328;

    TermReference h_328;

    TermReference i_328;

    TermReference j_328;

    TermReference k_328;

    TermReference l_328;

    TermReference m_328;

    TermReference n_328;

    TermReference o_328;

    TermReference z_327;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1298:
      { 
        IStrategoTerm c_331 = null;
        IStrategoTerm d_331 = null;
        d_331 = term;
        c_331 = random_test.const0;
        term = d_331;
        lifted497 lifted4970 = new lifted497();
        lifted4970.a_328 = a_328;
        lifted4970.b_328 = b_328;
        lifted4970.c_328 = c_328;
        lifted4970.d_328 = d_328;
        lifted4970.e_328 = e_328;
        lifted4970.f_328 = f_328;
        lifted4970.h_328 = h_328;
        lifted4970.i_328 = i_328;
        lifted4970.j_328 = j_328;
        lifted4970.k_328 = k_328;
        lifted4970.l_328 = l_328;
        lifted4970.m_328 = m_328;
        lifted4970.n_328 = n_328;
        lifted4970.o_328 = o_328;
        lifted4970.z_327 = z_327;
        term = dr_scope_1_1.instance.invoke(context, term, lifted4970, c_331);
        if(term == null)
          break Fail1298;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted497 extends Strategy 
  { 
    TermReference a_328;

    TermReference b_328;

    TermReference c_328;

    TermReference d_328;

    TermReference e_328;

    TermReference f_328;

    TermReference h_328;

    TermReference i_328;

    TermReference j_328;

    TermReference k_328;

    TermReference l_328;

    TermReference m_328;

    TermReference n_328;

    TermReference o_328;

    TermReference z_327;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1299:
      { 
        generate_random_test_0_1_fragment_0 generate_random_test_0_1_fragment_00 = new generate_random_test_0_1_fragment_0();
        generate_random_test_0_1_fragment_00.a_328 = a_328;
        generate_random_test_0_1_fragment_00.b_328 = b_328;
        generate_random_test_0_1_fragment_00.c_328 = c_328;
        generate_random_test_0_1_fragment_00.d_328 = d_328;
        generate_random_test_0_1_fragment_00.e_328 = e_328;
        generate_random_test_0_1_fragment_00.f_328 = f_328;
        generate_random_test_0_1_fragment_00.h_328 = h_328;
        generate_random_test_0_1_fragment_00.i_328 = i_328;
        generate_random_test_0_1_fragment_00.j_328 = j_328;
        generate_random_test_0_1_fragment_00.k_328 = k_328;
        generate_random_test_0_1_fragment_00.l_328 = l_328;
        generate_random_test_0_1_fragment_00.m_328 = m_328;
        generate_random_test_0_1_fragment_00.n_328 = n_328;
        generate_random_test_0_1_fragment_00.o_328 = o_328;
        generate_random_test_0_1_fragment_00.z_327 = z_327;
        term = generate_random_test_0_1_fragment_00.invoke(context, term);
        if(term == null)
          break Fail1299;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class generate_random_test_0_1_fragment_0 extends Strategy 
  { 
    TermReference a_328;

    TermReference b_328;

    TermReference c_328;

    TermReference d_328;

    TermReference e_328;

    TermReference f_328;

    TermReference h_328;

    TermReference i_328;

    TermReference j_328;

    TermReference k_328;

    TermReference l_328;

    TermReference m_328;

    TermReference n_328;

    TermReference o_328;

    TermReference z_327;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1300:
      { 
        IStrategoTerm term639 = term;
        Success892:
        { 
          Fail1301:
          { 
            if(z_327.value == null)
              break Fail1301;
            term = z_327.value;
            if(term.getTermType() != IStrategoTerm.INT || 0 != ((IStrategoInt)term).intValue())
              break Fail1301;
            if(true)
              break Success892;
          }
          term = term639;
          IStrategoTerm p_328 = null;
          IStrategoTerm q_328 = null;
          IStrategoTerm g_331 = null;
          IStrategoTerm h_331 = null;
          IStrategoTerm j_331 = null;
          IStrategoTerm k_331 = null;
          IStrategoTerm l_331 = null;
          IStrategoTerm o_331 = null;
          IStrategoTerm w_331 = null;
          IStrategoTerm x_331 = null;
          IStrategoTerm z_332 = null;
          IStrategoTerm b_333 = null;
          IStrategoTerm b_329 = null;
          IStrategoTerm d_329 = null;
          IStrategoTerm e_329 = null;
          IStrategoTerm l_329 = null;
          IStrategoTerm n_329 = null;
          IStrategoTerm o_329 = null;
          IStrategoTerm e_333 = null;
          IStrategoTerm l_333 = null;
          IStrategoTerm n_333 = null;
          IStrategoTerm v_329 = null;
          IStrategoTerm x_329 = null;
          IStrategoTerm y_329 = null;
          IStrategoTerm f_330 = null;
          IStrategoTerm h_330 = null;
          IStrategoTerm i_330 = null;
          IStrategoTerm s_333 = null;
          IStrategoTerm v_333 = null;
          IStrategoTerm x_333 = null;
          IStrategoTerm n_330 = null;
          IStrategoTerm p_330 = null;
          IStrategoTerm q_330 = null;
          IStrategoTerm w_330 = null;
          IStrategoTerm y_330 = null;
          IStrategoTerm z_330 = null;
          IStrategoTerm c_334 = null;
          IStrategoTerm g_334 = null;
          if(z_327.value == null)
            break Fail1300;
          term = write_to_string_0_0.instance.invoke(context, z_327.value);
          if(term == null)
            break Fail1300;
          term = (IStrategoTerm)termFactory.makeListCons(random_test.const365, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = debug_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          p_328 = term;
          term = random_test.const58;
          q_328 = random_test.const58;
          j_331 = term;
          g_331 = random_test.const305;
          k_331 = j_331;
          h_331 = random_test.constCons0;
          l_331 = k_331;
          term = termFactory.makeTuple(random_test.const306, q_328);
          term = dr_set_rule_0_3.instance.invoke(context, l_331, g_331, h_331, term);
          if(term == null)
            break Fail1300;
          term = p_328;
          o_331 = p_328;
          term = $Terminal$Pool$Size_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = pre_generate_terminals_0_1.instance.invoke(context, o_331, term);
          if(term == null)
            break Fail1300;
          term = all_keys_$S$D$F$Start_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          if(a_328.value == null)
            a_328.value = term;
          else
            if(a_328.value != term && !a_328.value.match(term))
              break Fail1300;
          term = debug_1_0.instance.invoke(context, term, lifted498.instance);
          if(term == null)
            break Fail1300;
          if(a_328.value == null)
            break Fail1300;
          term = randomly_pick_from_list_0_0.instance.invoke(context, a_328.value);
          if(term == null)
            break Fail1300;
          if(b_328.value == null)
            b_328.value = term;
          else
            if(b_328.value != term && !b_328.value.match(term))
              break Fail1300;
          x_331 = term;
          w_331 = random_test.const367;
          term = x_331;
          lifted499 lifted4990 = new lifted499();
          lifted4990.b_328 = b_328;
          lifted4990.c_328 = c_328;
          lifted4990.k_328 = k_328;
          term = dr_scope_1_1.instance.invoke(context, term, lifted4990, w_331);
          if(term == null)
            break Fail1300;
          IStrategoTerm term640 = term;
          Success893:
          { 
            Fail1302:
            { 
              IStrategoTerm t_328 = null;
              t_328 = term;
              if(k_328.value == null)
                break Fail1302;
              term = oncetd_1_0.instance.invoke(context, k_328.value, lifted500.instance);
              if(term == null)
                break Fail1302;
              term = t_328;
              { 
                term = debug_0_0.instance.invoke(context, random_test.const368);
                if(term == null)
                  break Fail1300;
                if(true)
                  break Success893;
              }
            }
            term = term640;
          }
          if(z_327.value == null)
            break Fail1300;
          term = int_to_string_0_0.instance.invoke(context, z_327.value);
          if(term == null)
            break Fail1300;
          term = (IStrategoTerm)termFactory.makeListCons(random_test.const369, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          if(f_328.value == null)
            f_328.value = term;
          else
            if(f_328.value != term && !f_328.value.match(term))
              break Fail1300;
          IStrategoTerm term641 = term;
          Success894:
          { 
            Fail1303:
            { 
              IStrategoTerm u_328 = null;
              u_328 = term;
              IStrategoTerm term642 = term;
              Success895:
              { 
                Fail1304:
                { 
                  IStrategoTerm s_332 = null;
                  s_332 = term;
                  term = print_parse_cycle_0_3.instance.invoke(context, s_332, k_328.value, f_328.value, random_test.constNil0);
                  if(term == null)
                    break Fail1304;
                  if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                    break Fail1304;
                  if(l_328.value == null)
                    l_328.value = term.getSubterm(0);
                  else
                    if(l_328.value != term.getSubterm(0) && !l_328.value.match(term.getSubterm(0)))
                      break Fail1304;
                  if(m_328.value == null)
                    m_328.value = term.getSubterm(1);
                  else
                    if(m_328.value != term.getSubterm(1) && !m_328.value.match(term.getSubterm(1)))
                      break Fail1304;
                  { 
                    if(true)
                      break Fail1303;
                    if(true)
                      break Success895;
                  }
                }
                term = term642;
              }
              term = u_328;
              { 
                IStrategoTerm u_332 = null;
                u_332 = term;
                if(z_327.value == null)
                  break Fail1300;
                term = termFactory.makeTuple(z_327.value, random_test.const109);
                term = addi_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1300;
                term = generate_random_test_0_1.instance.invoke(context, u_332, term);
                if(term == null)
                  break Fail1300;
                term = all_keys_$N$B$L$Injection_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1300;
                term = debug_1_0.instance.invoke(context, term, lifted501.instance);
                if(term == null)
                  break Fail1300;
                term = exit_0_0.instance.invoke(context, random_test.const58);
                if(term == null)
                  break Fail1300;
                if(true)
                  break Success894;
              }
            }
            term = term641;
          }
          if(m_328.value == null)
            break Fail1300;
          term = m_328.value;
          lifted502 lifted5020 = new lifted502();
          lifted5020.f_328 = f_328;
          term = bottomup_1_0.instance.invoke(context, term, lifted5020);
          if(term == null)
            break Fail1300;
          if(d_328.value == null)
            d_328.value = term;
          else
            if(d_328.value != term && !d_328.value.match(term))
              break Fail1300;
          b_333 = term;
          term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          IStrategoTerm term643 = term;
          Success896:
          { 
            Fail1305:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1305;
              if(true)
                break Success896;
            }
            term = term643;
            IStrategoTerm term644 = term;
            Success897:
            { 
              Fail1306:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1306;
                if(true)
                  break Success897;
              }
              term = term644;
              IStrategoTerm term645 = term;
              Success898:
              { 
                Fail1307:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1307;
                  if(true)
                    break Success898;
                }
                term = term645;
                IStrategoTerm term646 = term;
                Success899:
                { 
                  Fail1308:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1308;
                    if(true)
                      break Success899;
                  }
                  term = term646;
                  IStrategoTerm x_328 = null;
                  IStrategoTerm y_328 = null;
                  IStrategoTerm a_329 = null;
                  x_328 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail1300;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail1300;
                  y_328 = ((IStrategoList)term).tail();
                  a_329 = y_328;
                  term = report_failure_0_2.instance.invoke(context, a_329, random_test.const371, x_328);
                  if(term == null)
                    break Fail1300;
                }
              }
            }
          }
          d_329 = term;
          b_329 = random_test.const8;
          e_329 = d_329;
          term = string_replace_0_2.instance.invoke(context, e_329, b_329, random_test.const8);
          if(term == null)
            break Fail1300;
          z_332 = term;
          term = b_333;
          term = $Language_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          IStrategoTerm term647 = term;
          Success900:
          { 
            Fail1309:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1309;
              if(true)
                break Success900;
            }
            term = term647;
            IStrategoTerm term648 = term;
            Success901:
            { 
              Fail1310:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1310;
                if(true)
                  break Success901;
              }
              term = term648;
              IStrategoTerm term649 = term;
              Success902:
              { 
                Fail1311:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1311;
                  if(true)
                    break Success902;
                }
                term = term649;
                IStrategoTerm term650 = term;
                Success903:
                { 
                  Fail1312:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1312;
                    if(true)
                      break Success903;
                  }
                  term = term650;
                  IStrategoTerm h_329 = null;
                  IStrategoTerm i_329 = null;
                  IStrategoTerm k_329 = null;
                  h_329 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail1300;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail1300;
                  i_329 = ((IStrategoList)term).tail();
                  k_329 = i_329;
                  term = report_failure_0_2.instance.invoke(context, k_329, random_test.const371, h_329);
                  if(term == null)
                    break Fail1300;
                }
              }
            }
          }
          n_329 = term;
          l_329 = random_test.const8;
          o_329 = n_329;
          term = string_replace_0_2.instance.invoke(context, o_329, l_329, random_test.const372);
          if(term == null)
            break Fail1300;
          term = (IStrategoTerm)termFactory.makeListCons(z_332, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(term, (IStrategoList)random_test.constCons56)));
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
          if(n_328.value == null)
            n_328.value = term;
          else
            if(n_328.value != term && !n_328.value.match(term))
              break Fail1300;
          if(l_328.value == null)
            break Fail1300;
          term = write_log_0_1.instance.invoke(context, l_328.value, n_328.value);
          if(term == null)
            break Fail1300;
          e_333 = term;
          term = $C$A$C$H$E$P$A$T$H$S_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = remove_folders_0_1.instance.invoke(context, e_333, term);
          if(term == null)
            break Fail1300;
          term = random_test.const70;
          if(h_328.value == null)
            h_328.value = term;
          else
            if(h_328.value != term && !h_328.value.match(term))
              break Fail1300;
          term = concat_strings_0_0.instance.invoke(context, random_test.constCons36);
          if(term == null)
            break Fail1300;
          term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
          if(i_328.value == null)
            i_328.value = term;
          else
            if(i_328.value != term && !i_328.value.match(term))
              break Fail1300;
          n_333 = term;
          term = $P$R$O$J$E$C$T$P$A$T$H_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          IStrategoTerm term651 = term;
          Success904:
          { 
            Fail1313:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1313;
              if(true)
                break Success904;
            }
            term = term651;
            IStrategoTerm term652 = term;
            Success905:
            { 
              Fail1314:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1314;
                if(true)
                  break Success905;
              }
              term = term652;
              IStrategoTerm term653 = term;
              Success906:
              { 
                Fail1315:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1315;
                  if(true)
                    break Success906;
                }
                term = term653;
                IStrategoTerm term654 = term;
                Success907:
                { 
                  Fail1316:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1316;
                    if(true)
                      break Success907;
                  }
                  term = term654;
                  IStrategoTerm r_329 = null;
                  IStrategoTerm s_329 = null;
                  IStrategoTerm u_329 = null;
                  r_329 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail1300;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail1300;
                  s_329 = ((IStrategoList)term).tail();
                  u_329 = s_329;
                  term = report_failure_0_2.instance.invoke(context, u_329, random_test.const371, r_329);
                  if(term == null)
                    break Fail1300;
                }
              }
            }
          }
          x_329 = term;
          v_329 = random_test.const8;
          y_329 = x_329;
          term = string_replace_0_2.instance.invoke(context, y_329, v_329, random_test.const8);
          if(term == null)
            break Fail1300;
          l_333 = term;
          term = n_333;
          term = $Language_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          IStrategoTerm term655 = term;
          Success908:
          { 
            Fail1317:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1317;
              if(true)
                break Success908;
            }
            term = term655;
            IStrategoTerm term656 = term;
            Success909:
            { 
              Fail1318:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1318;
                if(true)
                  break Success909;
              }
              term = term656;
              IStrategoTerm term657 = term;
              Success910:
              { 
                Fail1319:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1319;
                  if(true)
                    break Success910;
                }
                term = term657;
                IStrategoTerm term658 = term;
                Success911:
                { 
                  Fail1320:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1320;
                    if(true)
                      break Success911;
                  }
                  term = term658;
                  IStrategoTerm b_330 = null;
                  IStrategoTerm c_330 = null;
                  IStrategoTerm e_330 = null;
                  b_330 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail1300;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail1300;
                  c_330 = ((IStrategoList)term).tail();
                  e_330 = c_330;
                  term = report_failure_0_2.instance.invoke(context, e_330, random_test.const371, b_330);
                  if(term == null)
                    break Fail1300;
                }
              }
            }
          }
          h_330 = term;
          f_330 = random_test.const8;
          i_330 = h_330;
          term = string_replace_0_2.instance.invoke(context, i_330, f_330, random_test.const372);
          if(term == null)
            break Fail1300;
          term = (IStrategoTerm)termFactory.makeListCons(l_333, termFactory.makeListCons(random_test.const374, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0)));
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
          if(j_328.value == null)
            j_328.value = term;
          else
            if(j_328.value != term && !j_328.value.match(term))
              break Fail1300;
          term = concat_strings_0_0.instance.invoke(context, random_test.constCons57);
          if(term == null)
            break Fail1300;
          term = (IStrategoTerm)termFactory.makeListCons(random_test.const369, termFactory.makeListCons(random_test.const78, termFactory.makeListCons(termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0)), (IStrategoList)random_test.constCons40)));
          if(o_328.value == null)
            o_328.value = term;
          else
            if(o_328.value != term && !o_328.value.match(term))
              break Fail1300;
          if(o_328.value == null)
            break Fail1300;
          term = o_328.value;
          s_333 = o_328.value;
          x_333 = term;
          if(j_328.value == null)
            break Fail1300;
          term = j_328.value;
          IStrategoTerm term659 = term;
          Success912:
          { 
            Fail1321:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1321;
              if(true)
                break Success912;
            }
            term = term659;
            IStrategoTerm term660 = term;
            Success913:
            { 
              Fail1322:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1322;
                if(true)
                  break Success913;
              }
              term = term660;
              IStrategoTerm term661 = term;
              Success914:
              { 
                Fail1323:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1323;
                  if(true)
                    break Success914;
                }
                term = term661;
                IStrategoTerm term662 = term;
                Success915:
                { 
                  Fail1324:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1324;
                    if(true)
                      break Success915;
                  }
                  term = term662;
                  IStrategoTerm j_330 = null;
                  IStrategoTerm k_330 = null;
                  IStrategoTerm m_330 = null;
                  j_330 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail1300;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail1300;
                  k_330 = ((IStrategoList)term).tail();
                  m_330 = k_330;
                  term = report_failure_0_2.instance.invoke(context, m_330, random_test.const371, j_330);
                  if(term == null)
                    break Fail1300;
                }
              }
            }
          }
          p_330 = term;
          n_330 = random_test.const8;
          q_330 = p_330;
          term = string_replace_0_2.instance.invoke(context, q_330, n_330, random_test.const8);
          if(term == null)
            break Fail1300;
          v_333 = term;
          term = x_333;
          if(f_328.value == null)
            break Fail1300;
          term = f_328.value;
          IStrategoTerm term663 = term;
          Success916:
          { 
            Fail1325:
            { 
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1325;
              if(true)
                break Success916;
            }
            term = term663;
            IStrategoTerm term664 = term;
            Success917:
            { 
              Fail1326:
              { 
                term = is_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1326;
                if(true)
                  break Success917;
              }
              term = term664;
              IStrategoTerm term665 = term;
              Success918:
              { 
                Fail1327:
                { 
                  term = int_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1327;
                  if(true)
                    break Success918;
                }
                term = term665;
                IStrategoTerm term666 = term;
                Success919:
                { 
                  Fail1328:
                  { 
                    term = real_to_string_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1328;
                    if(true)
                      break Success919;
                  }
                  term = term666;
                  IStrategoTerm r_330 = null;
                  IStrategoTerm t_330 = null;
                  IStrategoTerm v_330 = null;
                  r_330 = term;
                  term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                  if(term == null)
                    break Fail1300;
                  if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                    break Fail1300;
                  t_330 = ((IStrategoList)term).tail();
                  v_330 = t_330;
                  term = report_failure_0_2.instance.invoke(context, v_330, random_test.const371, r_330);
                  if(term == null)
                    break Fail1300;
                }
              }
            }
          }
          y_330 = term;
          w_330 = random_test.const8;
          z_330 = y_330;
          term = string_replace_0_2.instance.invoke(context, z_330, w_330, random_test.const376);
          if(term == null)
            break Fail1300;
          term = (IStrategoTerm)termFactory.makeListCons(v_333, termFactory.makeListCons(random_test.const12, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0)));
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
          term = run_0_3.instance.invoke(context, s_333, h_328.value, i_328.value, term);
          if(term == null)
            break Fail1300;
          if(e_328.value == null)
            e_328.value = term;
          else
            if(e_328.value != term && !e_328.value.match(term))
              break Fail1300;
          if(e_328.value == null)
            break Fail1300;
          term = write_to_string_0_0.instance.invoke(context, e_328.value);
          if(term == null)
            break Fail1300;
          term = (IStrategoTerm)termFactory.makeListCons(random_test.const377, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
          term = concat_strings_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = debug_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = clear_fix_runtag_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          if(e_328.value == null)
            break Fail1300;
          term = e_328.value;
          c_334 = e_328.value;
          term = new_iset_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = check_results_0_11.instance.invokeDynamic(context, c_334, NO_STRATEGIES, new IStrategoTerm[]{term, f_328.value, h_328.value, i_328.value, j_328.value, k_328.value, l_328.value, m_328.value, z_327.value, n_328.value, o_328.value});
          if(term == null)
            break Fail1300;
          g_334 = term;
          if(z_327.value == null)
            break Fail1300;
          term = termFactory.makeTuple(z_327.value, random_test.const109);
          term = addi_0_0.instance.invoke(context, term);
          if(term == null)
            break Fail1300;
          term = generate_random_test_0_1.instance.invoke(context, g_334, term);
          if(term == null)
            break Fail1300;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted502 extends Strategy 
  { 
    TermReference f_328;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1329:
      { 
        lifted503 lifted5030 = new lifted503();
        lifted5030.f_328 = f_328;
        term = try_1_0.instance.invoke(context, term, lifted5030);
        if(term == null)
          break Fail1329;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted503 extends Strategy 
  { 
    TermReference f_328;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1330:
      { 
        term = check_for_amb_0_1.instance.invoke(context, term, f_328.value);
        if(term == null)
          break Fail1330;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted501 extends Strategy 
  { 
    public static final lifted501 instance = new lifted501();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1331:
      { 
        term = random_test.const370;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted500 extends Strategy 
  { 
    public static final lifted500 instance = new lifted500();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1332:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conslit_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1332;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted499 extends Strategy 
  { 
    TermReference b_328;

    TermReference c_328;

    TermReference k_328;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1333:
      { 
        IStrategoTerm a_332 = null;
        IStrategoTerm b_332 = null;
        IStrategoTerm c_332 = null;
        IStrategoTerm d_332 = null;
        IStrategoTerm g_332 = null;
        IStrategoTerm h_332 = null;
        IStrategoTerm i_332 = null;
        IStrategoTerm j_332 = null;
        IStrategoTerm m_332 = null;
        g_332 = term;
        a_332 = random_test.constNil0;
        h_332 = g_332;
        b_332 = random_test.const58;
        i_332 = h_332;
        c_332 = random_test.const58;
        term = i_332;
        j_332 = i_332;
        term = $Max$Count_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1333;
        d_332 = term;
        m_332 = j_332;
        term = generate_program_0_6.instance.invokeDynamic(context, m_332, NO_STRATEGIES, new IStrategoTerm[]{b_328.value, a_332, b_332, c_332, d_332, random_test.constNil0});
        if(term == null)
          break Fail1333;
        if(c_328.value == null)
          c_328.value = term;
        else
          if(c_328.value != term && !c_328.value.match(term))
            break Fail1333;
        term = all_keys_$N$B$L$Injection_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1333;
        term = inject_$N$B$L_definitions_0_1.instance.invoke(context, term, c_328.value);
        if(term == null)
          break Fail1333;
        if(k_328.value == null)
          k_328.value = term;
        else
          if(k_328.value != term && !k_328.value.match(term))
            break Fail1333;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted498 extends Strategy 
  { 
    public static final lifted498 instance = new lifted498();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1334:
      { 
        term = random_test.const366;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted495 extends Strategy 
  { 
    public static final lifted495 instance = new lifted495();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1335:
      { 
        IStrategoTerm term618 = term;
        Success920:
        { 
          Fail1336:
          { 
            term = filter_prod_help_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1336;
            { 
              if(true)
                break Fail1335;
              if(true)
                break Success920;
            }
          }
          term = term618;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted494 extends Strategy 
  { 
    TermReference k_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1337:
      { 
        IStrategoTerm b_314 = null;
        IStrategoTerm c_314 = null;
        c_314 = term;
        term = $Max$Rec_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1337;
        b_314 = term;
        term = c_314;
        if(k_705.value == null)
          break Fail1337;
        term = termFactory.makeTuple(k_705.value, b_314);
        term = gt_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1337;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted493 extends Strategy 
  { 
    public static final lifted493 instance = new lifted493();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1338:
      { 
        IStrategoTerm w_313 = null;
        IStrategoTerm z_313 = null;
        z_313 = term;
        term = $Cons$Count_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1338;
        w_313 = term;
        term = z_313;
        term = $Max$Count_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1338;
        term = termFactory.makeTuple(w_313, term);
        term = gt_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1338;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted492 extends Strategy 
  { 
    public static final lifted492 instance = new lifted492();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1339:
      { 
        term = random_test.const320;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted491 extends Strategy 
  { 
    TermReference k_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1340:
      { 
        IStrategoTerm d_318 = null;
        IStrategoTerm e_318 = null;
        e_318 = term;
        term = $Max$Rec_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1340;
        d_318 = term;
        term = e_318;
        if(k_705.value == null)
          break Fail1340;
        term = termFactory.makeTuple(k_705.value, d_318);
        term = geq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1340;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted490 extends Strategy 
  { 
    TermReference l_705;

    TermReference m_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1341:
      { 
        if(l_705.value == null || m_705.value == null)
          break Fail1341;
        term = termFactory.makeTuple(l_705.value, m_705.value);
        term = geq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1341;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted489 extends Strategy 
  { 
    TermReference k_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1342:
      { 
        IStrategoTerm q_319 = null;
        IStrategoTerm r_319 = null;
        r_319 = term;
        term = $Max$Rec_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1342;
        q_319 = term;
        term = r_319;
        if(k_705.value == null)
          break Fail1342;
        term = termFactory.makeTuple(k_705.value, q_319);
        term = geq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1342;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted488 extends Strategy 
  { 
    TermReference l_705;

    TermReference m_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1343:
      { 
        if(l_705.value == null || m_705.value == null)
          break Fail1343;
        term = termFactory.makeTuple(l_705.value, m_705.value);
        term = geq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1343;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted487 extends Strategy 
  { 
    TermReference j_705;

    TermReference k_705;

    TermReference l_705;

    TermReference m_705;

    TermReference n_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1344:
      { 
        term = write_rule_0_5.instance.invoke(context, term, j_705.value, k_705.value, l_705.value, m_705.value, n_705.value);
        if(term == null)
          break Fail1344;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted486 extends Strategy 
  { 
    TermReference e_705;

    TermReference f_705;

    TermReference g_705;

    TermReference h_705;

    TermReference i_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1345:
      { 
        term = process_$A$S$T$Term_0_5.instance.invoke(context, term, e_705.value, f_705.value, g_705.value, h_705.value, i_705.value);
        if(term == null)
          break Fail1345;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted485 extends Strategy 
  { 
    TermReference a_309;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1346:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1346;
        if(a_309.value == null)
          a_309.value = term.getSubterm(1);
        else
          if(a_309.value != term.getSubterm(1) && !a_309.value.match(term.getSubterm(1)))
            break Fail1346;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted483 extends Strategy 
  { 
    public static final lifted483 instance = new lifted483();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1347:
      { 
        term = oncetd_1_0.instance.invoke(context, term, lifted484.instance);
        if(term == null)
          break Fail1347;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted484 extends Strategy 
  { 
    public static final lifted484 instance = new lifted484();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1348:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._conssort_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1348;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted482 extends Strategy 
  { 
    TermReference e_705;

    TermReference f_705;

    TermReference g_705;

    TermReference h_705;

    TermReference i_705;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1349:
      { 
        term = process_$A$S$T$Term_0_5.instance.invoke(context, term, e_705.value, f_705.value, g_705.value, h_705.value, i_705.value);
        if(term == null)
          break Fail1349;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted480 extends Strategy 
  { 
    public static final lifted480 instance = new lifted480();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1350:
      { 
        IStrategoTerm j_306 = null;
        j_306 = term;
        Success921:
        { 
          Fail1351:
          { 
            term = $Prod$Weight_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1351;
            if(true)
              break Success921;
          }
          term = random_test.const186;
        }
        term = termFactory.makeTuple(j_306, term);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted481 extends Strategy 
  { 
    public static final lifted481 instance = new lifted481();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1352:
      { 
        IStrategoTerm k_306 = null;
        IStrategoTerm l_306 = null;
        IStrategoTerm m_306 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1352;
        IStrategoTerm arg214 = term.getSubterm(0);
        if(arg214.getTermType() != IStrategoTerm.TUPLE || arg214.getSubtermCount() != 2)
          break Fail1352;
        k_306 = arg214.getSubterm(0);
        l_306 = arg214.getSubterm(1);
        m_306 = term.getSubterm(1);
        term = termFactory.makeTuple(l_306, m_306);
        term = add_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1352;
        term = termFactory.makeTuple(termFactory.makeTuple(k_306, term), term);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted479 extends Strategy 
  { 
    TermReference l_304;

    TermReference m_304;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1353:
      { 
        IStrategoTerm u_304 = null;
        IStrategoTerm v_304 = null;
        IStrategoTerm w_304 = null;
        IStrategoTerm m_305 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1353;
        IStrategoTerm arg212 = term.getSubterm(0);
        if(arg212.getTermType() != IStrategoTerm.TUPLE || arg212.getSubtermCount() != 2)
          break Fail1353;
        v_304 = arg212.getSubterm(0);
        u_304 = arg212.getSubterm(1);
        w_304 = term.getSubterm(1);
        m_305 = v_304;
        term = write_rule_0_5.instance.invoke(context, m_305, l_304.value, m_304.value, random_test.const58, u_304, w_304);
        if(term == null)
          break Fail1353;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted478 extends Strategy 
  { 
    public static final lifted478 instance = new lifted478();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1354:
      { 
        term = next_random_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1354;
        term = abs_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1354;
        term = termFactory.makeTuple(term, random_test.const108);
        term = mod_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1354;
        term = termFactory.makeTuple(term, random_test.const164);
        term = gt_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1354;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted477 extends Strategy 
  { 
    TermReference l_303;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1355:
      { 
        IStrategoTerm term560 = term;
        Success922:
        { 
          Fail1356:
          { 
            if(l_303.value == null)
              break Fail1356;
            term = l_303.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1356;
            { 
              if(true)
                break Fail1355;
              if(true)
                break Success922;
            }
          }
          term = term560;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted476 extends Strategy 
  { 
    TermReference b_303;

    TermReference c_303;

    TermReference m_303;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1357:
      { 
        if(b_303.value == null || c_303.value == null)
          break Fail1357;
        term = termFactory.makeTuple(b_303.value, c_303.value);
        term = get_$N$B$L_referrals_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1357;
        if(m_303.value == null)
          m_303.value = term;
        else
          if(m_303.value != term && !m_303.value.match(term))
            break Fail1357;
        IStrategoTerm term558 = term;
        Success923:
        { 
          Fail1358:
          { 
            if(m_303.value == null)
              break Fail1358;
            term = m_303.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1358;
            { 
              if(true)
                break Fail1357;
              if(true)
                break Success923;
            }
          }
          term = term558;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted475 extends Strategy 
  { 
    public static final lifted475 instance = new lifted475();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1359:
      { 
        IStrategoTerm r_303 = null;
        IStrategoTerm t_303 = null;
        t_303 = term;
        term = next_random_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1359;
        term = abs_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1359;
        term = termFactory.makeTuple(term, random_test.const108);
        term = mod_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1359;
        r_303 = term;
        term = t_303;
        term = $Chance$Of$Failure_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1359;
        term = termFactory.makeTuple(r_303, term);
        term = gt_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1359;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted457 extends Strategy 
  { 
    public static final lifted457 instance = new lifted457();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1360:
      { 
        term = random_test.const313;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted458 extends Strategy 
  { 
    TermReference f_300;

    TermReference b_300;

    TermReference c_300;

    TermReference g_300;

    TermReference e_300;

    TermReference h_300;

    TermReference i_300;

    TermReference a_300;

    TermReference k_300;

    TermReference m_300;

    TermReference l_300;

    TermReference z_299;

    TermReference n_300;

    TermReference o_300;

    TermReference d_300;

    TermReference p_300;

    TermReference q_300;

    TermReference r_300;

    TermReference s_300;

    TermReference t_300;

    TermReference u_300;

    TermReference v_300;

    TermReference w_300;

    TermReference x_300;

    TermReference y_300;

    TermReference z_300;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1361:
      { 
        IStrategoTerm g_301 = null;
        IStrategoTerm z_301 = null;
        IStrategoTerm a_302 = null;
        IStrategoTerm c_302 = null;
        IStrategoTerm d_302 = null;
        IStrategoTerm e_302 = null;
        IStrategoTerm h_302 = null;
        IStrategoTerm i_302 = null;
        IStrategoTerm j_302 = null;
        IStrategoTerm h_301 = null;
        IStrategoTerm i_301 = null;
        IStrategoTerm m_302 = null;
        IStrategoTerm n_302 = null;
        IStrategoTerm p_302 = null;
        IStrategoTerm q_302 = null;
        IStrategoTerm r_302 = null;
        if(z_299.value == null)
          break Fail1361;
        term = bagof_$C$F$Sorts_0_0.instance.invoke(context, z_299.value);
        if(term == null)
          break Fail1361;
        lifted459 lifted4590 = new lifted459();
        lifted4590.e_300 = e_300;
        lifted4590.z_299 = z_299;
        term = filter_1_0.instance.invoke(context, term, lifted4590);
        if(term == null)
          break Fail1361;
        if(h_300.value == null)
          h_300.value = term;
        else
          if(h_300.value != term && !h_300.value.match(term))
            break Fail1361;
        term = debug_1_0.instance.invoke(context, term, lifted460.instance);
        if(term == null)
          break Fail1361;
        if(a_300.value == null)
          break Fail1361;
        term = a_300.value;
        lifted461 lifted4610 = new lifted461();
        lifted4610.z_299 = z_299;
        term = filter_1_0.instance.invoke(context, term, lifted4610);
        if(term == null)
          break Fail1361;
        term = length_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        if(f_300.value == null)
          f_300.value = term;
        else
          if(f_300.value != term && !f_300.value.match(term))
            break Fail1361;
        IStrategoTerm term549 = term;
        Success924:
        { 
          Fail1362:
          { 
            IStrategoTerm b_301 = null;
            b_301 = term;
            if(f_300.value == null || b_300.value == null)
              break Fail1362;
            term = termFactory.makeTuple(f_300.value, b_300.value);
            term = gt_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1362;
            term = b_301;
            { 
              if(f_300.value == null)
                break Fail1361;
              term = f_300.value;
              if(i_300.value == null)
                i_300.value = term;
              else
                if(i_300.value != term && !i_300.value.match(term))
                  break Fail1361;
              if(true)
                break Success924;
            }
          }
          term = term549;
          if(b_300.value == null)
            break Fail1361;
          term = b_300.value;
          if(i_300.value == null)
            i_300.value = term;
          else
            if(i_300.value != term && !i_300.value.match(term))
              break Fail1361;
        }
        term = debug_1_0.instance.invoke(context, term, lifted462.instance);
        if(term == null)
          break Fail1361;
        IStrategoTerm term550 = term;
        Success925:
        { 
          Fail1363:
          { 
            IStrategoTerm c_301 = null;
            c_301 = term;
            lifted464 lifted4640 = new lifted464();
            lifted463 lifted4630 = new lifted463();
            lifted4640.i_300 = i_300;
            lifted4630.c_300 = c_300;
            lifted4630.d_300 = d_300;
            term = or_2_0.instance.invoke(context, term, lifted4630, lifted4640);
            if(term == null)
              break Fail1363;
            term = c_301;
            { 
              if(z_299.value == null)
                break Fail1361;
              term = bagof_$Terminal$Path_0_0.instance.invoke(context, z_299.value);
              if(term == null)
                break Fail1361;
              term = pick_prod_lower_level_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1361;
              if(g_300.value == null)
                g_300.value = term;
              else
                if(g_300.value != term && !g_300.value.match(term))
                  break Fail1361;
              IStrategoTerm term551 = term;
              Success926:
              { 
                Fail1364:
                { 
                  IStrategoTerm d_301 = null;
                  d_301 = term;
                  if(g_300.value == null)
                    break Fail1364;
                  term = g_300.value;
                  if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
                    break Fail1364;
                  term = d_301;
                  { 
                    if(z_299.value == null)
                      break Fail1361;
                    term = write_to_string_0_0.instance.invoke(context, z_299.value);
                    if(term == null)
                      break Fail1361;
                    term = (IStrategoTerm)termFactory.makeListCons(random_test.const296, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0));
                    term = concat_strings_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1361;
                    term = debug_0_0.instance.invoke(context, term);
                    if(term == null)
                      break Fail1361;
                    if(h_300.value == null)
                      break Fail1361;
                    term = h_300.value;
                    if(k_300.value == null)
                      k_300.value = term;
                    else
                      if(k_300.value != term && !k_300.value.match(term))
                        break Fail1361;
                    if(i_300.value == null)
                      break Fail1361;
                    term = i_300.value;
                    if(q_300.value == null)
                      q_300.value = term;
                    else
                      if(q_300.value != term && !q_300.value.match(term))
                        break Fail1361;
                    if(true)
                      break Success926;
                  }
                }
                term = term551;
                if(g_300.value == null)
                  break Fail1361;
                term = g_300.value;
                lifted465 lifted4650 = new lifted465();
                lifted4650.e_300 = e_300;
                lifted4650.z_299 = z_299;
                term = filter_1_0.instance.invoke(context, term, lifted4650);
                if(term == null)
                  break Fail1361;
                if(k_300.value == null)
                  k_300.value = term;
                else
                  if(k_300.value != term && !k_300.value.match(term))
                    break Fail1361;
                term = random_test.const58;
                if(q_300.value == null)
                  q_300.value = term;
                else
                  if(q_300.value != term && !q_300.value.match(term))
                    break Fail1361;
              }
              if(true)
                break Success925;
            }
          }
          term = term550;
          if(h_300.value == null)
            break Fail1361;
          term = h_300.value;
          if(k_300.value == null)
            k_300.value = term;
          else
            if(k_300.value != term && !k_300.value.match(term))
              break Fail1361;
          if(i_300.value == null)
            break Fail1361;
          term = i_300.value;
          if(q_300.value == null)
            q_300.value = term;
          else
            if(q_300.value != term && !q_300.value.match(term))
              break Fail1361;
        }
        term = debug_1_0.instance.invoke(context, term, lifted466.instance);
        if(term == null)
          break Fail1361;
        if(a_300.value == null || z_299.value == null)
          break Fail1361;
        term = termFactory.makeTuple(a_300.value, (IStrategoTerm)termFactory.makeListCons(z_299.value, (IStrategoList)random_test.constNil0));
        term = conc_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        if(p_300.value == null)
          p_300.value = term;
        else
          if(p_300.value != term && !p_300.value.match(term))
            break Fail1361;
        term = debug_1_0.instance.invoke(context, term, lifted467.instance);
        if(term == null)
          break Fail1361;
        IStrategoTerm term553 = term;
        Success927:
        { 
          Fail1365:
          { 
            IStrategoTerm f_301 = null;
            f_301 = term;
            if(k_300.value == null)
              break Fail1365;
            term = k_300.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1365;
            term = f_301;
            { 
              IStrategoTerm v_301 = null;
              IStrategoTerm x_301 = null;
              x_301 = term;
              if(q_300.value == null)
                break Fail1361;
              term = write_to_string_0_0.instance.invoke(context, q_300.value);
              if(term == null)
                break Fail1361;
              v_301 = term;
              term = x_301;
              if(z_299.value == null)
                break Fail1361;
              term = write_to_string_0_0.instance.invoke(context, z_299.value);
              if(term == null)
                break Fail1361;
              term = (IStrategoTerm)termFactory.makeListCons(random_test.const300, termFactory.makeListCons(random_test.const299, termFactory.makeListCons(v_301, termFactory.makeListCons(term, (IStrategoList)random_test.constNil0))));
              term = concat_strings_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1361;
              term = debug_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1361;
              if(true)
                break Success927;
            }
          }
          term = term553;
        }
        g_301 = term;
        c_302 = term;
        z_301 = random_test.const301;
        d_302 = c_302;
        a_302 = random_test.const303;
        e_302 = d_302;
        term = dr_set_rule_0_3.instance.invoke(context, e_302, z_301, a_302, random_test.const304);
        if(term == null)
          break Fail1361;
        term = g_301;
        if(k_300.value == null)
          break Fail1361;
        term = build_weight_list_0_0.instance.invoke(context, k_300.value);
        if(term == null)
          break Fail1361;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1361;
        if(m_300.value == null)
          m_300.value = term.getSubterm(0);
        else
          if(m_300.value != term.getSubterm(0) && !m_300.value.match(term.getSubterm(0)))
            break Fail1361;
        if(l_300.value == null)
          l_300.value = term.getSubterm(1);
        else
          if(l_300.value != term.getSubterm(1) && !l_300.value.match(term.getSubterm(1)))
            break Fail1361;
        if(m_300.value == null)
          break Fail1361;
        term = m_300.value;
        h_302 = m_300.value;
        j_302 = term;
        term = next_random_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        term = abs_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        i_302 = term;
        term = j_302;
        if(l_300.value == null)
          break Fail1361;
        term = termFactory.makeTuple(i_302, l_300.value);
        term = mod_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        term = inc_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        term = choose_alternative_0_1.instance.invoke(context, h_302, term);
        if(term == null)
          break Fail1361;
        if(n_300.value == null)
          n_300.value = term;
        else
          if(n_300.value != term && !n_300.value.match(term))
            break Fail1361;
        term = $Cons$Count_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        term = termFactory.makeTuple(term, random_test.const186);
        term = addi_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1361;
        if(o_300.value == null)
          o_300.value = term;
        else
          if(o_300.value != term && !o_300.value.match(term))
            break Fail1361;
        h_301 = term;
        if(o_300.value == null)
          break Fail1361;
        term = o_300.value;
        i_301 = o_300.value;
        p_302 = term;
        m_302 = random_test.const305;
        q_302 = p_302;
        n_302 = random_test.constCons0;
        r_302 = q_302;
        term = termFactory.makeTuple(random_test.const306, i_301);
        term = dr_set_rule_0_3.instance.invoke(context, r_302, m_302, n_302, term);
        if(term == null)
          break Fail1361;
        term = h_301;
        if(z_299.value == null || n_300.value == null)
          break Fail1361;
        term = termFactory.makeTuple(z_299.value, n_300.value);
        Success928:
        { 
          Fail1366:
          { 
            term = update_$N$B$L_scope_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1366;
            if(true)
              break Success928;
          }
          term = random_test.const110;
        }
        if(s_300.value == null)
          s_300.value = term;
        else
          if(s_300.value != term && !s_300.value.match(term))
            break Fail1361;
        term = debug_1_0.instance.invoke(context, term, lifted468.instance);
        if(term == null)
          break Fail1361;
        term = help_strategy_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{z_299.value, n_300.value, o_300.value, d_300.value, p_300.value, q_300.value});
        if(term == null)
          break Fail1361;
        if(r_300.value == null)
          r_300.value = term;
        else
          if(r_300.value != term && !r_300.value.match(term))
            break Fail1361;
        term = debug_1_0.instance.invoke(context, term, lifted469.instance);
        if(term == null)
          break Fail1361;
        IStrategoTerm term555 = term;
        Success929:
        { 
          Fail1367:
          { 
            IStrategoTerm k_301 = null;
            k_301 = term;
            if(s_300.value == null)
              break Fail1367;
            term = s_300.value;
            if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
              break Fail1367;
            term = k_301;
            { 
              if(r_300.value == null)
                break Fail1361;
              term = r_300.value;
              if(z_300.value == null)
                z_300.value = term;
              else
                if(z_300.value != term && !z_300.value.match(term))
                  break Fail1361;
              if(true)
                break Success929;
            }
          }
          term = term555;
          if(r_300.value == null || s_300.value == null)
            break Fail1361;
          term = termFactory.annotateTerm(r_300.value, checkListAnnos(termFactory, (IStrategoTerm)termFactory.makeListCons(s_300.value, (IStrategoList)random_test.constNil0)));
          if(z_300.value == null)
            z_300.value = term;
          else
            if(z_300.value != term && !z_300.value.match(term))
              break Fail1361;
        }
        term = debug_1_0.instance.invoke(context, term, lifted470.instance);
        if(term == null)
          break Fail1361;
        IStrategoTerm term556 = term;
        Success930:
        { 
          Fail1368:
          { 
            IStrategoTerm l_301 = null;
            l_301 = term;
            if(z_300.value == null)
              break Fail1368;
            term = create_key_0_0.instance.invoke(context, z_300.value);
            if(term == null)
              break Fail1368;
            term = $N$B$L$Key2$Define_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1368;
            if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 3)
              break Fail1368;
            if(w_300.value == null)
              w_300.value = term.getSubterm(0);
            else
              if(w_300.value != term.getSubterm(0) && !w_300.value.match(term.getSubterm(0)))
                break Fail1368;
            if(u_300.value == null)
              u_300.value = term.getSubterm(1);
            else
              if(u_300.value != term.getSubterm(1) && !u_300.value.match(term.getSubterm(1)))
                break Fail1368;
            if(t_300.value == null)
              t_300.value = term.getSubterm(2);
            else
              if(t_300.value != term.getSubterm(2) && !t_300.value.match(term.getSubterm(2)))
                break Fail1368;
            term = l_301;
            { 
              IStrategoTerm u_302 = null;
              IStrategoTerm v_302 = null;
              term = debug_1_0.instance.invoke(context, term, lifted471.instance);
              if(term == null)
                break Fail1361;
              if(w_300.value == null)
                break Fail1361;
              term = get_values_from_current_scope_0_0.instance.invoke(context, w_300.value);
              if(term == null)
                break Fail1361;
              if(v_300.value == null)
                v_300.value = term;
              else
                if(v_300.value != term && !v_300.value.match(term))
                  break Fail1361;
              term = debug_1_0.instance.invoke(context, term, lifted472.instance);
              if(term == null)
                break Fail1361;
              if(z_300.value == null)
                break Fail1361;
              term = extract_or_replace_identifier_0_3.instance.invoke(context, z_300.value, t_300.value, u_300.value, v_300.value);
              if(term == null)
                break Fail1361;
              if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
                break Fail1361;
              if(y_300.value == null)
                y_300.value = term.getSubterm(0);
              else
                if(y_300.value != term.getSubterm(0) && !y_300.value.match(term.getSubterm(0)))
                  break Fail1361;
              if(x_300.value == null)
                x_300.value = term.getSubterm(1);
              else
                if(x_300.value != term.getSubterm(1) && !x_300.value.match(term.getSubterm(1)))
                  break Fail1361;
              term = debug_1_0.instance.invoke(context, term, lifted473.instance);
              if(term == null)
                break Fail1361;
              v_302 = term;
              if(w_300.value == null)
                break Fail1361;
              term = $Current$Scope_0_0.instance.invoke(context, w_300.value);
              if(term == null)
                break Fail1361;
              u_302 = term;
              term = v_302;
              if(w_300.value == null || x_300.value == null)
                break Fail1361;
              term = termFactory.makeTuple(w_300.value, u_302, x_300.value);
              term = write_ns_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1361;
              if(true)
                break Success930;
            }
          }
          term = term556;
          if(z_300.value == null)
            break Fail1361;
          term = z_300.value;
          if(y_300.value == null)
            y_300.value = term;
          else
            if(y_300.value != term && !y_300.value.match(term))
              break Fail1361;
        }
        if(z_300.value == null)
          break Fail1361;
        term = try_1_0.instance.invoke(context, z_300.value, update_cons_coverage_0_0.instance);
        if(term == null)
          break Fail1361;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted473 extends Strategy 
  { 
    public static final lifted473 instance = new lifted473();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1369:
      { 
        term = random_test.const312;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted472 extends Strategy 
  { 
    public static final lifted472 instance = new lifted472();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1370:
      { 
        term = random_test.const311;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted471 extends Strategy 
  { 
    public static final lifted471 instance = new lifted471();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1371:
      { 
        term = random_test.const310;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted470 extends Strategy 
  { 
    public static final lifted470 instance = new lifted470();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1372:
      { 
        term = random_test.const309;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted469 extends Strategy 
  { 
    public static final lifted469 instance = new lifted469();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1373:
      { 
        term = random_test.const308;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted468 extends Strategy 
  { 
    public static final lifted468 instance = new lifted468();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1374:
      { 
        term = random_test.const307;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted467 extends Strategy 
  { 
    public static final lifted467 instance = new lifted467();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1375:
      { 
        term = random_test.const298;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted466 extends Strategy 
  { 
    public static final lifted466 instance = new lifted466();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1376:
      { 
        term = random_test.const297;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted465 extends Strategy 
  { 
    TermReference e_300;

    TermReference z_299;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1377:
      { 
        IStrategoTerm term552 = term;
        Success931:
        { 
          Fail1378:
          { 
            term = is_prohibited_0_2.instance.invoke(context, term, e_300.value, z_299.value);
            if(term == null)
              break Fail1378;
            { 
              if(true)
                break Fail1377;
              if(true)
                break Success931;
            }
          }
          term = term552;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted464 extends Strategy 
  { 
    TermReference i_300;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1379:
      { 
        IStrategoTerm r_301 = null;
        IStrategoTerm s_301 = null;
        s_301 = term;
        term = $Max$Rec_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1379;
        r_301 = term;
        term = s_301;
        if(i_300.value == null)
          break Fail1379;
        term = termFactory.makeTuple(i_300.value, r_301);
        term = gt_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1379;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted463 extends Strategy 
  { 
    TermReference c_300;

    TermReference d_300;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1380:
      { 
        if(c_300.value == null || d_300.value == null)
          break Fail1380;
        term = termFactory.makeTuple(c_300.value, d_300.value);
        term = gt_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1380;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted462 extends Strategy 
  { 
    public static final lifted462 instance = new lifted462();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1381:
      { 
        term = random_test.const295;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted461 extends Strategy 
  { 
    TermReference z_299;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1382:
      { 
        if(z_299.value == null)
          z_299.value = term;
        else
          if(z_299.value != term && !z_299.value.match(term))
            break Fail1382;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted460 extends Strategy 
  { 
    public static final lifted460 instance = new lifted460();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1383:
      { 
        term = random_test.const294;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted459 extends Strategy 
  { 
    TermReference e_300;

    TermReference z_299;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1384:
      { 
        IStrategoTerm term548 = term;
        Success932:
        { 
          Fail1385:
          { 
            term = is_prohibited_0_2.instance.invoke(context, term, e_300.value, z_299.value);
            if(term == null)
              break Fail1385;
            { 
              if(true)
                break Fail1384;
              if(true)
                break Success932;
            }
          }
          term = term548;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted456 extends Strategy 
  { 
    TermReference x_298;

    TermReference z_298;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1386:
      { 
        IStrategoTerm g_299 = null;
        IStrategoTerm j_299 = null;
        IStrategoTerm k_299 = null;
        g_299 = term;
        k_299 = term;
        if(x_298.value == null)
          break Fail1386;
        term = termFactory.makeTuple(g_299, x_298.value);
        term = muli_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1386;
        j_299 = term;
        term = k_299;
        if(z_298.value == null)
          break Fail1386;
        term = termFactory.makeTuple(j_299, z_298.value);
        term = divi_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1386;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted455 extends Strategy 
  { 
    TermReference f_286;

    TermReference z_704;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1387:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1387;
        if(f_286.value == null)
          f_286.value = term.getSubterm(0);
        else
          if(f_286.value != term.getSubterm(0) && !f_286.value.match(term.getSubterm(0)))
            break Fail1387;
        if(z_704.value == null)
          z_704.value = term.getSubterm(1);
        else
          if(z_704.value != term.getSubterm(1) && !z_704.value.match(term.getSubterm(1)))
            break Fail1387;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted453 extends Strategy 
  { 
    public static final lifted453 instance = new lifted453();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1388:
      { 
        TermReference p_286 = new TermReference();
        lifted454 lifted4540 = new lifted454();
        lifted4540.p_286 = p_286;
        term = oncetd_1_0.instance.invoke(context, term, lifted4540);
        if(term == null)
          break Fail1388;
        if(p_286.value == null)
          break Fail1388;
        term = $Ignore$Sorts_0_0.instance.invoke(context, p_286.value);
        if(term == null)
          break Fail1388;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted454 extends Strategy 
  { 
    TermReference p_286;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1389:
      { 
        term = recognize_sort_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1389;
        if(p_286.value == null)
          p_286.value = term;
        else
          if(p_286.value != term && !p_286.value.match(term))
            break Fail1389;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted452 extends Strategy 
  { 
    public static final lifted452 instance = new lifted452();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1390:
      { 
        IStrategoTerm v_285 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1390;
        v_285 = term.getSubterm(0);
        term = v_285;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted451 extends Strategy 
  { 
    TermReference r_285;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1391:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1391;
        if(r_285.value == null)
          r_285.value = term.getSubterm(1);
        else
          if(r_285.value != term.getSubterm(1) && !r_285.value.match(term.getSubterm(1)))
            break Fail1391;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted450 extends Strategy 
  { 
    public static final lifted450 instance = new lifted450();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1392:
      { 
        IStrategoTerm u_285 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1392;
        u_285 = term.getSubterm(1);
        term = u_285;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted449 extends Strategy 
  { 
    TermReference i_284;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1393:
      { 
        IStrategoTerm k_284 = null;
        IStrategoTerm l_284 = null;
        IStrategoTerm s_284 = null;
        IStrategoTerm v_284 = null;
        IStrategoTerm w_284 = null;
        if(i_284.value == null)
          break Fail1393;
        term = generate_terminal_0_0.instance.invoke(context, i_284.value);
        if(term == null)
          break Fail1393;
        k_284 = term;
        term = lex_to_dr_$Count_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1393;
        term = termFactory.makeTuple(term, random_test.const186);
        term = addi_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1393;
        l_284 = term;
        v_284 = term;
        s_284 = random_test.const285;
        w_284 = v_284;
        term = termFactory.makeTuple(random_test.const286, k_284);
        term = dr_add_rule_0_3.instance.invoke(context, w_284, s_284, i_284.value, term);
        if(term == null)
          break Fail1393;
        term = write_lex_to_dr_0_0.instance.invoke(context, l_284);
        if(term == null)
          break Fail1393;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted448 extends Strategy 
  { 
    TermReference h_284;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1394:
      { 
        IStrategoTerm term525 = term;
        Success933:
        { 
          Fail1395:
          { 
            IStrategoTerm o_284 = null;
            IStrategoTerm p_284 = null;
            p_284 = term;
            term = lex_to_dr_$Count_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1395;
            o_284 = term;
            term = p_284;
            if(h_284.value == null)
              break Fail1395;
            term = termFactory.makeTuple(h_284.value, o_284);
            term = eq_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1395;
            { 
              if(true)
                break Fail1394;
              if(true)
                break Success933;
            }
          }
          term = term525;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted447 extends Strategy 
  { 
    TermReference b_284;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1396:
      { 
        term = lex_to_dr_0_1.instance.invoke(context, term, b_284.value);
        if(term == null)
          break Fail1396;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted446 extends Strategy 
  { 
    Strategy x_281;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1397:
      { 
        IStrategoTerm s_282 = null;
        IStrategoTerm b_283 = null;
        b_283 = term;
        term = x_281.invoke(context, term);
        if(term == null)
          break Fail1397;
        s_282 = term;
        term = b_283;
        term = $Snd_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1397;
        term = inc_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1397;
        term = termFactory.makeTuple(s_282, term);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class b_281 extends Strategy 
  { 
    TermReference v_280;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1398:
      { 
        IStrategoTerm x_280 = null;
        term = generate_string_from_reg_0_1.instance.invoke(context, term, v_280.value);
        if(term == null)
          break Fail1398;
        x_280 = term;
        Success934:
        { 
          Fail1399:
          { 
            IStrategoTerm y_280 = null;
            y_280 = term;
            term = x_280;
            if(term.getTermType() != IStrategoTerm.STRING || !"".equals(((IStrategoString)term).stringValue()))
              break Fail1399;
            term = y_280;
            { 
              term = this.invoke(context, term);
              if(term == null)
                break Fail1398;
              if(true)
                break Success934;
            }
          }
          term = x_280;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted443 extends Strategy 
  { 
    public static final lifted443 instance = new lifted443();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1400:
      { 
        term = map_1_0.instance.invoke(context, term, build_xeger_0_0.instance);
        if(term == null)
          break Fail1400;
        term = special_string_concat_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1400;
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1400;
        term = (IStrategoTerm)termFactory.makeListCons(random_test.const276, termFactory.makeListCons(term, (IStrategoList)random_test.constCons53));
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1400;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted441 extends Strategy 
  { 
    TermReference v_277;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1401:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1401;
        if(v_277.value == null)
          v_277.value = term.getSubterm(1);
        else
          if(v_277.value != term.getSubterm(1) && !v_277.value.match(term.getSubterm(1)))
            break Fail1401;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted439 extends Strategy 
  { 
    public static final lifted439 instance = new lifted439();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1402:
      { 
        term = h_274.instance.invoke(context, term);
        if(term == null)
          break Fail1402;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class h_274 extends Strategy 
  { 
    public static final h_274 instance = new h_274();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1403:
      { 
        IStrategoTerm term489 = term;
        Success935:
        { 
          Fail1404:
          { 
            IStrategoTerm n_273 = null;
            IStrategoTerm o_273 = null;
            IStrategoTerm p_273 = null;
            IStrategoTerm q_273 = null;
            IStrategoTerm s_273 = null;
            IStrategoTerm u_273 = null;
            IStrategoTerm v_273 = null;
            IStrategoTerm w_273 = null;
            IStrategoTerm x_273 = null;
            IStrategoTerm y_273 = null;
            term = escape_regex_operators_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1404;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail1404;
            n_273 = ((IStrategoList)term).head();
            o_273 = ((IStrategoList)term).tail();
            IStrategoList annos7 = term.getAnnotations();
            s_273 = annos7;
            p_273 = n_273;
            term = o_273;
            if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
              break Fail1404;
            u_273 = ((IStrategoList)term).head();
            v_273 = ((IStrategoList)term).tail();
            IStrategoList annos8 = term.getAnnotations();
            y_273 = annos8;
            w_273 = u_273;
            term = this.invoke(context, v_273);
            if(term == null)
              break Fail1404;
            x_273 = term;
            IStrategoList list4;
            list4 = checkListTail(x_273);
            if(list4 == null)
              break Fail1404;
            term = termFactory.annotateTerm((IStrategoTerm)termFactory.makeListCons(w_273, list4), checkListAnnos(termFactory, y_273));
            q_273 = term;
            IStrategoList list5;
            list5 = checkListTail(q_273);
            if(list5 == null)
              break Fail1404;
            term = termFactory.annotateTerm((IStrategoTerm)termFactory.makeListCons(p_273, list5), checkListAnnos(termFactory, s_273));
            if(true)
              break Success935;
          }
          term = term489;
          IStrategoTerm term490 = term;
          Success936:
          { 
            Fail1405:
            { 
              IStrategoTerm z_273 = null;
              IStrategoTerm a_274 = null;
              IStrategoTerm b_274 = null;
              IStrategoTerm c_274 = null;
              IStrategoTerm d_274 = null;
              if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                break Fail1405;
              z_273 = ((IStrategoList)term).head();
              a_274 = ((IStrategoList)term).tail();
              IStrategoList annos9 = term.getAnnotations();
              d_274 = annos9;
              b_274 = z_273;
              term = this.invoke(context, a_274);
              if(term == null)
                break Fail1405;
              c_274 = term;
              IStrategoList list6;
              list6 = checkListTail(c_274);
              if(list6 == null)
                break Fail1405;
              term = termFactory.annotateTerm((IStrategoTerm)termFactory.makeListCons(b_274, list6), checkListAnnos(termFactory, d_274));
              if(true)
                break Success936;
            }
            term = term490;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1403;
          }
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted438 extends Strategy 
  { 
    TermReference g_266;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1406:
      { 
        IStrategoTerm term471 = term;
        Success937:
        { 
          Fail1407:
          { 
            if(g_266.value == null)
              break Fail1407;
            term = g_266.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1407;
            { 
              if(true)
                break Fail1406;
              if(true)
                break Success937;
            }
          }
          term = term471;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted437 extends Strategy 
  { 
    TermReference j_266;

    TermReference g_266;

    TermReference h_266;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1408:
      { 
        if(j_266.value == null)
          break Fail1408;
        term = j_266.value;
        IStrategoTerm cons29 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(g_266.value == null)
          g_266.value = cons29;
        else
          if(g_266.value != cons29 && !g_266.value.match(cons29))
            break Fail1408;
        IStrategoTerm args28 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(args28.getTermType() != IStrategoTerm.LIST || ((IStrategoList)args28).isEmpty())
          break Fail1408;
        if(h_266.value == null)
          h_266.value = ((IStrategoList)args28).head();
        else
          if(h_266.value != ((IStrategoList)args28).head() && !h_266.value.match(((IStrategoList)args28).head()))
            break Fail1408;
        IStrategoTerm arg181 = ((IStrategoList)args28).tail();
        if(arg181.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg181).isEmpty())
          break Fail1408;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted436 extends Strategy 
  { 
    TermReference w_268;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1409:
      { 
        IStrategoTerm term456 = term;
        Success938:
        { 
          Fail1410:
          { 
            if(w_268.value == null)
              break Fail1410;
            term = w_268.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1410;
            { 
              if(true)
                break Fail1409;
              if(true)
                break Success938;
            }
          }
          term = term456;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted435 extends Strategy 
  { 
    TermReference a_269;

    TermReference w_268;

    TermReference x_268;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1411:
      { 
        if(a_269.value == null)
          break Fail1411;
        term = a_269.value;
        IStrategoTerm cons28 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(w_268.value == null)
          w_268.value = cons28;
        else
          if(w_268.value != cons28 && !w_268.value.match(cons28))
            break Fail1411;
        IStrategoTerm args27 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(args27.getTermType() != IStrategoTerm.LIST || ((IStrategoList)args27).isEmpty())
          break Fail1411;
        if(x_268.value == null)
          x_268.value = ((IStrategoList)args27).head();
        else
          if(x_268.value != ((IStrategoList)args27).head() && !x_268.value.match(((IStrategoList)args27).head()))
            break Fail1411;
        IStrategoTerm arg177 = ((IStrategoList)args27).tail();
        if(arg177.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg177).isEmpty())
          break Fail1411;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted434 extends Strategy 
  { 
    TermReference b_271;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1412:
      { 
        IStrategoTerm term448 = term;
        Success939:
        { 
          Fail1413:
          { 
            if(b_271.value == null)
              break Fail1413;
            term = b_271.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1413;
            { 
              if(true)
                break Fail1412;
              if(true)
                break Success939;
            }
          }
          term = term448;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted433 extends Strategy 
  { 
    TermReference d_271;

    TermReference b_271;

    TermReference c_271;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1414:
      { 
        if(d_271.value == null)
          break Fail1414;
        term = d_271.value;
        IStrategoTerm cons27 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(b_271.value == null)
          b_271.value = cons27;
        else
          if(b_271.value != cons27 && !b_271.value.match(cons27))
            break Fail1414;
        IStrategoTerm args26 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(args26.getTermType() != IStrategoTerm.LIST || ((IStrategoList)args26).isEmpty())
          break Fail1414;
        if(c_271.value == null)
          c_271.value = ((IStrategoList)args26).head();
        else
          if(c_271.value != ((IStrategoList)args26).head() && !c_271.value.match(((IStrategoList)args26).head()))
            break Fail1414;
        IStrategoTerm arg175 = ((IStrategoList)args26).tail();
        if(arg175.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg175).isEmpty())
          break Fail1414;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted432 extends Strategy 
  { 
    TermReference c_272;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1415:
      { 
        IStrategoTerm term440 = term;
        Success940:
        { 
          Fail1416:
          { 
            if(c_272.value == null)
              break Fail1416;
            term = c_272.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1416;
            { 
              if(true)
                break Fail1415;
              if(true)
                break Success940;
            }
          }
          term = term440;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted431 extends Strategy 
  { 
    TermReference e_272;

    TermReference c_272;

    TermReference d_272;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1417:
      { 
        if(e_272.value == null)
          break Fail1417;
        term = e_272.value;
        IStrategoTerm cons26 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(c_272.value == null)
          c_272.value = cons26;
        else
          if(c_272.value != cons26 && !c_272.value.match(cons26))
            break Fail1417;
        IStrategoTerm args25 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(args25.getTermType() != IStrategoTerm.LIST || ((IStrategoList)args25).isEmpty())
          break Fail1417;
        if(d_272.value == null)
          d_272.value = ((IStrategoList)args25).head();
        else
          if(d_272.value != ((IStrategoList)args25).head() && !d_272.value.match(((IStrategoList)args25).head()))
            break Fail1417;
        IStrategoTerm arg173 = ((IStrategoList)args25).tail();
        if(arg173.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg173).isEmpty())
          break Fail1417;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted428 extends Strategy 
  { 
    public static final lifted428 instance = new lifted428();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1418:
      { 
        IStrategoTerm b_242 = null;
        IStrategoTerm c_242 = null;
        IStrategoTerm h_242 = null;
        IStrategoTerm k_242 = null;
        IStrategoTerm l_242 = null;
        b_242 = term;
        c_242 = term;
        k_242 = term;
        h_242 = random_test.const220;
        l_242 = k_242;
        term = termFactory.makeTuple(random_test.const221, b_242);
        term = dr_set_rule_0_3.instance.invoke(context, l_242, h_242, b_242, term);
        if(term == null)
          break Fail1418;
        term = c_242;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted378 extends Strategy 
  { 
    TermReference a_239;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1419:
      { 
        if(a_239.value == null)
          a_239.value = term;
        else
          if(a_239.value != term && !a_239.value.match(term))
            break Fail1419;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted376 extends Strategy 
  { 
    public static final lifted376 instance = new lifted376();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1420:
      { 
        IStrategoTerm y_237 = null;
        y_237 = term;
        term = $Error$Message$Pattern_0_0.instance.invoke(context, y_237);
        if(term == null)
          break Fail1420;
        term = termFactory.makeTuple(y_237, term);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted375 extends Strategy 
  { 
    TermReference h_235;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1421:
      { 
        IStrategoTerm r_235 = null;
        IStrategoTerm s_235 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1421;
        r_235 = term.getSubterm(0);
        s_235 = term.getSubterm(1);
        term = process_error_node_0_2.instance.invoke(context, s_235, r_235, h_235.value);
        if(term == null)
          break Fail1421;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted373 extends Strategy 
  { 
    public static final lifted373 instance = new lifted373();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1422:
      { 
        term = random_test.const193;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted368 extends Strategy 
  { 
    TermReference f_232;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1423:
      { 
        lifted372 lifted3720 = new lifted372();
        lifted3720.f_232 = f_232;
        term = try_1_0.instance.invoke(context, term, lifted3720);
        if(term == null)
          break Fail1423;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted372 extends Strategy 
  { 
    TermReference f_232;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1424:
      { 
        IStrategoTerm s_234 = null;
        IStrategoTerm s_233 = null;
        IStrategoTerm u_233 = null;
        IStrategoTerm v_233 = null;
        s_234 = term;
        if(f_232.value == null)
          break Fail1424;
        term = f_232.value;
        IStrategoTerm term310 = term;
        Success941:
        { 
          Fail1425:
          { 
            term = concat_strings_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1425;
            if(true)
              break Success941;
          }
          term = term310;
          IStrategoTerm term311 = term;
          Success942:
          { 
            Fail1426:
            { 
              term = is_string_0_0.instance.invoke(context, term);
              if(term == null)
                break Fail1426;
              if(true)
                break Success942;
            }
            term = term311;
            IStrategoTerm term312 = term;
            Success943:
            { 
              Fail1427:
              { 
                term = int_to_string_0_0.instance.invoke(context, term);
                if(term == null)
                  break Fail1427;
                if(true)
                  break Success943;
              }
              term = term312;
              IStrategoTerm term313 = term;
              Success944:
              { 
                Fail1428:
                { 
                  term = real_to_string_0_0.instance.invoke(context, term);
                  if(term == null)
                    break Fail1428;
                  if(true)
                    break Success944;
                }
                term = term313;
                IStrategoTerm i_233 = null;
                IStrategoTerm n_233 = null;
                IStrategoTerm p_233 = null;
                i_233 = term;
                term = context.invokePrimitive("SSL_stacktrace_get_all_frame_names", term, NO_STRATEGIES, NO_TERMS);
                if(term == null)
                  break Fail1424;
                if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
                  break Fail1424;
                n_233 = ((IStrategoList)term).tail();
                p_233 = n_233;
                term = report_failure_0_2.instance.invoke(context, p_233, random_test.const190, i_233);
                if(term == null)
                  break Fail1424;
              }
            }
          }
        }
        u_233 = term;
        s_233 = random_test.const8;
        v_233 = u_233;
        term = string_replace_0_2.instance.invoke(context, v_233, s_233, random_test.const8);
        if(term == null)
          break Fail1424;
        term = (IStrategoTerm)termFactory.makeListCons(term, (IStrategoList)random_test.constCons46);
        term = concat_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1424;
        term = termFactory.annotateTerm(term, checkListAnnos(termFactory, random_test.constNil0));
        term = check_for_amb_0_1.instance.invoke(context, s_234, term);
        if(term == null)
          break Fail1424;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted337 extends Strategy 
  { 
    public static final lifted337 instance = new lifted337();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1429:
      { 
        IStrategoTerm r_232 = null;
        IStrategoTerm s_232 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1429;
        IStrategoTerm arg149 = term.getSubterm(1);
        if(arg149.getTermType() != IStrategoTerm.TUPLE || arg149.getSubtermCount() != 2)
          break Fail1429;
        r_232 = arg149.getSubterm(0);
        s_232 = arg149.getSubterm(1);
        term = termFactory.makeTuple(r_232, s_232);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted336 extends Strategy 
  { 
    TermReference s_704;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1430:
      { 
        term = translate_fix_0_1.instance.invoke(context, term, s_704.value);
        if(term == null)
          break Fail1430;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted334 extends Strategy 
  { 
    TermReference s_704;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1431:
      { 
        term = translate_fix_0_1.instance.invoke(context, term, s_704.value);
        if(term == null)
          break Fail1431;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted333 extends Strategy 
  { 
    TermReference a_228;

    TermReference p_704;

    TermReference q_704;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1432:
      { 
        IStrategoTerm d_228 = null;
        d_228 = term;
        if(a_228.value == null)
          break Fail1432;
        term = process_location_0_3.instance.invoke(context, a_228.value, p_704.value, q_704.value, d_228);
        if(term == null)
          break Fail1432;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted331 extends Strategy 
  { 
    TermReference z_227;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1433:
      { 
        IStrategoTerm term295 = term;
        Success945:
        { 
          Fail1434:
          { 
            if(z_227.value == null)
              break Fail1434;
            term = z_227.value;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1434;
            { 
              if(true)
                break Fail1433;
              if(true)
                break Success945;
            }
          }
          term = term295;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted330 extends Strategy 
  { 
    TermReference r_704;

    TermReference z_227;

    TermReference b_228;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1435:
      { 
        if(r_704.value == null)
          break Fail1435;
        term = r_704.value;
        IStrategoTerm cons24 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(z_227.value == null)
          z_227.value = cons24;
        else
          if(z_227.value != cons24 && !z_227.value.match(cons24))
            break Fail1435;
        IStrategoTerm args23 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(b_228.value == null)
          b_228.value = args23;
        else
          if(b_228.value != args23 && !b_228.value.match(args23))
            break Fail1435;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted328 extends Strategy 
  { 
    TermReference p_704;

    TermReference q_704;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1436:
      { 
        IStrategoTerm p_228 = null;
        IStrategoTerm q_228 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1436;
        p_228 = term.getSubterm(0);
        q_228 = term.getSubterm(1);
        term = process_location_0_3.instance.invoke(context, q_228, p_704.value, q_704.value, p_228);
        if(term == null)
          break Fail1436;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted325 extends Strategy 
  { 
    TermReference i_223;

    TermReference j_223;

    TermReference k_223;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1437:
      { 
        TermReference n_223 = new TermReference();
        if(n_223.value == null)
          n_223.value = term;
        else
          if(n_223.value != term && !n_223.value.match(term))
            break Fail1437;
        if(i_223.value == null)
          break Fail1437;
        term = i_223.value;
        lifted327 lifted3270 = new lifted327();
        lifted3270.n_223 = n_223;
        lifted3270.j_223 = j_223;
        term = SRTS_one.instance.invoke(context, term, lifted3270);
        if(term == null)
          break Fail1437;
        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
          break Fail1437;
        if(k_223.value == null)
          k_223.value = ((IStrategoList)term).head();
        else
          if(k_223.value != ((IStrategoList)term).head() && !k_223.value.match(((IStrategoList)term).head()))
            break Fail1437;
        IStrategoTerm arg143 = ((IStrategoList)term).tail();
        if(arg143.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg143).isEmpty())
          break Fail1437;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted327 extends Strategy 
  { 
    TermReference n_223;

    TermReference j_223;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1438:
      { 
        term = process_error_node_0_2.instance.invoke(context, term, n_223.value, j_223.value);
        if(term == null)
          break Fail1438;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted324 extends Strategy 
  { 
    TermReference z_219;

    TermReference a_220;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1439:
      { 
        term = remove_one_0_2.instance.invoke(context, term, z_219.value, a_220.value);
        if(term == null)
          break Fail1439;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted322 extends Strategy 
  { 
    TermReference m_220;

    TermReference n_220;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1440:
      { 
        term = remove_one_0_2.instance.invoke(context, term, m_220.value, n_220.value);
        if(term == null)
          break Fail1440;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted321 extends Strategy 
  { 
    TermReference a_221;

    TermReference b_221;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1441:
      { 
        term = change_fix_0_2.instance.invoke(context, term, a_221.value, b_221.value);
        if(term == null)
          break Fail1441;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted313 extends Strategy 
  { 
    TermReference v_215;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1442:
      { 
        if(v_215.value == null)
          v_215.value = term;
        else
          if(v_215.value != term && !v_215.value.match(term))
            break Fail1442;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted310 extends Strategy 
  { 
    public static final lifted310 instance = new lifted310();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1443:
      { 
        IStrategoTerm b_215 = null;
        term = filter_prods_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1443;
        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
          break Fail1443;
        b_215 = ((IStrategoList)term).head();
        IStrategoTerm arg121 = ((IStrategoList)term).tail();
        if(arg121.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg121).isEmpty())
          break Fail1443;
        term = b_215;
        IStrategoTerm term257 = term;
        Success946:
        { 
          Fail1444:
          { 
            term = is_shrinkable_sort_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1444;
            if(true)
              break Success946;
          }
          term = has_productions_with_no_constructors_0_0.instance.invoke(context, term257);
          if(term == null)
            break Fail1443;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted306 extends Strategy 
  { 
    TermReference a_215;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1445:
      { 
        IStrategoTerm term255 = term;
        Success947:
        { 
          Fail1446:
          { 
            IStrategoTerm e_215 = null;
            IStrategoTerm f_215 = null;
            f_215 = term;
            e_215 = term;
            term = f_215;
            if(a_215.value == null)
              break Fail1446;
            term = termFactory.makeTuple(a_215.value, e_215);
            term = $C$F$Cons_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1446;
            { 
              if(true)
                break Fail1445;
              if(true)
                break Success947;
            }
          }
          term = term255;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted305 extends Strategy 
  { 
    public static final lifted305 instance = new lifted305();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1447:
      { 
        IStrategoTerm h_215 = null;
        term = filter_prods_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1447;
        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
          break Fail1447;
        h_215 = ((IStrategoList)term).head();
        IStrategoTerm arg118 = ((IStrategoList)term).tail();
        if(arg118.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg118).isEmpty())
          break Fail1447;
        term = h_215;
        IStrategoTerm term252 = term;
        Success948:
        { 
          Fail1448:
          { 
            term = is_injectable_sort_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1448;
            if(true)
              break Success948;
          }
          term = has_productions_with_no_constructors_0_0.instance.invoke(context, term252);
          if(term == null)
            break Fail1447;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted303 extends Strategy 
  { 
    TermReference g_215;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1449:
      { 
        IStrategoTerm term250 = term;
        Success949:
        { 
          Fail1450:
          { 
            IStrategoTerm k_215 = null;
            IStrategoTerm l_215 = null;
            l_215 = term;
            k_215 = term;
            term = l_215;
            if(g_215.value == null)
              break Fail1450;
            term = termFactory.makeTuple(g_215.value, k_215);
            term = $C$F$Cons_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1450;
            { 
              if(true)
                break Fail1449;
              if(true)
                break Success949;
            }
          }
          term = term250;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted257 extends Strategy 
  { 
    public static final lifted257 instance = new lifted257();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1451:
      { 
        term = random_test.const174;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted248 extends Strategy 
  { 
    TermReference o_214;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1452:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1452;
        if(o_214.value == null)
          o_214.value = term.getSubterm(1);
        else
          if(o_214.value != term.getSubterm(1) && !o_214.value.match(term.getSubterm(1)))
            break Fail1452;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted244 extends Strategy 
  { 
    TermReference n_214;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1453:
      { 
        IStrategoTerm r_214 = null;
        IStrategoTerm v_214 = null;
        IStrategoTerm x_214 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1453;
        r_214 = term.getSubterm(1);
        x_214 = term;
        term = filter_prods_0_0.instance.invoke(context, r_214);
        if(term == null)
          break Fail1453;
        term = length_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1453;
        v_214 = term;
        term = x_214;
        if(n_214.value == null)
          break Fail1453;
        term = termFactory.makeTuple(v_214, n_214.value);
        term = eq_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1453;
        term = filter_prods_0_0.instance.invoke(context, r_214);
        if(term == null)
          break Fail1453;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted235 extends Strategy 
  { 
    TermReference f_214;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1454:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1454;
        if(f_214.value == null)
          f_214.value = term.getSubterm(1);
        else
          if(f_214.value != term.getSubterm(1) && !f_214.value.match(term.getSubterm(1)))
            break Fail1454;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted233 extends Strategy 
  { 
    TermReference t_213;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1455:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 5)
          break Fail1455;
        if(t_213.value == null)
          t_213.value = term.getSubterm(1);
        else
          if(t_213.value != term.getSubterm(1) && !t_213.value.match(term.getSubterm(1)))
            break Fail1455;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted231 extends Strategy 
  { 
    TermReference q_213;

    TermReference n_213;

    TermReference o_213;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1456:
      { 
        term = check_if_parent_sorts_coincede_0_3.instance.invoke(context, term, q_213.value, n_213.value, o_213.value);
        if(term == null)
          break Fail1456;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted230 extends Strategy 
  { 
    TermReference m_213;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1457:
      { 
        IStrategoTerm term245 = term;
        Success950:
        { 
          Fail1458:
          { 
            IStrategoTerm r_213 = null;
            IStrategoTerm s_213 = null;
            s_213 = term;
            r_213 = term;
            term = s_213;
            if(m_213.value == null)
              break Fail1458;
            term = termFactory.makeTuple(r_213, m_213.value);
            term = $Non$Injectable_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1458;
            { 
              if(true)
                break Fail1457;
              if(true)
                break Success950;
            }
          }
          term = term245;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted229 extends Strategy 
  { 
    TermReference z_210;

    TermReference x_703;

    TermReference a_211;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1459:
      { 
        term = get_injections_per_iter_0_3.instance.invoke(context, term, z_210.value, x_703.value, a_211.value);
        if(term == null)
          break Fail1459;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted228 extends Strategy 
  { 
    public static final lifted228 instance = new lifted228();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1460:
      { 
        term = random_test.const173;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted227 extends Strategy 
  { 
    public static final lifted227 instance = new lifted227();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1461:
      { 
        term = random_test.const172;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted226 extends Strategy 
  { 
    public static final lifted226 instance = new lifted226();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1462:
      { 
        term = random_test.const170;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted225 extends Strategy 
  { 
    public static final lifted225 instance = new lifted225();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1463:
      { 
        term = random_test.const169;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted224 extends Strategy 
  { 
    public static final lifted224 instance = new lifted224();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1464:
      { 
        term = random_test.const168;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted219 extends Strategy 
  { 
    TermReference m_210;

    TermReference j_210;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1465:
      { 
        IStrategoTerm p_210 = null;
        p_210 = term;
        term = get_injections_per_iter_0_3.instance.invoke(context, p_210, m_210.value, j_210.value, random_test.constNil0);
        if(term == null)
          break Fail1465;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted218 extends Strategy 
  { 
    public static final lifted218 instance = new lifted218();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1466:
      { 
        term = random_test.const167;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted217 extends Strategy 
  { 
    public static final lifted217 instance = new lifted217();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1467:
      { 
        term = random_test.const166;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted214 extends Strategy 
  { 
    public static final lifted214 instance = new lifted214();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1468:
      { 
        term = random_test.const163;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted213 extends Strategy 
  { 
    public static final lifted213 instance = new lifted213();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1469:
      { 
        term = random_test.const162;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted215 extends Strategy 
  { 
    public static final lifted215 instance = new lifted215();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1470:
      { 
        term = random_test.const161;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted211 extends Strategy 
  { 
    TermReference z_208;

    TermReference e_209;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1471:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 5)
          break Fail1471;
        if(z_208.value == null)
          z_208.value = term.getSubterm(1);
        else
          if(z_208.value != term.getSubterm(1) && !z_208.value.match(term.getSubterm(1)))
            break Fail1471;
        if(e_209.value == null)
          e_209.value = term.getSubterm(3);
        else
          if(e_209.value != term.getSubterm(3) && !e_209.value.match(term.getSubterm(3)))
            break Fail1471;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted204 extends Strategy 
  { 
    TermReference z_208;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1472:
      { 
        term = recognize_sort_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1472;
        if(z_208.value == null)
          z_208.value = term;
        else
          if(z_208.value != term && !z_208.value.match(term))
            break Fail1472;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted202 extends Strategy 
  { 
    TermReference w_203;

    TermReference x_203;

    TermReference y_203;

    TermReference m_703;

    TermReference z_203;

    TermReference l_703;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1473:
      { 
        term = build_alternative_body_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{w_203.value, x_203.value, y_203.value, m_703.value, z_203.value, l_703.value});
        if(term == null)
          break Fail1473;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted197 extends Strategy 
  { 
    TermReference w_203;

    TermReference x_203;

    TermReference y_203;

    TermReference m_703;

    TermReference z_203;

    TermReference l_703;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1474:
      { 
        term = build_alternative_body_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{w_203.value, x_203.value, y_203.value, m_703.value, z_203.value, l_703.value});
        if(term == null)
          break Fail1474;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted191 extends Strategy 
  { 
    TermReference w_203;

    TermReference x_203;

    TermReference y_203;

    TermReference m_703;

    TermReference z_203;

    TermReference l_703;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1475:
      { 
        term = build_alternative_body_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{w_203.value, x_203.value, y_203.value, m_703.value, z_203.value, l_703.value});
        if(term == null)
          break Fail1475;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted162 extends Strategy 
  { 
    TermReference t_204;

    TermReference u_204;

    TermReference w_204;

    TermReference v_204;

    TermReference z_204;

    TermReference a_205;

    TermReference l_703;

    TermReference e_205;

    TermReference b_205;

    TermReference c_205;

    TermReference f_205;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1476:
      { 
        IStrategoTerm m_205 = null;
        IStrategoTerm n_205 = null;
        IStrategoTerm o_205 = null;
        IStrategoTerm p_205 = null;
        IStrategoTerm q_205 = null;
        IStrategoTerm r_205 = null;
        if(t_204.value == null)
          break Fail1476;
        term = t_204.value;
        IStrategoTerm cons20 = context.invokePrimitive("SSL_get_constructor", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(b_205.value == null)
          b_205.value = cons20;
        else
          if(b_205.value != cons20 && !b_205.value.match(cons20))
            break Fail1476;
        IStrategoTerm args19 = context.invokePrimitive("SSL_get_arguments", term, NO_STRATEGIES, new IStrategoTerm[]{term});
        if(v_204.value == null)
          v_204.value = args19;
        else
          if(v_204.value != args19 && !v_204.value.match(args19))
            break Fail1476;
        term = debug_1_0.instance.invoke(context, term, lifted163.instance);
        if(term == null)
          break Fail1476;
        if(b_205.value == null)
          break Fail1476;
        term = $Cons$C$F_0_0.instance.invoke(context, b_205.value);
        if(term == null)
          break Fail1476;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1476;
        if(u_204.value == null)
          u_204.value = term.getSubterm(0);
        else
          if(u_204.value != term.getSubterm(0) && !u_204.value.match(term.getSubterm(0)))
            break Fail1476;
        if(w_204.value == null)
          w_204.value = term.getSubterm(1);
        else
          if(w_204.value != term.getSubterm(1) && !w_204.value.match(term.getSubterm(1)))
            break Fail1476;
        term = debug_1_0.instance.invoke(context, term, lifted164.instance);
        if(term == null)
          break Fail1476;
        if(u_204.value == null || w_204.value == null)
          break Fail1476;
        term = termFactory.makeTuple(u_204.value, w_204.value);
        Success951:
        { 
          Fail1477:
          { 
            term = update_$N$B$L_scope_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1477;
            if(true)
              break Success951;
          }
          term = random_test.const110;
        }
        if(e_205.value == null)
          e_205.value = term;
        else
          if(e_205.value != term && !e_205.value.match(term))
            break Fail1476;
        term = debug_1_0.instance.invoke(context, term, lifted169.instance);
        if(term == null)
          break Fail1476;
        n_205 = term;
        if(v_204.value == null)
          break Fail1476;
        term = length_0_0.instance.invoke(context, v_204.value);
        if(term == null)
          break Fail1476;
        m_205 = term;
        term = n_205;
        if(w_204.value == null || u_204.value == null)
          break Fail1476;
        term = termFactory.makeTuple(w_204.value, u_204.value, m_205);
        term = get_and_distribute_rejections_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1476;
        if(z_204.value == null)
          z_204.value = term;
        else
          if(z_204.value != term && !z_204.value.match(term))
            break Fail1476;
        term = debug_1_0.instance.invoke(context, term, lifted170.instance);
        if(term == null)
          break Fail1476;
        p_205 = term;
        r_205 = term;
        if(w_204.value == null)
          break Fail1476;
        term = filter_prods_0_0.instance.invoke(context, w_204.value);
        if(term == null)
          break Fail1476;
        q_205 = term;
        term = r_205;
        if(v_204.value == null)
          break Fail1476;
        term = termFactory.makeTuple(v_204.value, q_205);
        term = zip_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1476;
        o_205 = term;
        term = p_205;
        if(z_204.value == null)
          break Fail1476;
        term = termFactory.makeTuple(o_205, z_204.value);
        term = zip_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1476;
        if(a_205.value == null)
          a_205.value = term;
        else
          if(a_205.value != term && !a_205.value.match(term))
            break Fail1476;
        term = debug_1_0.instance.invoke(context, term, lifted173.instance);
        if(term == null)
          break Fail1476;
        if(a_205.value == null)
          break Fail1476;
        term = a_205.value;
        lifted174 lifted1740 = new lifted174();
        lifted1740.l_703 = l_703;
        term = map_1_0.instance.invoke(context, term, lifted1740);
        if(term == null)
          break Fail1476;
        if(c_205.value == null)
          c_205.value = term;
        else
          if(c_205.value != term && !c_205.value.match(term))
            break Fail1476;
        term = debug_1_0.instance.invoke(context, term, lifted177.instance);
        if(term == null)
          break Fail1476;
        if(e_205.value == null)
          break Fail1476;
        term = construct_result_0_2.instance.invoke(context, e_205.value, b_205.value, c_205.value);
        if(term == null)
          break Fail1476;
        if(f_205.value == null)
          f_205.value = term;
        else
          if(f_205.value != term && !f_205.value.match(term))
            break Fail1476;
        term = debug_1_0.instance.invoke(context, term, lifted178.instance);
        if(term == null)
          break Fail1476;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted177 extends Strategy 
  { 
    public static final lifted177 instance = new lifted177();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1478:
      { 
        term = random_test.const158;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted174 extends Strategy 
  { 
    TermReference l_703;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1479:
      { 
        term = build_definition_body_0_1.instance.invoke(context, term, l_703.value);
        if(term == null)
          break Fail1479;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted173 extends Strategy 
  { 
    public static final lifted173 instance = new lifted173();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1480:
      { 
        term = random_test.const157;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted170 extends Strategy 
  { 
    public static final lifted170 instance = new lifted170();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1481:
      { 
        term = random_test.const156;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted169 extends Strategy 
  { 
    public static final lifted169 instance = new lifted169();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1482:
      { 
        term = random_test.const155;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted164 extends Strategy 
  { 
    public static final lifted164 instance = new lifted164();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1483:
      { 
        term = random_test.const154;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted163 extends Strategy 
  { 
    public static final lifted163 instance = new lifted163();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1484:
      { 
        term = random_test.const153;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted178 extends Strategy 
  { 
    public static final lifted178 instance = new lifted178();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1485:
      { 
        term = random_test.const152;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted161 extends Strategy 
  { 
    public static final lifted161 instance = new lifted161();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1486:
      { 
        term = random_test.const151;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted160 extends Strategy 
  { 
    TermReference n_201;

    TermReference h_703;

    TermReference o_201;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1487:
      { 
        term = inject_alternative_aux_0_3.instance.invoke(context, term, n_201.value, h_703.value, o_201.value);
        if(term == null)
          break Fail1487;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted159 extends Strategy 
  { 
    public static final lifted159 instance = new lifted159();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1488:
      { 
        term = random_test.const148;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted158 extends Strategy 
  { 
    public static final lifted158 instance = new lifted158();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1489:
      { 
        term = random_test.const146;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted157 extends Strategy 
  { 
    public static final lifted157 instance = new lifted157();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1490:
      { 
        term = random_test.const145;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted142 extends Strategy 
  { 
    public static final lifted142 instance = new lifted142();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1491:
      { 
        term = random_test.const144;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted135 extends Strategy 
  { 
    public static final lifted135 instance = new lifted135();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1492:
      { 
        term = random_test.const143;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted134 extends Strategy 
  { 
    TermReference a_200;

    TermReference b_200;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1493:
      { 
        IStrategoTerm c_200 = null;
        c_200 = term;
        if(a_200.value == null || b_200.value == null)
          break Fail1493;
        term = termFactory.makeTuple(c_200, a_200.value, b_200.value);
        term = write_current_scope_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1493;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted133 extends Strategy 
  { 
    TermReference d_703;

    TermReference e_703;

    TermReference f_703;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1494:
      { 
        term = read_and_search_tree_0_3.instance.invoke(context, term, d_703.value, e_703.value, f_703.value);
        if(term == null)
          break Fail1494;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted131 extends Strategy 
  { 
    TermReference u_197;

    TermReference v_197;

    TermReference d_703;

    TermReference e_703;

    TermReference f_703;

    TermReference w_197;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1495:
      { 
        if(u_197.value == null)
          break Fail1495;
        term = update_scopes_0_0.instance.invoke(context, u_197.value);
        if(term == null)
          break Fail1495;
        if(v_197.value == null)
          break Fail1495;
        term = v_197.value;
        lifted132 lifted1320 = new lifted132();
        lifted1320.d_703 = d_703;
        lifted1320.e_703 = e_703;
        lifted1320.f_703 = f_703;
        term = map_1_0.instance.invoke(context, term, lifted1320);
        if(term == null)
          break Fail1495;
        if(w_197.value == null)
          w_197.value = term;
        else
          if(w_197.value != term && !w_197.value.match(term))
            break Fail1495;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted132 extends Strategy 
  { 
    TermReference d_703;

    TermReference e_703;

    TermReference f_703;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1496:
      { 
        term = read_and_search_tree_0_3.instance.invoke(context, term, d_703.value, e_703.value, f_703.value);
        if(term == null)
          break Fail1496;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted130 extends Strategy 
  { 
    TermReference d_703;

    TermReference e_703;

    TermReference f_703;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1497:
      { 
        term = read_and_search_tree_0_3.instance.invoke(context, term, d_703.value, e_703.value, f_703.value);
        if(term == null)
          break Fail1497;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted129 extends Strategy 
  { 
    TermReference f_199;

    TermReference d_703;

    TermReference e_703;

    TermReference f_703;

    TermReference g_199;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1498:
      { 
        if(f_199.value == null)
          break Fail1498;
        term = update_scopes_0_0.instance.invoke(context, f_199.value);
        if(term == null)
          break Fail1498;
        if(f_199.value == null)
          break Fail1498;
        term = inject_$N$B$L_definition_0_3.instance.invoke(context, f_199.value, d_703.value, e_703.value, f_703.value);
        if(term == null)
          break Fail1498;
        if(g_199.value == null)
          g_199.value = term;
        else
          if(g_199.value != term && !g_199.value.match(term))
            break Fail1498;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted127 extends Strategy 
  { 
    public static final lifted127 instance = new lifted127();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1499:
      { 
        term = random_test.const137;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted125 extends Strategy 
  { 
    public static final lifted125 instance = new lifted125();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1500:
      { 
        term = random_test.const135;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted119 extends Strategy 
  { 
    public static final lifted119 instance = new lifted119();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1501:
      { 
        IStrategoTerm term170 = term;
        Success952:
        { 
          Fail1502:
          { 
            term = non_injectable_scope_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1502;
            { 
              if(true)
                break Fail1501;
              if(true)
                break Success952;
            }
          }
          term = term170;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted121 extends Strategy 
  { 
    public static final lifted121 instance = new lifted121();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1503:
      { 
        term = random_test.const133;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted117 extends Strategy 
  { 
    TermReference r_190;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1504:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1504;
        if(r_190.value == null)
          r_190.value = term.getSubterm(1);
        else
          if(r_190.value != term.getSubterm(1) && !r_190.value.match(term.getSubterm(1)))
            break Fail1504;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted115 extends Strategy 
  { 
    TermReference r_190;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1505:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1505;
        if(r_190.value == null)
          r_190.value = term.getSubterm(1);
        else
          if(r_190.value != term.getSubterm(1) && !r_190.value.match(term.getSubterm(1)))
            break Fail1505;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted111 extends Strategy 
  { 
    TermReference m_188;

    TermReference s_188;

    TermReference n_188;

    TermReference o_188;

    TermReference p_188;

    TermReference q_188;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1506:
      { 
        term = random_generate_referral_body_aux_0_6.instance.invokeDynamic(context, term, NO_STRATEGIES, new IStrategoTerm[]{m_188.value, s_188.value, n_188.value, o_188.value, p_188.value, q_188.value});
        if(term == null)
          break Fail1506;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted110 extends Strategy 
  { 
    public static final lifted110 instance = new lifted110();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1507:
      { 
        term = random_test.const126;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted109 extends Strategy 
  { 
    public static final lifted109 instance = new lifted109();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1508:
      { 
        IStrategoTerm f_185 = null;
        IStrategoTerm g_185 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1508;
        f_185 = term.getSubterm(0);
        g_185 = term.getSubterm(1);
        term = get_values_from_current_scope_0_0.instance.invoke(context, f_185);
        if(term == null)
          break Fail1508;
        IStrategoTerm term143 = term;
        Success953:
        { 
          Fail1509:
          { 
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1509;
            { 
              if(true)
                break Fail1508;
              if(true)
                break Success953;
            }
          }
          term = term143;
        }
        term = termFactory.makeTuple(term, f_185, g_185);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted108 extends Strategy 
  { 
    TermReference r_184;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1510:
      { 
        if(term.getTermType() != IStrategoTerm.APPL || random_test._consPreviousScope_1 != ((IStrategoAppl)term).getConstructor())
          break Fail1510;
        if(r_184.value == null)
          r_184.value = term.getSubterm(0);
        else
          if(r_184.value != term.getSubterm(0) && !r_184.value.match(term.getSubterm(0)))
            break Fail1510;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted104 extends Strategy 
  { 
    TermReference b_184;

    TermReference c_184;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1511:
      { 
        IStrategoTerm d_184 = null;
        d_184 = term;
        if(b_184.value == null || c_184.value == null)
          break Fail1511;
        term = termFactory.makeTuple(d_184, b_184.value, c_184.value);
        term = write_current_scope_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1511;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted86 extends Strategy 
  { 
    public static final lifted86 instance = new lifted86();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1512:
      { 
        TermReference r_180 = new TermReference();
        IStrategoTerm y_180 = null;
        term = filter_prods_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1512;
        lifted87 lifted870 = new lifted87();
        lifted870.r_180 = r_180;
        term = SRTS_all.instance.invoke(context, term, lifted870);
        if(term == null)
          break Fail1512;
        if(term.getTermType() != IStrategoTerm.LIST || ((IStrategoList)term).isEmpty())
          break Fail1512;
        y_180 = ((IStrategoList)term).head();
        IStrategoTerm arg40 = ((IStrategoList)term).tail();
        if(arg40.getTermType() != IStrategoTerm.LIST || !((IStrategoList)arg40).isEmpty())
          break Fail1512;
        term = y_180;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted87 extends Strategy 
  { 
    TermReference r_180;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1513:
      { 
        term = recognize_sort_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1513;
        term = try_1_0.instance.invoke(context, term, help_remove_cardinality_ops_0_0.instance);
        if(term == null)
          break Fail1513;
        if(r_180.value == null)
          r_180.value = term;
        else
          if(r_180.value != term && !r_180.value.match(term))
            break Fail1513;
        term = $Lex$Sorts_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1513;
        if(r_180.value == null)
          break Fail1513;
        term = r_180.value;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted85 extends Strategy 
  { 
    public static final lifted85 instance = new lifted85();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1514:
      { 
        term = random_test.const115;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted82 extends Strategy 
  { 
    public static final lifted82 instance = new lifted82();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1515:
      { 
        term = random_test.const114;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted83 extends Strategy 
  { 
    public static final lifted83 instance = new lifted83();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1516:
      { 
        term = random_test.const113;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted81 extends Strategy 
  { 
    public static final lifted81 instance = new lifted81();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1517:
      { 
        term = random_test.const112;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted78 extends Strategy 
  { 
    TermReference d_180;

    TermReference c_180;

    TermReference q_702;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1518:
      { 
        IStrategoTerm k_180 = null;
        k_180 = term;
        if(d_180.value == null)
          break Fail1518;
        term = length_0_0.instance.invoke(context, d_180.value);
        if(term == null)
          break Fail1518;
        term = get_identifier_sort_0_3.instance.invoke(context, k_180, c_180.value, term, q_702.value);
        if(term == null)
          break Fail1518;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted76 extends Strategy 
  { 
    TermReference n_702;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1519:
      { 
        TermReference g_178 = new TermReference();
        if(g_178.value == null)
          g_178.value = term;
        else
          if(g_178.value != term && !g_178.value.match(term))
            break Fail1519;
        IStrategoTerm term107 = term;
        Success954:
        { 
          Fail1520:
          { 
            if(n_702.value == null)
              break Fail1520;
            term = n_702.value;
            lifted77 lifted770 = new lifted77();
            lifted770.g_178 = g_178;
            term = filter_1_0.instance.invoke(context, term, lifted770);
            if(term == null)
              break Fail1520;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1520;
            { 
              if(true)
                break Fail1519;
              if(true)
                break Success954;
            }
          }
          term = term107;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted77 extends Strategy 
  { 
    TermReference g_178;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1521:
      { 
        if(g_178.value == null)
          g_178.value = term;
        else
          if(g_178.value != term && !g_178.value.match(term))
            break Fail1521;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted75 extends Strategy 
  { 
    TermReference a_178;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1522:
      { 
        if(a_178.value == null)
          break Fail1522;
        term = generate_terminal_0_0.instance.invoke(context, a_178.value);
        if(term == null)
          break Fail1522;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted73 extends Strategy 
  { 
    public static final lifted73 instance = new lifted73();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1523:
      { 
        IStrategoTerm term102 = term;
        Success955:
        { 
          Fail1524:
          { 
            if(term.getTermType() != IStrategoTerm.STRING || !"#native".equals(((IStrategoString)term).stringValue()))
              break Fail1524;
            { 
              if(true)
                break Fail1523;
              if(true)
                break Success955;
            }
          }
          term = term102;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted71 extends Strategy 
  { 
    TermReference a_158;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1525:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1525;
        if(a_158.value == null)
          a_158.value = term.getSubterm(1);
        else
          if(a_158.value != term.getSubterm(1) && !a_158.value.match(term.getSubterm(1)))
            break Fail1525;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted70 extends Strategy 
  { 
    TermReference e_702;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1526:
      { 
        term = shrink_find_sorts_0_1.instance.invoke(context, term, e_702.value);
        if(term == null)
          break Fail1526;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted69 extends Strategy 
  { 
    TermReference u_158;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1527:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1527;
        if(u_158.value == null)
          u_158.value = term.getSubterm(1);
        else
          if(u_158.value != term.getSubterm(1) && !u_158.value.match(term.getSubterm(1)))
            break Fail1527;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted68 extends Strategy 
  { 
    TermReference a_160;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1528:
      { 
        term = shrink_find_sorts_0_1.instance.invoke(context, term, a_160.value);
        if(term == null)
          break Fail1528;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted66 extends Strategy 
  { 
    TermReference k_155;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1529:
      { 
        IStrategoTerm o_155 = null;
        IStrategoTerm q_155 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1529;
        o_155 = term.getSubterm(0);
        q_155 = term.getSubterm(1);
        IStrategoTerm term66 = term;
        Success956:
        { 
          Fail1530:
          { 
            if(k_155.value == null)
              break Fail1530;
            term = termFactory.makeTuple(q_155, k_155.value);
            term = eq_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1530;
            { 
              if(true)
                break Fail1529;
              if(true)
                break Success956;
            }
          }
          term = term66;
        }
        term = o_155;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted65 extends Strategy 
  { 
    TermReference n_153;

    TermReference s_153;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1531:
      { 
        term = remove_next_aux_0_2.instance.invoke(context, term, n_153.value, s_153.value);
        if(term == null)
          break Fail1531;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted58 extends Strategy 
  { 
    TermReference q_151;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1532:
      { 
        IStrategoTerm z_151 = null;
        IStrategoTerm a_152 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1532;
        z_151 = term.getSubterm(0);
        a_152 = term.getSubterm(1);
        IStrategoTerm term59 = term;
        Success957:
        { 
          Fail1533:
          { 
            if(q_151.value == null)
              break Fail1533;
            term = termFactory.makeTuple(a_152, q_151.value);
            term = eq_0_0.instance.invoke(context, term);
            if(term == null)
              break Fail1533;
            { 
              if(true)
                break Fail1532;
              if(true)
                break Success957;
            }
          }
          term = term59;
        }
        term = z_151;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted57 extends Strategy 
  { 
    public static final lifted57 instance = new lifted57();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1534:
      { 
        term = random_test.const93;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted56 extends Strategy 
  { 
    TermReference m_150;

    TermReference n_150;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1535:
      { 
        term = remove_next_iter_aux_0_2.instance.invoke(context, term, m_150.value, n_150.value);
        if(term == null)
          break Fail1535;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted54 extends Strategy 
  { 
    TermReference o_149;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1536:
      { 
        IStrategoTerm term51 = term;
        Success958:
        { 
          Fail1537:
          { 
            if(o_149.value == null)
              o_149.value = term;
            else
              if(o_149.value != term && !o_149.value.match(term))
                break Fail1537;
            { 
              if(true)
                break Fail1536;
              if(true)
                break Success958;
            }
          }
          term = term51;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted33 extends Strategy 
  { 
    TermReference l_149;

    TermReference m_149;

    TermReference n_149;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1538:
      { 
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1538;
        if(m_149.value == null)
          m_149.value = term.getSubterm(0);
        else
          if(m_149.value != term.getSubterm(0) && !m_149.value.match(term.getSubterm(0)))
            break Fail1538;
        if(l_149.value == null)
          l_149.value = term.getSubterm(1);
        else
          if(l_149.value != term.getSubterm(1) && !l_149.value.match(term.getSubterm(1)))
            break Fail1538;
        if(m_149.value == null || n_149.value == null)
          break Fail1538;
        term = termFactory.makeTuple(m_149.value, n_149.value);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted32 extends Strategy 
  { 
    TermReference o_149;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1539:
      { 
        IStrategoTerm term49 = term;
        Success959:
        { 
          Fail1540:
          { 
            if(o_149.value == null)
              o_149.value = term;
            else
              if(o_149.value != term && !o_149.value.match(term))
                break Fail1540;
            { 
              if(true)
                break Fail1539;
              if(true)
                break Success959;
            }
          }
          term = term49;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted30 extends Strategy 
  { 
    TermReference o_149;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1541:
      { 
        if(o_149.value == null)
          o_149.value = term;
        else
          if(o_149.value != term && !o_149.value.match(term))
            break Fail1541;
        if(o_149.value == null)
          break Fail1541;
        term = termFactory.makeTuple(o_149.value, random_test.const58);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted28 extends Strategy 
  { 
    public static final lifted28 instance = new lifted28();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1542:
      { 
        term = random_test.const87;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted27 extends Strategy 
  { 
    TermReference o_149;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1543:
      { 
        IStrategoTerm term44 = term;
        Success960:
        { 
          Fail1544:
          { 
            if(o_149.value == null)
              o_149.value = term;
            else
              if(o_149.value != term && !o_149.value.match(term))
                break Fail1544;
            { 
              if(true)
                break Fail1543;
              if(true)
                break Success960;
            }
          }
          term = term44;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted26 extends Strategy 
  { 
    TermReference o_149;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1545:
      { 
        term = shrink_make_empty_0_1.instance.invoke(context, term, o_149.value);
        if(term == null)
          break Fail1545;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted25 extends Strategy 
  { 
    public static final lifted25 instance = new lifted25();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1546:
      { 
        term = random_test.const57;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted24 extends Strategy 
  { 
    public static final lifted24 instance = new lifted24();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1547:
      { 
        term = random_test.const82;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted23 extends Strategy 
  { 
    TermReference p_146;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1548:
      { 
        IStrategoTerm term29 = term;
        Success961:
        { 
          Fail1549:
          { 
            if(p_146.value == null)
              p_146.value = term;
            else
              if(p_146.value != term && !p_146.value.match(term))
                break Fail1549;
            { 
              if(true)
                break Fail1548;
              if(true)
                break Success961;
            }
          }
          term = term29;
        }
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted22 extends Strategy 
  { 
    TermReference p_146;

    TermReference k_146;

    TermReference m_146;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1550:
      { 
        if(p_146.value == null)
          p_146.value = term;
        else
          if(p_146.value != term && !p_146.value.match(term))
            break Fail1550;
        if(k_146.value == null || m_146.value == null)
          break Fail1550;
        term = termFactory.makeTuple(k_146.value, m_146.value);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted21 extends Strategy 
  { 
    public static final lifted21 instance = new lifted21();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1551:
      { 
        term = random_test.const57;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted14 extends Strategy 
  { 
    public static final lifted14 instance = new lifted14();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1552:
      { 
        IStrategoTerm y_145 = null;
        IStrategoTerm z_145 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1552;
        y_145 = term.getSubterm(0);
        z_145 = term.getSubterm(1);
        IStrategoTerm term25 = term;
        Success962:
        { 
          Fail1553:
          { 
            term = z_145;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1553;
            { 
              if(true)
                break Fail1552;
              if(true)
                break Success962;
            }
          }
          term = term25;
        }
        term = termFactory.makeTuple(y_145, z_145);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted19 extends Strategy 
  { 
    public static final lifted19 instance = new lifted19();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1554:
      { 
        IStrategoTerm a_146 = null;
        IStrategoTerm b_146 = null;
        if(term.getTermType() != IStrategoTerm.TUPLE || term.getSubtermCount() != 2)
          break Fail1554;
        a_146 = term.getSubterm(0);
        b_146 = term.getSubterm(1);
        term = debug_0_0.instance.invoke(context, random_test.const56);
        if(term == null)
          break Fail1554;
        IStrategoTerm term24 = term;
        Success963:
        { 
          Fail1555:
          { 
            term = b_146;
            if(term.getTermType() != IStrategoTerm.LIST || !((IStrategoList)term).isEmpty())
              break Fail1555;
            { 
              if(true)
                break Fail1554;
              if(true)
                break Success963;
            }
          }
          term = term24;
        }
        term = termFactory.makeTuple(a_146, b_146);
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted12 extends Strategy 
  { 
    public static final lifted12 instance = new lifted12();

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      ITermFactory termFactory = context.getFactory();
      Fail1556:
      { 
        IStrategoTerm o_143 = null;
        IStrategoTerm q_143 = null;
        q_143 = term;
        term = concat_strings_0_0.instance.invoke(context, random_test.constCons4);
        if(term == null)
          break Fail1556;
        o_143 = term;
        term = q_143;
        term = termFactory.makeTuple(termFactory.annotateTerm(o_143, checkListAnnos(termFactory, random_test.constNil0)), term);
        term = conc_strings_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1556;
        if(true)
          return term;
      }
      return null;
    }
  }

  @SuppressWarnings("all") private static final class lifted9 extends Strategy 
  { 
    TermReference i_135;

    @Override public IStrategoTerm invoke(Context context, IStrategoTerm term)
    { 
      Fail1557:
      { 
        IStrategoTerm l_855 = null;
        IStrategoTerm n_855 = null;
        n_855 = term;
        if(i_135.value == null)
          break Fail1557;
        l_855 = i_135.value;
        term = parse_file_0_1.instance.invoke(context, n_855, l_855);
        if(term == null)
          break Fail1557;
        term = grammar_coverage_0_0.instance.invoke(context, term);
        if(term == null)
          break Fail1557;
        if(true)
          return term;
      }
      return null;
    }
  }

  public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext)
  { 
    new InteropRegisterer().registerLazy(context, compiledContext, InteropRegisterer.class.getClassLoader());
  }

  @SuppressWarnings("unused") public static class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer 
  { 
    @Override public void register(org.spoofax.interpreter.core.IContext context, Context compiledContext)
    { 
      register(context, compiledContext, context.getVarScope());
    }

    @Override public void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader)
    { 
      registerLazy(context, compiledContext, classLoader, context.getVarScope());
    }

    private void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope)
    { 
      compiledContext.registerComponent("random_test");
      random_test.init(compiledContext);
      varScope.addSVar("write_covered_constructors_0_0", new InteropSDefT(write_covered_constructors_0_0.instance, context));
      varScope.addSVar("grammar_coverage_0_0", new InteropSDefT(grammar_coverage_0_0.instance, context));
      varScope.addSVar("webdsl_check_grammar_measure_0_0", new InteropSDefT(webdsl_check_grammar_measure_0_0.instance, context));
      varScope.addSVar("get_all_files_0_0", new InteropSDefT(get_all_files_0_0.instance, context));
      varScope.addSVar("all_webdsl_check_folders_0_0", new InteropSDefT(all_webdsl_check_folders_0_0.instance, context));
      varScope.addSVar("shrink_test_0_0", new InteropSDefT(shrink_test_0_0.instance, context));
      varScope.addSVar("shrink_program_0_0", new InteropSDefT(shrink_program_0_0.instance, context));
      varScope.addSVar("try_shrinking_0_0", new InteropSDefT(try_shrinking_0_0.instance, context));
      varScope.addSVar("shrink_iter_0_0", new InteropSDefT(shrink_iter_0_0.instance, context));
      varScope.addSVar("run_and_match_error_0_0", new InteropSDefT(run_and_match_error_0_0.instance, context));
      varScope.addSVar("shrink_iter_stars_0_1", new InteropSDefT(shrink_iter_stars_0_1.instance, context));
      varScope.addSVar("remove_next_iter_0_2", new InteropSDefT(remove_next_iter_0_2.instance, context));
      varScope.addSVar("remove_next_iter_aux_0_2", new InteropSDefT(remove_next_iter_aux_0_2.instance, context));
      varScope.addSVar("remove_next_0_2", new InteropSDefT(remove_next_0_2.instance, context));
      varScope.addSVar("remove_next_aux_0_2", new InteropSDefT(remove_next_aux_0_2.instance, context));
      varScope.addSVar("shrink_make_empty_0_1", new InteropSDefT(shrink_make_empty_0_1.instance, context));
      varScope.addSVar("shrink_get_input_0_0", new InteropSDefT(shrink_get_input_0_0.instance, context));
      varScope.addSVar("shrink_find_sorts_0_1", new InteropSDefT(shrink_find_sorts_0_1.instance, context));
      varScope.addSVar("is_shrinkable_sort_0_0", new InteropSDefT(is_shrinkable_sort_0_0.instance, context));
      varScope.addSVar("is_or_leads_to_shrinkable_sort_0_0", new InteropSDefT(is_or_leads_to_shrinkable_sort_0_0.instance, context));
      varScope.addSVar("write_ns_0_0", new InteropSDefT(write_ns_0_0.instance, context));
      varScope.addSVar("create_key_0_0", new InteropSDefT(create_key_0_0.instance, context));
      varScope.addSVar("all_non_native_scopes_0_0", new InteropSDefT(all_non_native_scopes_0_0.instance, context));
      varScope.addSVar("extract_or_replace_identifier_0_3", new InteropSDefT(extract_or_replace_identifier_0_3.instance, context));
      varScope.addSVar("get_identifier_sort_0_3", new InteropSDefT(get_identifier_sort_0_3.instance, context));
      varScope.addSVar("get_direct_lex_sort_0_0", new InteropSDefT(get_direct_lex_sort_0_0.instance, context));
      varScope.addSVar("help_remove_cardinality_ops_0_0", new InteropSDefT(help_remove_cardinality_ops_0_0.instance, context));
      varScope.addSVar("replace_identifier_0_2", new InteropSDefT(replace_identifier_0_2.instance, context));
      varScope.addSVar("extract_identifier_0_1", new InteropSDefT(extract_identifier_0_1.instance, context));
      varScope.addSVar("update_NBL_scope_0_0", new InteropSDefT(update_$N$B$L_scope_0_0.instance, context));
      varScope.addSVar("write_current_scope_0_0", new InteropSDefT(write_current_scope_0_0.instance, context));
      varScope.addSVar("nbl_current_definitions_0_0", new InteropSDefT(nbl_current_definitions_0_0.instance, context));
      varScope.addSVar("get_values_from_current_scope_0_0", new InteropSDefT(get_values_from_current_scope_0_0.instance, context));
      varScope.addSVar("create_full_scope_0_2", new InteropSDefT(create_full_scope_0_2.instance, context));
      varScope.addSVar("get_NBL_referrals_0_0", new InteropSDefT(get_$N$B$L_referrals_0_0.instance, context));
      varScope.addSVar("get_nbl_references_0_0", new InteropSDefT(get_nbl_references_0_0.instance, context));
      varScope.addSVar("use_nbl_referral_0_4", new InteropSDefT(use_nbl_referral_0_4.instance, context));
      varScope.addSVar("random_generate_referral_0_5", new InteropSDefT(random_generate_referral_0_5.instance, context));
      varScope.addSVar("random_generate_referral_body_aux_0_6", new InteropSDefT(random_generate_referral_body_aux_0_6.instance, context));
      varScope.addSVar("inject_NBL_definition_creation_0_4", new InteropSDefT(inject_$N$B$L_definition_creation_0_4.instance, context));
      varScope.addSVar("randomly_pick_a_scope_for_NBL_injection_0_0", new InteropSDefT(randomly_pick_a_scope_for_$N$B$L_injection_0_0.instance, context));
      varScope.addSVar("create_pool_of_all_scopes_0_0", new InteropSDefT(create_pool_of_all_scopes_0_0.instance, context));
      varScope.addSVar("non_injectable_scope_0_0", new InteropSDefT(non_injectable_scope_0_0.instance, context));
      varScope.addSVar("write_NBL_injection_0_0", new InteropSDefT(write_$N$B$L_injection_0_0.instance, context));
      varScope.addSVar("inject_NBL_definitions_0_1", new InteropSDefT(inject_$N$B$L_definitions_0_1.instance, context));
      varScope.addSVar("read_and_search_tree_0_3", new InteropSDefT(read_and_search_tree_0_3.instance, context));
      varScope.addSVar("update_scopes_0_0", new InteropSDefT(update_scopes_0_0.instance, context));
      varScope.addSVar("inject_NBL_definition_0_3", new InteropSDefT(inject_$N$B$L_definition_0_3.instance, context));
      varScope.addSVar("inject_alternative_0_2", new InteropSDefT(inject_alternative_0_2.instance, context));
      varScope.addSVar("inject_alternative_aux_0_3", new InteropSDefT(inject_alternative_aux_0_3.instance, context));
      varScope.addSVar("build_alternative_0_2", new InteropSDefT(build_alternative_0_2.instance, context));
      varScope.addSVar("construct_result_0_2", new InteropSDefT(construct_result_0_2.instance, context));
      varScope.addSVar("build_definition_body_0_1", new InteropSDefT(build_definition_body_0_1.instance, context));
      varScope.addSVar("build_alternative_body_0_6", new InteropSDefT(build_alternative_body_0_6.instance, context));
      varScope.addSVar("randomly_pick_alternative_0_1", new InteropSDefT(randomly_pick_alternative_0_1.instance, context));
      varScope.addSVar("get_injections_per_iter_0_3", new InteropSDefT(get_injections_per_iter_0_3.instance, context));
      varScope.addSVar("is_injectable_sort_for_0_3", new InteropSDefT(is_injectable_sort_for_0_3.instance, context));
      varScope.addSVar("check_if_parent_sorts_coincede_0_3", new InteropSDefT(check_if_parent_sorts_coincede_0_3.instance, context));
      varScope.addSVar("is_itersort_in_SDF_0_0", new InteropSDefT(is_itersort_in_$S$D$F_0_0.instance, context));
      varScope.addSVar("SDF_sort_0_0", new InteropSDefT($S$D$F_sort_0_0.instance, context));
      varScope.addSVar("is_or_leads_to_injectable_sort_0_0", new InteropSDefT(is_or_leads_to_injectable_sort_0_0.instance, context));
      varScope.addSVar("has_productions_with_no_constructors_0_0", new InteropSDefT(has_productions_with_no_constructors_0_0.instance, context));
      varScope.addSVar("is_injectable_sort_0_0", new InteropSDefT(is_injectable_sort_0_0.instance, context));
      varScope.addSVar("term_scopes_namespace_0_1", new InteropSDefT(term_scopes_namespace_0_1.instance, context));
      varScope.addSVar("match_error_and_fix_0_2", new InteropSDefT(match_error_and_fix_0_2.instance, context));
      varScope.addSVar("fix_0_3", new InteropSDefT(fix_0_3.instance, context));
      varScope.addSVar("fixEach_0_3", new InteropSDefT(fix$Each_0_3.instance, context));
      varScope.addSVar("change_fix_0_2", new InteropSDefT(change_fix_0_2.instance, context));
      varScope.addSVar("remove_one_0_2", new InteropSDefT(remove_one_0_2.instance, context));
      varScope.addSVar("remove_one_from_list_0_2", new InteropSDefT(remove_one_from_list_0_2.instance, context));
      varScope.addSVar("process_location_0_3", new InteropSDefT(process_location_0_3.instance, context));
      varScope.addSVar("translate_fix_0_1", new InteropSDefT(translate_fix_0_1.instance, context));
      varScope.addSVar("fix_program_0_3", new InteropSDefT(fix_program_0_3.instance, context));
      varScope.addSVar("match_error_node_0_0", new InteropSDefT(match_error_node_0_0.instance, context));
      varScope.addSVar("process_errorMatchCons_0_3", new InteropSDefT(process_error$Match$Cons_0_3.instance, context));
      varScope.addSVar("process_error_node_0_2", new InteropSDefT(process_error_node_0_2.instance, context));
      varScope.addSVar("match_error_0_0", new InteropSDefT(match_error_0_0.instance, context));
      varScope.addSVar("match_error_rec_0_2", new InteropSDefT(match_error_rec_0_2.instance, context));
      varScope.addSVar("match_error_rec2_0_3", new InteropSDefT(match_error_rec2_0_3.instance, context));
      varScope.addSVar("extract_settings_0_0", new InteropSDefT(extract_settings_0_0.instance, context));
      varScope.addSVar("extractS_0_0_fragment_0", new InteropSDefT(extract$S_0_0_fragment_0.instance, context));
      varScope.addSVar("extractS_0_0", new InteropSDefT(extract$S_0_0.instance, context));
      varScope.addSVar("build_xeger_0_0_fragment_0", new InteropSDefT(build_xeger_0_0_fragment_0.instance, context));
      varScope.addSVar("build_xeger_0_0", new InteropSDefT(build_xeger_0_0.instance, context));
      varScope.addSVar("help_xeger_iter_0_0_fragment_0", new InteropSDefT(help_xeger_iter_0_0_fragment_0.instance, context));
      varScope.addSVar("help_xeger_iter_0_0", new InteropSDefT(help_xeger_iter_0_0.instance, context));
      varScope.addSVar("escape_lit_string_0_0", new InteropSDefT(escape_lit_string_0_0.instance, context));
      varScope.addSVar("escape_regex_operators_0_0", new InteropSDefT(escape_regex_operators_0_0.instance, context));
      varScope.addSVar("build_xeger_sort_0_0", new InteropSDefT(build_xeger_sort_0_0.instance, context));
      varScope.addSVar("special_string_concat_0_0", new InteropSDefT(special_string_concat_0_0.instance, context));
      varScope.addSVar("generate_terminal_0_0", new InteropSDefT(generate_terminal_0_0.instance, context));
      varScope.addSVar("use_xeger_0_0", new InteropSDefT(use_xeger_0_0.instance, context));
      varScope.addSVar("numberXeger_1_0", new InteropSDefT(number$Xeger_1_0.instance, context));
      varScope.addSVar("pick_a_random_terminal_0_0", new InteropSDefT(pick_a_random_terminal_0_0.instance, context));
      varScope.addSVar("pre_generate_terminals_0_1", new InteropSDefT(pre_generate_terminals_0_1.instance, context));
      varScope.addSVar("lex_to_dr_0_1", new InteropSDefT(lex_to_dr_0_1.instance, context));
      varScope.addSVar("write_lex_to_dr_0_0", new InteropSDefT(write_lex_to_dr_0_0.instance, context));
      varScope.addSVar("pick_prod_lower_level_0_0", new InteropSDefT(pick_prod_lower_level_0_0.instance, context));
      varScope.addSVar("is_prohibited_0_2", new InteropSDefT(is_prohibited_0_2.instance, context));
      varScope.addSVar("check_priorities_0_0", new InteropSDefT(check_priorities_0_0.instance, context));
      varScope.addSVar("distribute_rejections_0_3", new InteropSDefT(distribute_rejections_0_3.instance, context));
      varScope.addSVar("generate_random_maxima_0_1", new InteropSDefT(generate_random_maxima_0_1.instance, context));
      varScope.addSVar("generate_random_percentages_rec_0_0", new InteropSDefT(generate_random_percentages_rec_0_0.instance, context));
      varScope.addSVar("generate_program_0_6", new InteropSDefT(generate_program_0_6.instance, context));
      varScope.addSVar("help_strategy_0_6", new InteropSDefT(help_strategy_0_6.instance, context));
      varScope.addSVar("generate_term_0_0", new InteropSDefT(generate_term_0_0.instance, context));
      varScope.addSVar("is_specialASTTerm_0_5", new InteropSDefT(is_special$A$S$T$Term_0_5.instance, context));
      varScope.addSVar("update_cons_coverage_0_0", new InteropSDefT(update_cons_coverage_0_0.instance, context));
      varScope.addSVar("write_CoveredCons_0_0", new InteropSDefT(write_$Covered$Cons_0_0.instance, context));
      varScope.addSVar("get_and_distribute_rejections_0_0", new InteropSDefT(get_and_distribute_rejections_0_0.instance, context));
      varScope.addSVar("build_weight_list_0_0", new InteropSDefT(build_weight_list_0_0.instance, context));
      varScope.addSVar("choose_alternative_0_1", new InteropSDefT(choose_alternative_0_1.instance, context));
      varScope.addSVar("get_SDF_constructor_0_0", new InteropSDefT(get_$S$D$F_constructor_0_0.instance, context));
      varScope.addSVar("process_ASTTerm_0_5", new InteropSDefT(process_$A$S$T$Term_0_5.instance, context));
      varScope.addSVar("write_rule_0_5", new InteropSDefT(write_rule_0_5.instance, context));
      varScope.addSVar("write_n_rule_0_4", new InteropSDefT(write_n_rule_0_4.instance, context));
      varScope.addSVar("filter_prods_0_0", new InteropSDefT(filter_prods_0_0.instance, context));
      varScope.addSVar("filter_prod_help_0_0", new InteropSDefT(filter_prod_help_0_0.instance, context));
      varScope.addSVar("main_0_0", new InteropSDefT(main_0_0.instance, context));
      varScope.addSVar("switch_input_0_0", new InteropSDefT(switch_input_0_0.instance, context));
      varScope.addSVar("write_shrink_sort_0_0", new InteropSDefT(write_shrink_sort_0_0.instance, context));
      varScope.addSVar("parse_settings_0_0", new InteropSDefT(parse_settings_0_0.instance, context));
      varScope.addSVar("parse_pp_0_0", new InteropSDefT(parse_pp_0_0.instance, context));
      varScope.addSVar("generate_random_tests_0_0", new InteropSDefT(generate_random_tests_0_0.instance, context));
      varScope.addSVar("generate_random_test_0_1", new InteropSDefT(generate_random_test_0_1.instance, context));
      varScope.addSVar("check_results_0_11", new InteropSDefT(check_results_0_11.instance, context));
      varScope.addSVar("print_parse_cycle_0_3", new InteropSDefT(print_parse_cycle_0_3.instance, context));
      varScope.addSVar("write_test_0_5", new InteropSDefT(write_test_0_5.instance, context));
      varScope.addSVar("PROJECTPATH_0_0", new InteropSDefT($P$R$O$J$E$C$T$P$A$T$H_0_0.instance, context));
      varScope.addSVar("CACHEPATHS_0_0", new InteropSDefT($C$A$C$H$E$P$A$T$H$S_0_0.instance, context));
      varScope.addSVar("pp_program_0_0", new InteropSDefT(pp_program_0_0.instance, context));
      varScope.addSVar("numberItems_0_0", new InteropSDefT(number$Items_0_0.instance, context));
      varScope.addSVar("check_for_amb_0_1", new InteropSDefT(check_for_amb_0_1.instance, context));
      varScope.addSVar("pp_amb_0_0", new InteropSDefT(pp_amb_0_0.instance, context));
      varScope.addSVar("randomly_pick_from_list_0_0", new InteropSDefT(randomly_pick_from_list_0_0.instance, context));
      varScope.addSVar("get_item_from_list_0_1", new InteropSDefT(get_item_from_list_0_1.instance, context));
      varScope.addSVar("get_item_from_list_loopc_0_0", new InteropSDefT(get_item_from_list_loopc_0_0.instance, context));
      varScope.addSVar("write_loop_iterator_0_0", new InteropSDefT(write_loop_iterator_0_0.instance, context));
      varScope.addSVar("read_language_0_0", new InteropSDefT(read_language_0_0.instance, context));
      varScope.addSVar("clear_fix_runtag_0_0", new InteropSDefT(clear_fix_runtag_0_0.instance, context));
      varScope.addSVar("inc_fix_runtag_0_0", new InteropSDefT(inc_fix_runtag_0_0.instance, context));
      varScope.addSVar("write_FixRuntag_0_0", new InteropSDefT(write_$Fix$Runtag_0_0.instance, context));
      varScope.addSVar("find_start_symbols_0_0", new InteropSDefT(find_start_symbols_0_0.instance, context));
      varScope.addSVar("read_sdf_0_0", new InteropSDefT(read_sdf_0_0.instance, context));
      varScope.addSVar("read_priorities_0_0", new InteropSDefT(read_priorities_0_0.instance, context));
      varScope.addSVar("propagate_priorities_0_0", new InteropSDefT(propagate_priorities_0_0.instance, context));
      varScope.addSVar("propagate_priorities_rec_0_0", new InteropSDefT(propagate_priorities_rec_0_0.instance, context));
      varScope.addSVar("write_Priority_rule_0_0", new InteropSDefT(write_$Priority_rule_0_0.instance, context));
      varScope.addSVar("read_priority_0_0", new InteropSDefT(read_priority_0_0.instance, context));
      varScope.addSVar("topdown_read_sdf_0_2", new InteropSDefT(topdown_read_sdf_0_2.instance, context));
      varScope.addSVar("param_rewrite_sdf_0_2", new InteropSDefT(param_rewrite_sdf_0_2.instance, context));
      varScope.addSVar("read_imports_0_1", new InteropSDefT(read_imports_0_1.instance, context));
      varScope.addSVar("rec_rename_module_0_1", new InteropSDefT(rec_rename_module_0_1.instance, context));
      varScope.addSVar("rename_module_0_1", new InteropSDefT(rename_module_0_1.instance, context));
      varScope.addSVar("rec_replace_params_0_1", new InteropSDefT(rec_replace_params_0_1.instance, context));
      varScope.addSVar("replace_param_0_2", new InteropSDefT(replace_param_0_2.instance, context));
      varScope.addSVar("read_prod_0_0", new InteropSDefT(read_prod_0_0.instance, context));
      varScope.addSVar("remove_cflex_sugar_0_0", new InteropSDefT(remove_cflex_sugar_0_0.instance, context));
      varScope.addSVar("declare_lex_0_0", new InteropSDefT(declare_lex_0_0.instance, context));
      varScope.addSVar("check_lex_attrs_0_2", new InteropSDefT(check_lex_attrs_0_2.instance, context));
      varScope.addSVar("declare_cf_0_0", new InteropSDefT(declare_cf_0_0.instance, context));
      varScope.addSVar("record_inverse_0_0", new InteropSDefT(record_inverse_0_0.instance, context));
      varScope.addSVar("extract_sorts_0_0", new InteropSDefT(extract_sorts_0_0.instance, context));
      varScope.addSVar("check_cf_attrs_0_2", new InteropSDefT(check_cf_attrs_0_2.instance, context));
      varScope.addSVar("find_terminal_paths_0_1", new InteropSDefT(find_terminal_paths_0_1.instance, context));
      varScope.addSVar("recognize_sort_0_0", new InteropSDefT(recognize_sort_0_0.instance, context));
      varScope.addSVar("change_param_sort_0_0", new InteropSDefT(change_param_sort_0_0.instance, context));
      varScope.addSVar("find_terminal_path_0_1", new InteropSDefT(find_terminal_path_0_1.instance, context));
      varScope.addSVar("is_terminal_path_0_2", new InteropSDefT(is_terminal_path_0_2.instance, context));
      varScope.addSVar("GreaterTerminalLevel_0_0", new InteropSDefT($Greater$Terminal$Level_0_0.instance, context));
      varScope.addSVar("get_SpecialASTTerm_cons_0_2", new InteropSDefT(get_$Special$A$S$T$Term_cons_0_2.instance, context));
      varScope.addSVar("get_SpecialASTTerm_cons_rec_0_2", new InteropSDefT(get_$Special$A$S$T$Term_cons_rec_0_2.instance, context));
      varScope.addSVar("NBLType_0_0", new InteropSDefT($N$B$L$Type_0_0.instance, context));
      varScope.addSVar("all_keys_CoveredCons_0_0", new InteropSDefT(all_keys_$Covered$Cons_0_0.instance, context));
      varScope.addSVar("Language_0_0", new InteropSDefT($Language_0_0.instance, context));
      varScope.addSVar("aux_Language_0_1", new InteropSDefT(aux_$Language_0_1.instance, context));
      varScope.addSVar("ShrinkError_0_0", new InteropSDefT($Shrink$Error_0_0.instance, context));
      varScope.addSVar("aux_ShrinkError_0_1", new InteropSDefT(aux_$Shrink$Error_0_1.instance, context));
      varScope.addSVar("bagof_NBLKey2Scope_0_0", new InteropSDefT(bagof_$N$B$L$Key2$Scope_0_0.instance, context));
      varScope.addSVar("NBLKey2Scope_0_0", new InteropSDefT($N$B$L$Key2$Scope_0_0.instance, context));
      varScope.addSVar("aux_NBLKey2Scope_0_2", new InteropSDefT(aux_$N$B$L$Key2$Scope_0_2.instance, context));
      varScope.addSVar("bagof_NBLKey2Refer_0_0", new InteropSDefT(bagof_$N$B$L$Key2$Refer_0_0.instance, context));
      varScope.addSVar("aux_NBLKey2Refer_0_2", new InteropSDefT(aux_$N$B$L$Key2$Refer_0_2.instance, context));
      varScope.addSVar("bagof_NBLNamespace2DefKey_0_0", new InteropSDefT(bagof_$N$B$L$Namespace2$Def$Key_0_0.instance, context));
      varScope.addSVar("aux_NBLNamespace2DefKey_0_2", new InteropSDefT(aux_$N$B$L$Namespace2$Def$Key_0_2.instance, context));
      varScope.addSVar("NBLKey2Define_0_0", new InteropSDefT($N$B$L$Key2$Define_0_0.instance, context));
      varScope.addSVar("aux_NBLKey2Define_0_2", new InteropSDefT(aux_$N$B$L$Key2$Define_0_2.instance, context));
      varScope.addSVar("bagof_DefineParentSorts_0_0", new InteropSDefT(bagof_$Define$Parent$Sorts_0_0.instance, context));
      varScope.addSVar("aux_DefineParentSorts_0_2", new InteropSDefT(aux_$Define$Parent$Sorts_0_2.instance, context));
      varScope.addSVar("bagof_Namespace_0_0", new InteropSDefT(bagof_$Namespace_0_0.instance, context));
      varScope.addSVar("aux_Namespace_0_3", new InteropSDefT(aux_$Namespace_0_3.instance, context));
      varScope.addSVar("Scope2Key_0_0", new InteropSDefT($Scope2$Key_0_0.instance, context));
      varScope.addSVar("aux_Scope2Key_0_2", new InteropSDefT(aux_$Scope2$Key_0_2.instance, context));
      varScope.addSVar("bagof_CurrentScope_0_0", new InteropSDefT(bagof_$Current$Scope_0_0.instance, context));
      varScope.addSVar("CurrentScope_0_0", new InteropSDefT($Current$Scope_0_0.instance, context));
      varScope.addSVar("aux_CurrentScope_0_2", new InteropSDefT(aux_$Current$Scope_0_2.instance, context));
      varScope.addSVar("all_keys_NBLInjection_0_0", new InteropSDefT(all_keys_$N$B$L$Injection_0_0.instance, context));
      varScope.addSVar("ErrorMatchParam_0_0", new InteropSDefT($Error$Match$Param_0_0.instance, context));
      varScope.addSVar("aux_ErrorMatchParam_0_3", new InteropSDefT(aux_$Error$Match$Param_0_3.instance, context));
      varScope.addSVar("MaxCount_0_0", new InteropSDefT($Max$Count_0_0.instance, context));
      varScope.addSVar("aux_MaxCount_0_1", new InteropSDefT(aux_$Max$Count_0_1.instance, context));
      varScope.addSVar("MaxIter_0_0", new InteropSDefT($Max$Iter_0_0.instance, context));
      varScope.addSVar("aux_MaxIter_0_1", new InteropSDefT(aux_$Max$Iter_0_1.instance, context));
      varScope.addSVar("MaxRec_0_0", new InteropSDefT($Max$Rec_0_0.instance, context));
      varScope.addSVar("aux_MaxRec_0_1", new InteropSDefT(aux_$Max$Rec_0_1.instance, context));
      varScope.addSVar("ErrorSourceNodePattern_0_0", new InteropSDefT($Error$Source$Node$Pattern_0_0.instance, context));
      varScope.addSVar("aux_ErrorSourceNodePattern_0_2", new InteropSDefT(aux_$Error$Source$Node$Pattern_0_2.instance, context));
      varScope.addSVar("ErrorCorrectingAction_0_0", new InteropSDefT($Error$Correcting$Action_0_0.instance, context));
      varScope.addSVar("aux_ErrorCorrectingAction_0_2", new InteropSDefT(aux_$Error$Correcting$Action_0_2.instance, context));
      varScope.addSVar("all_keys_ErrorMessagePattern_0_0", new InteropSDefT(all_keys_$Error$Message$Pattern_0_0.instance, context));
      varScope.addSVar("ErrorMessagePattern_0_0", new InteropSDefT($Error$Message$Pattern_0_0.instance, context));
      varScope.addSVar("aux_ErrorMessagePattern_0_2", new InteropSDefT(aux_$Error$Message$Pattern_0_2.instance, context));
      varScope.addSVar("TerminalPoolSize_0_0", new InteropSDefT($Terminal$Pool$Size_0_0.instance, context));
      varScope.addSVar("aux_TerminalPoolSize_0_1", new InteropSDefT(aux_$Terminal$Pool$Size_0_1.instance, context));
      varScope.addSVar("NumberOfRuns_0_0", new InteropSDefT($Number$Of$Runs_0_0.instance, context));
      varScope.addSVar("aux_NumberOfRuns_0_1", new InteropSDefT(aux_$Number$Of$Runs_0_1.instance, context));
      varScope.addSVar("IgnoreSorts_0_0", new InteropSDefT($Ignore$Sorts_0_0.instance, context));
      varScope.addSVar("aux_IgnoreSorts_0_2", new InteropSDefT(aux_$Ignore$Sorts_0_2.instance, context));
      varScope.addSVar("XegerCount_0_0", new InteropSDefT($Xeger$Count_0_0.instance, context));
      varScope.addSVar("aux_XegerCount_0_1", new InteropSDefT(aux_$Xeger$Count_0_1.instance, context));
      varScope.addSVar("bagof_Terminals_0_0", new InteropSDefT(bagof_$Terminals_0_0.instance, context));
      varScope.addSVar("aux_Terminals_0_2", new InteropSDefT(aux_$Terminals_0_2.instance, context));
      varScope.addSVar("lex_to_dr_Count_0_0", new InteropSDefT(lex_to_dr_$Count_0_0.instance, context));
      varScope.addSVar("aux_lex_to_dr_Count_0_1", new InteropSDefT(aux_lex_to_dr_$Count_0_1.instance, context));
      varScope.addSVar("ConsCount_0_0", new InteropSDefT($Cons$Count_0_0.instance, context));
      varScope.addSVar("aux_ConsCount_0_1", new InteropSDefT(aux_$Cons$Count_0_1.instance, context));
      varScope.addSVar("ProdWeight_0_0", new InteropSDefT($Prod$Weight_0_0.instance, context));
      varScope.addSVar("aux_ProdWeight_0_1", new InteropSDefT(aux_$Prod$Weight_0_1.instance, context));
      varScope.addSVar("bagof_ShrinkSort_0_0", new InteropSDefT(bagof_$Shrink$Sort_0_0.instance, context));
      varScope.addSVar("aux_ShrinkSort_0_2", new InteropSDefT(aux_$Shrink$Sort_0_2.instance, context));
      varScope.addSVar("ChanceOfFailure_0_0", new InteropSDefT($Chance$Of$Failure_0_0.instance, context));
      varScope.addSVar("aux_ChanceOfFailure_0_1", new InteropSDefT(aux_$Chance$Of$Failure_0_1.instance, context));
      varScope.addSVar("NonInjectable_0_0", new InteropSDefT($Non$Injectable_0_0.instance, context));
      varScope.addSVar("aux_NonInjectable_0_6", new InteropSDefT(aux_$Non$Injectable_0_6.instance, context));
      varScope.addSVar("ItemCount_0_0", new InteropSDefT($Item$Count_0_0.instance, context));
      varScope.addSVar("aux_ItemCount_0_1", new InteropSDefT(aux_$Item$Count_0_1.instance, context));
      varScope.addSVar("LoopIterator_0_0", new InteropSDefT($Loop$Iterator_0_0.instance, context));
      varScope.addSVar("aux_LoopIterator_0_1", new InteropSDefT(aux_$Loop$Iterator_0_1.instance, context));
      varScope.addSVar("FixRuntag_0_0", new InteropSDefT($Fix$Runtag_0_0.instance, context));
      varScope.addSVar("aux_FixRuntag_0_1", new InteropSDefT(aux_$Fix$Runtag_0_1.instance, context));
      varScope.addSVar("all_keys_SDFStart_0_0", new InteropSDefT(all_keys_$S$D$F$Start_0_0.instance, context));
      varScope.addSVar("AllConsCount_0_0", new InteropSDefT($All$Cons$Count_0_0.instance, context));
      varScope.addSVar("aux_AllConsCount_0_1", new InteropSDefT(aux_$All$Cons$Count_0_1.instance, context));
      varScope.addSVar("all_keys_Priority_0_0", new InteropSDefT(all_keys_$Priority_0_0.instance, context));
      varScope.addSVar("bagof_Priority_0_0", new InteropSDefT(bagof_$Priority_0_0.instance, context));
      varScope.addSVar("aux_Priority_0_4", new InteropSDefT(aux_$Priority_0_4.instance, context));
      varScope.addSVar("ModulesRead_0_0", new InteropSDefT($Modules$Read_0_0.instance, context));
      varScope.addSVar("aux_ModulesRead_0_2", new InteropSDefT(aux_$Modules$Read_0_2.instance, context));
      varScope.addSVar("all_keys_LexSorts_0_0", new InteropSDefT(all_keys_$Lex$Sorts_0_0.instance, context));
      varScope.addSVar("bagof_LexSorts_0_0", new InteropSDefT(bagof_$Lex$Sorts_0_0.instance, context));
      varScope.addSVar("LexSorts_0_0", new InteropSDefT($Lex$Sorts_0_0.instance, context));
      varScope.addSVar("aux_LexSorts_0_2", new InteropSDefT(aux_$Lex$Sorts_0_2.instance, context));
      varScope.addSVar("ConsLex_0_0", new InteropSDefT($Cons$Lex_0_0.instance, context));
      varScope.addSVar("aux_ConsLex_0_2", new InteropSDefT(aux_$Cons$Lex_0_2.instance, context));
      varScope.addSVar("LexCons_0_0", new InteropSDefT($Lex$Cons_0_0.instance, context));
      varScope.addSVar("aux_LexCons_0_3", new InteropSDefT(aux_$Lex$Cons_0_3.instance, context));
      varScope.addSVar("bagof_LexReject_0_0", new InteropSDefT(bagof_$Lex$Reject_0_0.instance, context));
      varScope.addSVar("aux_LexReject_0_2", new InteropSDefT(aux_$Lex$Reject_0_2.instance, context));
      varScope.addSVar("all_keys_CFSorts_0_0", new InteropSDefT(all_keys_$C$F$Sorts_0_0.instance, context));
      varScope.addSVar("bagof_CFSorts_0_0", new InteropSDefT(bagof_$C$F$Sorts_0_0.instance, context));
      varScope.addSVar("CFSorts_0_0", new InteropSDefT($C$F$Sorts_0_0.instance, context));
      varScope.addSVar("aux_CFSorts_0_2", new InteropSDefT(aux_$C$F$Sorts_0_2.instance, context));
      varScope.addSVar("all_keys_ConsKey_0_0", new InteropSDefT(all_keys_$Cons$Key_0_0.instance, context));
      varScope.addSVar("ConsKey_0_0", new InteropSDefT($Cons$Key_0_0.instance, context));
      varScope.addSVar("aux_ConsKey_0_2", new InteropSDefT(aux_$Cons$Key_0_2.instance, context));
      varScope.addSVar("bagof_ConsCF_0_0", new InteropSDefT(bagof_$Cons$C$F_0_0.instance, context));
      varScope.addSVar("ConsCF_0_0", new InteropSDefT($Cons$C$F_0_0.instance, context));
      varScope.addSVar("aux_ConsCF_0_2", new InteropSDefT(aux_$Cons$C$F_0_2.instance, context));
      varScope.addSVar("CFCons_0_0", new InteropSDefT($C$F$Cons_0_0.instance, context));
      varScope.addSVar("aux_CFCons_0_3", new InteropSDefT(aux_$C$F$Cons_0_3.instance, context));
      varScope.addSVar("SpecialASTTerm_0_0", new InteropSDefT($Special$A$S$T$Term_0_0.instance, context));
      varScope.addSVar("aux_SpecialASTTerm_0_3", new InteropSDefT(aux_$Special$A$S$T$Term_0_3.instance, context));
      varScope.addSVar("bagof_TerminalPath_0_0", new InteropSDefT(bagof_$Terminal$Path_0_0.instance, context));
      varScope.addSVar("TerminalPath_0_0", new InteropSDefT($Terminal$Path_0_0.instance, context));
      varScope.addSVar("aux_TerminalPath_0_2", new InteropSDefT(aux_$Terminal$Path_0_2.instance, context));
    }

    private void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope)
    { 
      compiledContext.registerComponent("random_test");
      random_test.init(compiledContext);
      varScope.addSVar("write_covered_constructors_0_0", new InteropSDefT(classLoader, "random_test$write_covered_constructors_0_0", context));
      varScope.addSVar("grammar_coverage_0_0", new InteropSDefT(classLoader, "random_test$grammar_coverage_0_0", context));
      varScope.addSVar("webdsl_check_grammar_measure_0_0", new InteropSDefT(classLoader, "random_test$webdsl_check_grammar_measure_0_0", context));
      varScope.addSVar("get_all_files_0_0", new InteropSDefT(classLoader, "random_test$get_all_files_0_0", context));
      varScope.addSVar("all_webdsl_check_folders_0_0", new InteropSDefT(classLoader, "random_test$all_webdsl_check_folders_0_0", context));
      varScope.addSVar("shrink_test_0_0", new InteropSDefT(classLoader, "random_test$shrink_test_0_0", context));
      varScope.addSVar("shrink_program_0_0", new InteropSDefT(classLoader, "random_test$shrink_program_0_0", context));
      varScope.addSVar("try_shrinking_0_0", new InteropSDefT(classLoader, "random_test$try_shrinking_0_0", context));
      varScope.addSVar("shrink_iter_0_0", new InteropSDefT(classLoader, "random_test$shrink_iter_0_0", context));
      varScope.addSVar("run_and_match_error_0_0", new InteropSDefT(classLoader, "random_test$run_and_match_error_0_0", context));
      varScope.addSVar("shrink_iter_stars_0_1", new InteropSDefT(classLoader, "random_test$shrink_iter_stars_0_1", context));
      varScope.addSVar("remove_next_iter_0_2", new InteropSDefT(classLoader, "random_test$remove_next_iter_0_2", context));
      varScope.addSVar("remove_next_iter_aux_0_2", new InteropSDefT(classLoader, "random_test$remove_next_iter_aux_0_2", context));
      varScope.addSVar("remove_next_0_2", new InteropSDefT(classLoader, "random_test$remove_next_0_2", context));
      varScope.addSVar("remove_next_aux_0_2", new InteropSDefT(classLoader, "random_test$remove_next_aux_0_2", context));
      varScope.addSVar("shrink_make_empty_0_1", new InteropSDefT(classLoader, "random_test$shrink_make_empty_0_1", context));
      varScope.addSVar("shrink_get_input_0_0", new InteropSDefT(classLoader, "random_test$shrink_get_input_0_0", context));
      varScope.addSVar("shrink_find_sorts_0_1", new InteropSDefT(classLoader, "random_test$shrink_find_sorts_0_1", context));
      varScope.addSVar("is_shrinkable_sort_0_0", new InteropSDefT(classLoader, "random_test$is_shrinkable_sort_0_0", context));
      varScope.addSVar("is_or_leads_to_shrinkable_sort_0_0", new InteropSDefT(classLoader, "random_test$is_or_leads_to_shrinkable_sort_0_0", context));
      varScope.addSVar("write_ns_0_0", new InteropSDefT(classLoader, "random_test$write_ns_0_0", context));
      varScope.addSVar("create_key_0_0", new InteropSDefT(classLoader, "random_test$create_key_0_0", context));
      varScope.addSVar("all_non_native_scopes_0_0", new InteropSDefT(classLoader, "random_test$all_non_native_scopes_0_0", context));
      varScope.addSVar("extract_or_replace_identifier_0_3", new InteropSDefT(classLoader, "random_test$extract_or_replace_identifier_0_3", context));
      varScope.addSVar("get_identifier_sort_0_3", new InteropSDefT(classLoader, "random_test$get_identifier_sort_0_3", context));
      varScope.addSVar("get_direct_lex_sort_0_0", new InteropSDefT(classLoader, "random_test$get_direct_lex_sort_0_0", context));
      varScope.addSVar("help_remove_cardinality_ops_0_0", new InteropSDefT(classLoader, "random_test$help_remove_cardinality_ops_0_0", context));
      varScope.addSVar("replace_identifier_0_2", new InteropSDefT(classLoader, "random_test$replace_identifier_0_2", context));
      varScope.addSVar("extract_identifier_0_1", new InteropSDefT(classLoader, "random_test$extract_identifier_0_1", context));
      varScope.addSVar("update_NBL_scope_0_0", new InteropSDefT(classLoader, "random_test$update_$N$B$L_scope_0_0", context));
      varScope.addSVar("write_current_scope_0_0", new InteropSDefT(classLoader, "random_test$write_current_scope_0_0", context));
      varScope.addSVar("nbl_current_definitions_0_0", new InteropSDefT(classLoader, "random_test$nbl_current_definitions_0_0", context));
      varScope.addSVar("get_values_from_current_scope_0_0", new InteropSDefT(classLoader, "random_test$get_values_from_current_scope_0_0", context));
      varScope.addSVar("create_full_scope_0_2", new InteropSDefT(classLoader, "random_test$create_full_scope_0_2", context));
      varScope.addSVar("get_NBL_referrals_0_0", new InteropSDefT(classLoader, "random_test$get_$N$B$L_referrals_0_0", context));
      varScope.addSVar("get_nbl_references_0_0", new InteropSDefT(classLoader, "random_test$get_nbl_references_0_0", context));
      varScope.addSVar("use_nbl_referral_0_4", new InteropSDefT(classLoader, "random_test$use_nbl_referral_0_4", context));
      varScope.addSVar("random_generate_referral_0_5", new InteropSDefT(classLoader, "random_test$random_generate_referral_0_5", context));
      varScope.addSVar("random_generate_referral_body_aux_0_6", new InteropSDefT(classLoader, "random_test$random_generate_referral_body_aux_0_6", context));
      varScope.addSVar("inject_NBL_definition_creation_0_4", new InteropSDefT(classLoader, "random_test$inject_$N$B$L_definition_creation_0_4", context));
      varScope.addSVar("randomly_pick_a_scope_for_NBL_injection_0_0", new InteropSDefT(classLoader, "random_test$randomly_pick_a_scope_for_$N$B$L_injection_0_0", context));
      varScope.addSVar("create_pool_of_all_scopes_0_0", new InteropSDefT(classLoader, "random_test$create_pool_of_all_scopes_0_0", context));
      varScope.addSVar("non_injectable_scope_0_0", new InteropSDefT(classLoader, "random_test$non_injectable_scope_0_0", context));
      varScope.addSVar("write_NBL_injection_0_0", new InteropSDefT(classLoader, "random_test$write_$N$B$L_injection_0_0", context));
      varScope.addSVar("inject_NBL_definitions_0_1", new InteropSDefT(classLoader, "random_test$inject_$N$B$L_definitions_0_1", context));
      varScope.addSVar("read_and_search_tree_0_3", new InteropSDefT(classLoader, "random_test$read_and_search_tree_0_3", context));
      varScope.addSVar("update_scopes_0_0", new InteropSDefT(classLoader, "random_test$update_scopes_0_0", context));
      varScope.addSVar("inject_NBL_definition_0_3", new InteropSDefT(classLoader, "random_test$inject_$N$B$L_definition_0_3", context));
      varScope.addSVar("inject_alternative_0_2", new InteropSDefT(classLoader, "random_test$inject_alternative_0_2", context));
      varScope.addSVar("inject_alternative_aux_0_3", new InteropSDefT(classLoader, "random_test$inject_alternative_aux_0_3", context));
      varScope.addSVar("build_alternative_0_2", new InteropSDefT(classLoader, "random_test$build_alternative_0_2", context));
      varScope.addSVar("construct_result_0_2", new InteropSDefT(classLoader, "random_test$construct_result_0_2", context));
      varScope.addSVar("build_definition_body_0_1", new InteropSDefT(classLoader, "random_test$build_definition_body_0_1", context));
      varScope.addSVar("build_alternative_body_0_6", new InteropSDefT(classLoader, "random_test$build_alternative_body_0_6", context));
      varScope.addSVar("randomly_pick_alternative_0_1", new InteropSDefT(classLoader, "random_test$randomly_pick_alternative_0_1", context));
      varScope.addSVar("get_injections_per_iter_0_3", new InteropSDefT(classLoader, "random_test$get_injections_per_iter_0_3", context));
      varScope.addSVar("is_injectable_sort_for_0_3", new InteropSDefT(classLoader, "random_test$is_injectable_sort_for_0_3", context));
      varScope.addSVar("check_if_parent_sorts_coincede_0_3", new InteropSDefT(classLoader, "random_test$check_if_parent_sorts_coincede_0_3", context));
      varScope.addSVar("is_itersort_in_SDF_0_0", new InteropSDefT(classLoader, "random_test$is_itersort_in_$S$D$F_0_0", context));
      varScope.addSVar("SDF_sort_0_0", new InteropSDefT(classLoader, "random_test$$S$D$F_sort_0_0", context));
      varScope.addSVar("is_or_leads_to_injectable_sort_0_0", new InteropSDefT(classLoader, "random_test$is_or_leads_to_injectable_sort_0_0", context));
      varScope.addSVar("has_productions_with_no_constructors_0_0", new InteropSDefT(classLoader, "random_test$has_productions_with_no_constructors_0_0", context));
      varScope.addSVar("is_injectable_sort_0_0", new InteropSDefT(classLoader, "random_test$is_injectable_sort_0_0", context));
      varScope.addSVar("term_scopes_namespace_0_1", new InteropSDefT(classLoader, "random_test$term_scopes_namespace_0_1", context));
      varScope.addSVar("match_error_and_fix_0_2", new InteropSDefT(classLoader, "random_test$match_error_and_fix_0_2", context));
      varScope.addSVar("fix_0_3", new InteropSDefT(classLoader, "random_test$fix_0_3", context));
      varScope.addSVar("fixEach_0_3", new InteropSDefT(classLoader, "random_test$fix$Each_0_3", context));
      varScope.addSVar("change_fix_0_2", new InteropSDefT(classLoader, "random_test$change_fix_0_2", context));
      varScope.addSVar("remove_one_0_2", new InteropSDefT(classLoader, "random_test$remove_one_0_2", context));
      varScope.addSVar("remove_one_from_list_0_2", new InteropSDefT(classLoader, "random_test$remove_one_from_list_0_2", context));
      varScope.addSVar("process_location_0_3", new InteropSDefT(classLoader, "random_test$process_location_0_3", context));
      varScope.addSVar("translate_fix_0_1", new InteropSDefT(classLoader, "random_test$translate_fix_0_1", context));
      varScope.addSVar("fix_program_0_3", new InteropSDefT(classLoader, "random_test$fix_program_0_3", context));
      varScope.addSVar("match_error_node_0_0", new InteropSDefT(classLoader, "random_test$match_error_node_0_0", context));
      varScope.addSVar("process_errorMatchCons_0_3", new InteropSDefT(classLoader, "random_test$process_error$Match$Cons_0_3", context));
      varScope.addSVar("process_error_node_0_2", new InteropSDefT(classLoader, "random_test$process_error_node_0_2", context));
      varScope.addSVar("match_error_0_0", new InteropSDefT(classLoader, "random_test$match_error_0_0", context));
      varScope.addSVar("match_error_rec_0_2", new InteropSDefT(classLoader, "random_test$match_error_rec_0_2", context));
      varScope.addSVar("match_error_rec2_0_3", new InteropSDefT(classLoader, "random_test$match_error_rec2_0_3", context));
      varScope.addSVar("extract_settings_0_0", new InteropSDefT(classLoader, "random_test$extract_settings_0_0", context));
      varScope.addSVar("extractS_0_0_fragment_0", new InteropSDefT(classLoader, "random_test$extract$S_0_0_fragment_0", context));
      varScope.addSVar("extractS_0_0", new InteropSDefT(classLoader, "random_test$extract$S_0_0", context));
      varScope.addSVar("build_xeger_0_0_fragment_0", new InteropSDefT(classLoader, "random_test$build_xeger_0_0_fragment_0", context));
      varScope.addSVar("build_xeger_0_0", new InteropSDefT(classLoader, "random_test$build_xeger_0_0", context));
      varScope.addSVar("help_xeger_iter_0_0_fragment_0", new InteropSDefT(classLoader, "random_test$help_xeger_iter_0_0_fragment_0", context));
      varScope.addSVar("help_xeger_iter_0_0", new InteropSDefT(classLoader, "random_test$help_xeger_iter_0_0", context));
      varScope.addSVar("escape_lit_string_0_0", new InteropSDefT(classLoader, "random_test$escape_lit_string_0_0", context));
      varScope.addSVar("escape_regex_operators_0_0", new InteropSDefT(classLoader, "random_test$escape_regex_operators_0_0", context));
      varScope.addSVar("build_xeger_sort_0_0", new InteropSDefT(classLoader, "random_test$build_xeger_sort_0_0", context));
      varScope.addSVar("special_string_concat_0_0", new InteropSDefT(classLoader, "random_test$special_string_concat_0_0", context));
      varScope.addSVar("generate_terminal_0_0", new InteropSDefT(classLoader, "random_test$generate_terminal_0_0", context));
      varScope.addSVar("use_xeger_0_0", new InteropSDefT(classLoader, "random_test$use_xeger_0_0", context));
      varScope.addSVar("numberXeger_1_0", new InteropSDefT(classLoader, "random_test$number$Xeger_1_0", context));
      varScope.addSVar("pick_a_random_terminal_0_0", new InteropSDefT(classLoader, "random_test$pick_a_random_terminal_0_0", context));
      varScope.addSVar("pre_generate_terminals_0_1", new InteropSDefT(classLoader, "random_test$pre_generate_terminals_0_1", context));
      varScope.addSVar("lex_to_dr_0_1", new InteropSDefT(classLoader, "random_test$lex_to_dr_0_1", context));
      varScope.addSVar("write_lex_to_dr_0_0", new InteropSDefT(classLoader, "random_test$write_lex_to_dr_0_0", context));
      varScope.addSVar("pick_prod_lower_level_0_0", new InteropSDefT(classLoader, "random_test$pick_prod_lower_level_0_0", context));
      varScope.addSVar("is_prohibited_0_2", new InteropSDefT(classLoader, "random_test$is_prohibited_0_2", context));
      varScope.addSVar("check_priorities_0_0", new InteropSDefT(classLoader, "random_test$check_priorities_0_0", context));
      varScope.addSVar("distribute_rejections_0_3", new InteropSDefT(classLoader, "random_test$distribute_rejections_0_3", context));
      varScope.addSVar("generate_random_maxima_0_1", new InteropSDefT(classLoader, "random_test$generate_random_maxima_0_1", context));
      varScope.addSVar("generate_random_percentages_rec_0_0", new InteropSDefT(classLoader, "random_test$generate_random_percentages_rec_0_0", context));
      varScope.addSVar("generate_program_0_6", new InteropSDefT(classLoader, "random_test$generate_program_0_6", context));
      varScope.addSVar("help_strategy_0_6", new InteropSDefT(classLoader, "random_test$help_strategy_0_6", context));
      varScope.addSVar("generate_term_0_0", new InteropSDefT(classLoader, "random_test$generate_term_0_0", context));
      varScope.addSVar("is_specialASTTerm_0_5", new InteropSDefT(classLoader, "random_test$is_special$A$S$T$Term_0_5", context));
      varScope.addSVar("update_cons_coverage_0_0", new InteropSDefT(classLoader, "random_test$update_cons_coverage_0_0", context));
      varScope.addSVar("write_CoveredCons_0_0", new InteropSDefT(classLoader, "random_test$write_$Covered$Cons_0_0", context));
      varScope.addSVar("get_and_distribute_rejections_0_0", new InteropSDefT(classLoader, "random_test$get_and_distribute_rejections_0_0", context));
      varScope.addSVar("build_weight_list_0_0", new InteropSDefT(classLoader, "random_test$build_weight_list_0_0", context));
      varScope.addSVar("choose_alternative_0_1", new InteropSDefT(classLoader, "random_test$choose_alternative_0_1", context));
      varScope.addSVar("get_SDF_constructor_0_0", new InteropSDefT(classLoader, "random_test$get_$S$D$F_constructor_0_0", context));
      varScope.addSVar("process_ASTTerm_0_5", new InteropSDefT(classLoader, "random_test$process_$A$S$T$Term_0_5", context));
      varScope.addSVar("write_rule_0_5", new InteropSDefT(classLoader, "random_test$write_rule_0_5", context));
      varScope.addSVar("write_n_rule_0_4", new InteropSDefT(classLoader, "random_test$write_n_rule_0_4", context));
      varScope.addSVar("filter_prods_0_0", new InteropSDefT(classLoader, "random_test$filter_prods_0_0", context));
      varScope.addSVar("filter_prod_help_0_0", new InteropSDefT(classLoader, "random_test$filter_prod_help_0_0", context));
      varScope.addSVar("main_0_0", new InteropSDefT(classLoader, "random_test$main_0_0", context));
      varScope.addSVar("switch_input_0_0", new InteropSDefT(classLoader, "random_test$switch_input_0_0", context));
      varScope.addSVar("write_shrink_sort_0_0", new InteropSDefT(classLoader, "random_test$write_shrink_sort_0_0", context));
      varScope.addSVar("parse_settings_0_0", new InteropSDefT(classLoader, "random_test$parse_settings_0_0", context));
      varScope.addSVar("parse_pp_0_0", new InteropSDefT(classLoader, "random_test$parse_pp_0_0", context));
      varScope.addSVar("generate_random_tests_0_0", new InteropSDefT(classLoader, "random_test$generate_random_tests_0_0", context));
      varScope.addSVar("generate_random_test_0_1", new InteropSDefT(classLoader, "random_test$generate_random_test_0_1", context));
      varScope.addSVar("check_results_0_11", new InteropSDefT(classLoader, "random_test$check_results_0_11", context));
      varScope.addSVar("print_parse_cycle_0_3", new InteropSDefT(classLoader, "random_test$print_parse_cycle_0_3", context));
      varScope.addSVar("write_test_0_5", new InteropSDefT(classLoader, "random_test$write_test_0_5", context));
      varScope.addSVar("PROJECTPATH_0_0", new InteropSDefT(classLoader, "random_test$$P$R$O$J$E$C$T$P$A$T$H_0_0", context));
      varScope.addSVar("CACHEPATHS_0_0", new InteropSDefT(classLoader, "random_test$$C$A$C$H$E$P$A$T$H$S_0_0", context));
      varScope.addSVar("pp_program_0_0", new InteropSDefT(classLoader, "random_test$pp_program_0_0", context));
      varScope.addSVar("numberItems_0_0", new InteropSDefT(classLoader, "random_test$number$Items_0_0", context));
      varScope.addSVar("check_for_amb_0_1", new InteropSDefT(classLoader, "random_test$check_for_amb_0_1", context));
      varScope.addSVar("pp_amb_0_0", new InteropSDefT(classLoader, "random_test$pp_amb_0_0", context));
      varScope.addSVar("randomly_pick_from_list_0_0", new InteropSDefT(classLoader, "random_test$randomly_pick_from_list_0_0", context));
      varScope.addSVar("get_item_from_list_0_1", new InteropSDefT(classLoader, "random_test$get_item_from_list_0_1", context));
      varScope.addSVar("get_item_from_list_loopc_0_0", new InteropSDefT(classLoader, "random_test$get_item_from_list_loopc_0_0", context));
      varScope.addSVar("write_loop_iterator_0_0", new InteropSDefT(classLoader, "random_test$write_loop_iterator_0_0", context));
      varScope.addSVar("read_language_0_0", new InteropSDefT(classLoader, "random_test$read_language_0_0", context));
      varScope.addSVar("clear_fix_runtag_0_0", new InteropSDefT(classLoader, "random_test$clear_fix_runtag_0_0", context));
      varScope.addSVar("inc_fix_runtag_0_0", new InteropSDefT(classLoader, "random_test$inc_fix_runtag_0_0", context));
      varScope.addSVar("write_FixRuntag_0_0", new InteropSDefT(classLoader, "random_test$write_$Fix$Runtag_0_0", context));
      varScope.addSVar("find_start_symbols_0_0", new InteropSDefT(classLoader, "random_test$find_start_symbols_0_0", context));
      varScope.addSVar("read_sdf_0_0", new InteropSDefT(classLoader, "random_test$read_sdf_0_0", context));
      varScope.addSVar("read_priorities_0_0", new InteropSDefT(classLoader, "random_test$read_priorities_0_0", context));
      varScope.addSVar("propagate_priorities_0_0", new InteropSDefT(classLoader, "random_test$propagate_priorities_0_0", context));
      varScope.addSVar("propagate_priorities_rec_0_0", new InteropSDefT(classLoader, "random_test$propagate_priorities_rec_0_0", context));
      varScope.addSVar("write_Priority_rule_0_0", new InteropSDefT(classLoader, "random_test$write_$Priority_rule_0_0", context));
      varScope.addSVar("read_priority_0_0", new InteropSDefT(classLoader, "random_test$read_priority_0_0", context));
      varScope.addSVar("topdown_read_sdf_0_2", new InteropSDefT(classLoader, "random_test$topdown_read_sdf_0_2", context));
      varScope.addSVar("param_rewrite_sdf_0_2", new InteropSDefT(classLoader, "random_test$param_rewrite_sdf_0_2", context));
      varScope.addSVar("read_imports_0_1", new InteropSDefT(classLoader, "random_test$read_imports_0_1", context));
      varScope.addSVar("rec_rename_module_0_1", new InteropSDefT(classLoader, "random_test$rec_rename_module_0_1", context));
      varScope.addSVar("rename_module_0_1", new InteropSDefT(classLoader, "random_test$rename_module_0_1", context));
      varScope.addSVar("rec_replace_params_0_1", new InteropSDefT(classLoader, "random_test$rec_replace_params_0_1", context));
      varScope.addSVar("replace_param_0_2", new InteropSDefT(classLoader, "random_test$replace_param_0_2", context));
      varScope.addSVar("read_prod_0_0", new InteropSDefT(classLoader, "random_test$read_prod_0_0", context));
      varScope.addSVar("remove_cflex_sugar_0_0", new InteropSDefT(classLoader, "random_test$remove_cflex_sugar_0_0", context));
      varScope.addSVar("declare_lex_0_0", new InteropSDefT(classLoader, "random_test$declare_lex_0_0", context));
      varScope.addSVar("check_lex_attrs_0_2", new InteropSDefT(classLoader, "random_test$check_lex_attrs_0_2", context));
      varScope.addSVar("declare_cf_0_0", new InteropSDefT(classLoader, "random_test$declare_cf_0_0", context));
      varScope.addSVar("record_inverse_0_0", new InteropSDefT(classLoader, "random_test$record_inverse_0_0", context));
      varScope.addSVar("extract_sorts_0_0", new InteropSDefT(classLoader, "random_test$extract_sorts_0_0", context));
      varScope.addSVar("check_cf_attrs_0_2", new InteropSDefT(classLoader, "random_test$check_cf_attrs_0_2", context));
      varScope.addSVar("find_terminal_paths_0_1", new InteropSDefT(classLoader, "random_test$find_terminal_paths_0_1", context));
      varScope.addSVar("recognize_sort_0_0", new InteropSDefT(classLoader, "random_test$recognize_sort_0_0", context));
      varScope.addSVar("change_param_sort_0_0", new InteropSDefT(classLoader, "random_test$change_param_sort_0_0", context));
      varScope.addSVar("find_terminal_path_0_1", new InteropSDefT(classLoader, "random_test$find_terminal_path_0_1", context));
      varScope.addSVar("is_terminal_path_0_2", new InteropSDefT(classLoader, "random_test$is_terminal_path_0_2", context));
      varScope.addSVar("GreaterTerminalLevel_0_0", new InteropSDefT(classLoader, "random_test$$Greater$Terminal$Level_0_0", context));
      varScope.addSVar("get_SpecialASTTerm_cons_0_2", new InteropSDefT(classLoader, "random_test$get_$Special$A$S$T$Term_cons_0_2", context));
      varScope.addSVar("get_SpecialASTTerm_cons_rec_0_2", new InteropSDefT(classLoader, "random_test$get_$Special$A$S$T$Term_cons_rec_0_2", context));
      varScope.addSVar("NBLType_0_0", new InteropSDefT(classLoader, "random_test$$N$B$L$Type_0_0", context));
      varScope.addSVar("all_keys_CoveredCons_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$Covered$Cons_0_0", context));
      varScope.addSVar("Language_0_0", new InteropSDefT(classLoader, "random_test$$Language_0_0", context));
      varScope.addSVar("aux_Language_0_1", new InteropSDefT(classLoader, "random_test$aux_$Language_0_1", context));
      varScope.addSVar("ShrinkError_0_0", new InteropSDefT(classLoader, "random_test$$Shrink$Error_0_0", context));
      varScope.addSVar("aux_ShrinkError_0_1", new InteropSDefT(classLoader, "random_test$aux_$Shrink$Error_0_1", context));
      varScope.addSVar("bagof_NBLKey2Scope_0_0", new InteropSDefT(classLoader, "random_test$bagof_$N$B$L$Key2$Scope_0_0", context));
      varScope.addSVar("NBLKey2Scope_0_0", new InteropSDefT(classLoader, "random_test$$N$B$L$Key2$Scope_0_0", context));
      varScope.addSVar("aux_NBLKey2Scope_0_2", new InteropSDefT(classLoader, "random_test$aux_$N$B$L$Key2$Scope_0_2", context));
      varScope.addSVar("bagof_NBLKey2Refer_0_0", new InteropSDefT(classLoader, "random_test$bagof_$N$B$L$Key2$Refer_0_0", context));
      varScope.addSVar("aux_NBLKey2Refer_0_2", new InteropSDefT(classLoader, "random_test$aux_$N$B$L$Key2$Refer_0_2", context));
      varScope.addSVar("bagof_NBLNamespace2DefKey_0_0", new InteropSDefT(classLoader, "random_test$bagof_$N$B$L$Namespace2$Def$Key_0_0", context));
      varScope.addSVar("aux_NBLNamespace2DefKey_0_2", new InteropSDefT(classLoader, "random_test$aux_$N$B$L$Namespace2$Def$Key_0_2", context));
      varScope.addSVar("NBLKey2Define_0_0", new InteropSDefT(classLoader, "random_test$$N$B$L$Key2$Define_0_0", context));
      varScope.addSVar("aux_NBLKey2Define_0_2", new InteropSDefT(classLoader, "random_test$aux_$N$B$L$Key2$Define_0_2", context));
      varScope.addSVar("bagof_DefineParentSorts_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Define$Parent$Sorts_0_0", context));
      varScope.addSVar("aux_DefineParentSorts_0_2", new InteropSDefT(classLoader, "random_test$aux_$Define$Parent$Sorts_0_2", context));
      varScope.addSVar("bagof_Namespace_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Namespace_0_0", context));
      varScope.addSVar("aux_Namespace_0_3", new InteropSDefT(classLoader, "random_test$aux_$Namespace_0_3", context));
      varScope.addSVar("Scope2Key_0_0", new InteropSDefT(classLoader, "random_test$$Scope2$Key_0_0", context));
      varScope.addSVar("aux_Scope2Key_0_2", new InteropSDefT(classLoader, "random_test$aux_$Scope2$Key_0_2", context));
      varScope.addSVar("bagof_CurrentScope_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Current$Scope_0_0", context));
      varScope.addSVar("CurrentScope_0_0", new InteropSDefT(classLoader, "random_test$$Current$Scope_0_0", context));
      varScope.addSVar("aux_CurrentScope_0_2", new InteropSDefT(classLoader, "random_test$aux_$Current$Scope_0_2", context));
      varScope.addSVar("all_keys_NBLInjection_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$N$B$L$Injection_0_0", context));
      varScope.addSVar("ErrorMatchParam_0_0", new InteropSDefT(classLoader, "random_test$$Error$Match$Param_0_0", context));
      varScope.addSVar("aux_ErrorMatchParam_0_3", new InteropSDefT(classLoader, "random_test$aux_$Error$Match$Param_0_3", context));
      varScope.addSVar("MaxCount_0_0", new InteropSDefT(classLoader, "random_test$$Max$Count_0_0", context));
      varScope.addSVar("aux_MaxCount_0_1", new InteropSDefT(classLoader, "random_test$aux_$Max$Count_0_1", context));
      varScope.addSVar("MaxIter_0_0", new InteropSDefT(classLoader, "random_test$$Max$Iter_0_0", context));
      varScope.addSVar("aux_MaxIter_0_1", new InteropSDefT(classLoader, "random_test$aux_$Max$Iter_0_1", context));
      varScope.addSVar("MaxRec_0_0", new InteropSDefT(classLoader, "random_test$$Max$Rec_0_0", context));
      varScope.addSVar("aux_MaxRec_0_1", new InteropSDefT(classLoader, "random_test$aux_$Max$Rec_0_1", context));
      varScope.addSVar("ErrorSourceNodePattern_0_0", new InteropSDefT(classLoader, "random_test$$Error$Source$Node$Pattern_0_0", context));
      varScope.addSVar("aux_ErrorSourceNodePattern_0_2", new InteropSDefT(classLoader, "random_test$aux_$Error$Source$Node$Pattern_0_2", context));
      varScope.addSVar("ErrorCorrectingAction_0_0", new InteropSDefT(classLoader, "random_test$$Error$Correcting$Action_0_0", context));
      varScope.addSVar("aux_ErrorCorrectingAction_0_2", new InteropSDefT(classLoader, "random_test$aux_$Error$Correcting$Action_0_2", context));
      varScope.addSVar("all_keys_ErrorMessagePattern_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$Error$Message$Pattern_0_0", context));
      varScope.addSVar("ErrorMessagePattern_0_0", new InteropSDefT(classLoader, "random_test$$Error$Message$Pattern_0_0", context));
      varScope.addSVar("aux_ErrorMessagePattern_0_2", new InteropSDefT(classLoader, "random_test$aux_$Error$Message$Pattern_0_2", context));
      varScope.addSVar("TerminalPoolSize_0_0", new InteropSDefT(classLoader, "random_test$$Terminal$Pool$Size_0_0", context));
      varScope.addSVar("aux_TerminalPoolSize_0_1", new InteropSDefT(classLoader, "random_test$aux_$Terminal$Pool$Size_0_1", context));
      varScope.addSVar("NumberOfRuns_0_0", new InteropSDefT(classLoader, "random_test$$Number$Of$Runs_0_0", context));
      varScope.addSVar("aux_NumberOfRuns_0_1", new InteropSDefT(classLoader, "random_test$aux_$Number$Of$Runs_0_1", context));
      varScope.addSVar("IgnoreSorts_0_0", new InteropSDefT(classLoader, "random_test$$Ignore$Sorts_0_0", context));
      varScope.addSVar("aux_IgnoreSorts_0_2", new InteropSDefT(classLoader, "random_test$aux_$Ignore$Sorts_0_2", context));
      varScope.addSVar("XegerCount_0_0", new InteropSDefT(classLoader, "random_test$$Xeger$Count_0_0", context));
      varScope.addSVar("aux_XegerCount_0_1", new InteropSDefT(classLoader, "random_test$aux_$Xeger$Count_0_1", context));
      varScope.addSVar("bagof_Terminals_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Terminals_0_0", context));
      varScope.addSVar("aux_Terminals_0_2", new InteropSDefT(classLoader, "random_test$aux_$Terminals_0_2", context));
      varScope.addSVar("lex_to_dr_Count_0_0", new InteropSDefT(classLoader, "random_test$lex_to_dr_$Count_0_0", context));
      varScope.addSVar("aux_lex_to_dr_Count_0_1", new InteropSDefT(classLoader, "random_test$aux_lex_to_dr_$Count_0_1", context));
      varScope.addSVar("ConsCount_0_0", new InteropSDefT(classLoader, "random_test$$Cons$Count_0_0", context));
      varScope.addSVar("aux_ConsCount_0_1", new InteropSDefT(classLoader, "random_test$aux_$Cons$Count_0_1", context));
      varScope.addSVar("ProdWeight_0_0", new InteropSDefT(classLoader, "random_test$$Prod$Weight_0_0", context));
      varScope.addSVar("aux_ProdWeight_0_1", new InteropSDefT(classLoader, "random_test$aux_$Prod$Weight_0_1", context));
      varScope.addSVar("bagof_ShrinkSort_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Shrink$Sort_0_0", context));
      varScope.addSVar("aux_ShrinkSort_0_2", new InteropSDefT(classLoader, "random_test$aux_$Shrink$Sort_0_2", context));
      varScope.addSVar("ChanceOfFailure_0_0", new InteropSDefT(classLoader, "random_test$$Chance$Of$Failure_0_0", context));
      varScope.addSVar("aux_ChanceOfFailure_0_1", new InteropSDefT(classLoader, "random_test$aux_$Chance$Of$Failure_0_1", context));
      varScope.addSVar("NonInjectable_0_0", new InteropSDefT(classLoader, "random_test$$Non$Injectable_0_0", context));
      varScope.addSVar("aux_NonInjectable_0_6", new InteropSDefT(classLoader, "random_test$aux_$Non$Injectable_0_6", context));
      varScope.addSVar("ItemCount_0_0", new InteropSDefT(classLoader, "random_test$$Item$Count_0_0", context));
      varScope.addSVar("aux_ItemCount_0_1", new InteropSDefT(classLoader, "random_test$aux_$Item$Count_0_1", context));
      varScope.addSVar("LoopIterator_0_0", new InteropSDefT(classLoader, "random_test$$Loop$Iterator_0_0", context));
      varScope.addSVar("aux_LoopIterator_0_1", new InteropSDefT(classLoader, "random_test$aux_$Loop$Iterator_0_1", context));
      varScope.addSVar("FixRuntag_0_0", new InteropSDefT(classLoader, "random_test$$Fix$Runtag_0_0", context));
      varScope.addSVar("aux_FixRuntag_0_1", new InteropSDefT(classLoader, "random_test$aux_$Fix$Runtag_0_1", context));
      varScope.addSVar("all_keys_SDFStart_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$S$D$F$Start_0_0", context));
      varScope.addSVar("AllConsCount_0_0", new InteropSDefT(classLoader, "random_test$$All$Cons$Count_0_0", context));
      varScope.addSVar("aux_AllConsCount_0_1", new InteropSDefT(classLoader, "random_test$aux_$All$Cons$Count_0_1", context));
      varScope.addSVar("all_keys_Priority_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$Priority_0_0", context));
      varScope.addSVar("bagof_Priority_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Priority_0_0", context));
      varScope.addSVar("aux_Priority_0_4", new InteropSDefT(classLoader, "random_test$aux_$Priority_0_4", context));
      varScope.addSVar("ModulesRead_0_0", new InteropSDefT(classLoader, "random_test$$Modules$Read_0_0", context));
      varScope.addSVar("aux_ModulesRead_0_2", new InteropSDefT(classLoader, "random_test$aux_$Modules$Read_0_2", context));
      varScope.addSVar("all_keys_LexSorts_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$Lex$Sorts_0_0", context));
      varScope.addSVar("bagof_LexSorts_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Lex$Sorts_0_0", context));
      varScope.addSVar("LexSorts_0_0", new InteropSDefT(classLoader, "random_test$$Lex$Sorts_0_0", context));
      varScope.addSVar("aux_LexSorts_0_2", new InteropSDefT(classLoader, "random_test$aux_$Lex$Sorts_0_2", context));
      varScope.addSVar("ConsLex_0_0", new InteropSDefT(classLoader, "random_test$$Cons$Lex_0_0", context));
      varScope.addSVar("aux_ConsLex_0_2", new InteropSDefT(classLoader, "random_test$aux_$Cons$Lex_0_2", context));
      varScope.addSVar("LexCons_0_0", new InteropSDefT(classLoader, "random_test$$Lex$Cons_0_0", context));
      varScope.addSVar("aux_LexCons_0_3", new InteropSDefT(classLoader, "random_test$aux_$Lex$Cons_0_3", context));
      varScope.addSVar("bagof_LexReject_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Lex$Reject_0_0", context));
      varScope.addSVar("aux_LexReject_0_2", new InteropSDefT(classLoader, "random_test$aux_$Lex$Reject_0_2", context));
      varScope.addSVar("all_keys_CFSorts_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$C$F$Sorts_0_0", context));
      varScope.addSVar("bagof_CFSorts_0_0", new InteropSDefT(classLoader, "random_test$bagof_$C$F$Sorts_0_0", context));
      varScope.addSVar("CFSorts_0_0", new InteropSDefT(classLoader, "random_test$$C$F$Sorts_0_0", context));
      varScope.addSVar("aux_CFSorts_0_2", new InteropSDefT(classLoader, "random_test$aux_$C$F$Sorts_0_2", context));
      varScope.addSVar("all_keys_ConsKey_0_0", new InteropSDefT(classLoader, "random_test$all_keys_$Cons$Key_0_0", context));
      varScope.addSVar("ConsKey_0_0", new InteropSDefT(classLoader, "random_test$$Cons$Key_0_0", context));
      varScope.addSVar("aux_ConsKey_0_2", new InteropSDefT(classLoader, "random_test$aux_$Cons$Key_0_2", context));
      varScope.addSVar("bagof_ConsCF_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Cons$C$F_0_0", context));
      varScope.addSVar("ConsCF_0_0", new InteropSDefT(classLoader, "random_test$$Cons$C$F_0_0", context));
      varScope.addSVar("aux_ConsCF_0_2", new InteropSDefT(classLoader, "random_test$aux_$Cons$C$F_0_2", context));
      varScope.addSVar("CFCons_0_0", new InteropSDefT(classLoader, "random_test$$C$F$Cons_0_0", context));
      varScope.addSVar("aux_CFCons_0_3", new InteropSDefT(classLoader, "random_test$aux_$C$F$Cons_0_3", context));
      varScope.addSVar("SpecialASTTerm_0_0", new InteropSDefT(classLoader, "random_test$$Special$A$S$T$Term_0_0", context));
      varScope.addSVar("aux_SpecialASTTerm_0_3", new InteropSDefT(classLoader, "random_test$aux_$Special$A$S$T$Term_0_3", context));
      varScope.addSVar("bagof_TerminalPath_0_0", new InteropSDefT(classLoader, "random_test$bagof_$Terminal$Path_0_0", context));
      varScope.addSVar("TerminalPath_0_0", new InteropSDefT(classLoader, "random_test$$Terminal$Path_0_0", context));
      varScope.addSVar("aux_TerminalPath_0_2", new InteropSDefT(classLoader, "random_test$aux_$Terminal$Path_0_2", context));
    }
  }
}